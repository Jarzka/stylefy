{
"version":3,
"file":"goog.base.js",
"lineCount":2095,
"mappings":"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",
"sources":["goog/base.js"],
"sourcesContent":["// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Bootstrap for the Google JS Library (Closure).\n *\n * In uncompiled mode base.js will attempt to load Closure's deps file, unless\n * the global <code>CLOSURE_NO_DEPS</code> is set to true.  This allows projects\n * to include their own deps file(s) from different locations.\n *\n * Avoid including base.js more than once. This is strictly discouraged and not\n * supported. goog.require(...) won't work properly in that case.\n *\n * @provideGoog\n */\n\n\n/**\n * @define {boolean} Overridden to true by the compiler.\n */\nvar COMPILED = false;\n\n\n/**\n * Base namespace for the Closure library.  Checks to see goog is already\n * defined in the current scope before assigning to prevent clobbering if\n * base.js is loaded more than once.\n *\n * @const\n */\nvar goog = goog || {};\n\n/**\n * Reference to the global object.\n * https://www.ecma-international.org/ecma-262/9.0/index.html#sec-global-object\n *\n * More info on this implementation here:\n * https://docs.google.com/document/d/1NAeW4Wk7I7FV0Y2tcUFvQdGMc89k2vdgSXInw8_nvCI/edit\n *\n * @const\n * @suppress {undefinedVars} self won't be referenced unless `this` is falsy.\n * @type {!Global}\n */\ngoog.global =\n    // Check `this` first for backwards compatibility.\n    // Valid unless running as an ES module or in a function wrapper called\n    //   without setting `this` properly.\n    // Note that base.js can't usefully be imported as an ES module, but it may\n    // be compiled into bundles that are loadable as ES modules.\n    this ||\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n    // For in-page browser environments and workers.\n    self;\n\n\n/**\n * A hook for overriding the define values in uncompiled mode.\n *\n * In uncompiled mode, `CLOSURE_UNCOMPILED_DEFINES` may be defined before\n * loading base.js.  If a key is defined in `CLOSURE_UNCOMPILED_DEFINES`,\n * `goog.define` will use the value instead of the default value.  This\n * allows flags to be overwritten without compilation (this is normally\n * accomplished with the compiler's \"define\" flag).\n *\n * Example:\n * <pre>\n *   var CLOSURE_UNCOMPILED_DEFINES = {'goog.DEBUG': false};\n * </pre>\n *\n * @type {Object<string, (string|number|boolean)>|undefined}\n */\ngoog.global.CLOSURE_UNCOMPILED_DEFINES;\n\n\n/**\n * A hook for overriding the define values in uncompiled or compiled mode,\n * like CLOSURE_UNCOMPILED_DEFINES but effective in compiled code.  In\n * uncompiled code CLOSURE_UNCOMPILED_DEFINES takes precedence.\n *\n * Also unlike CLOSURE_UNCOMPILED_DEFINES the values must be number, boolean or\n * string literals or the compiler will emit an error.\n *\n * While any @define value may be set, only those set with goog.define will be\n * effective for uncompiled code.\n *\n * Example:\n * <pre>\n *   var CLOSURE_DEFINES = {'goog.DEBUG': false} ;\n * </pre>\n *\n * @type {Object<string, (string|number|boolean)>|undefined}\n */\ngoog.global.CLOSURE_DEFINES;\n\n\n/**\n * Returns true if the specified value is not undefined.\n *\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is defined.\n * @deprecated Use `val !== undefined` instead.\n */\ngoog.isDef = function(val) {\n  // void 0 always evaluates to undefined and hence we do not need to depend on\n  // the definition of the global variable named 'undefined'.\n  return val !== void 0;\n};\n\n/**\n * Returns true if the specified value is a string.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a string.\n * @deprecated Use `typeof val === 'string'` instead.\n */\ngoog.isString = function(val) {\n  return typeof val == 'string';\n};\n\n\n/**\n * Returns true if the specified value is a boolean.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is boolean.\n * @deprecated Use `typeof val === 'boolean'` instead.\n */\ngoog.isBoolean = function(val) {\n  return typeof val == 'boolean';\n};\n\n\n/**\n * Returns true if the specified value is a number.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a number.\n * @deprecated Use `typeof val === 'number'` instead.\n */\ngoog.isNumber = function(val) {\n  return typeof val == 'number';\n};\n\n\n/**\n * Builds an object structure for the provided namespace path, ensuring that\n * names that already exist are not overwritten. For example:\n * \"a.b.c\" -> a = {};a.b={};a.b.c={};\n * Used by goog.provide and goog.exportSymbol.\n * @param {string} name name of the object that this file defines.\n * @param {*=} opt_object the object to expose at the end of the path.\n * @param {Object=} opt_objectToExportTo The object to add the path to; default\n *     is `goog.global`.\n * @private\n */\ngoog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {\n  var parts = name.split('.');\n  var cur = opt_objectToExportTo || goog.global;\n\n  // Internet Explorer exhibits strange behavior when throwing errors from\n  // methods externed in this manner.  See the testExportSymbolExceptions in\n  // base_test.html for an example.\n  if (!(parts[0] in cur) && typeof cur.execScript != 'undefined') {\n    cur.execScript('var ' + parts[0]);\n  }\n\n  for (var part; parts.length && (part = parts.shift());) {\n    if (!parts.length && opt_object !== undefined) {\n      // last part and we have an object; use it\n      cur[part] = opt_object;\n    } else if (cur[part] && cur[part] !== Object.prototype[part]) {\n      cur = cur[part];\n    } else {\n      cur = cur[part] = {};\n    }\n  }\n};\n\n\n/**\n * Defines a named value. In uncompiled mode, the value is retrieved from\n * CLOSURE_DEFINES or CLOSURE_UNCOMPILED_DEFINES if the object is defined and\n * has the property specified, and otherwise used the defined defaultValue.\n * When compiled the default can be overridden using the compiler options or the\n * value set in the CLOSURE_DEFINES object. Returns the defined value so that it\n * can be used safely in modules. Note that the value type MUST be either\n * boolean, number, or string.\n *\n * @param {string} name The distinguished name to provide.\n * @param {T} defaultValue\n * @return {T} The defined value.\n * @template T\n */\ngoog.define = function(name, defaultValue) {\n  var value = defaultValue;\n  if (!COMPILED) {\n    var uncompiledDefines = goog.global.CLOSURE_UNCOMPILED_DEFINES;\n    var defines = goog.global.CLOSURE_DEFINES;\n    if (uncompiledDefines &&\n        // Anti DOM-clobbering runtime check (b/37736576).\n        /** @type {?} */ (uncompiledDefines).nodeType === undefined &&\n        Object.prototype.hasOwnProperty.call(uncompiledDefines, name)) {\n      value = uncompiledDefines[name];\n    } else if (\n        defines &&\n        // Anti DOM-clobbering runtime check (b/37736576).\n        /** @type {?} */ (defines).nodeType === undefined &&\n        Object.prototype.hasOwnProperty.call(defines, name)) {\n      value = defines[name];\n    }\n  }\n  return value;\n};\n\n\n/**\n * @define {number} Integer year indicating the set of browser features that are\n * guaranteed to be present.  This is defined to include exactly features that\n * work correctly on all \"modern\" browsers that are stable on January 1 of the\n * specified year.  For example,\n * ```js\n * if (goog.FEATURESET_YEAR >= 2019) {\n *   // use APIs known to be available on all major stable browsers Jan 1, 2019\n * } else {\n *   // polyfill for older browsers\n * }\n * ```\n * This is intended to be the primary define for removing\n * unnecessary browser compatibility code (such as ponyfills and workarounds),\n * and should inform the default value for most other defines:\n * ```js\n * const ASSUME_NATIVE_PROMISE =\n *     goog.define('ASSUME_NATIVE_PROMISE', goog.FEATURESET_YEAR >= 2016);\n * ```\n *\n * The default assumption is that IE9 is the lowest supported browser, which was\n * first available Jan 1, 2012.\n *\n * TODO(user): Reference more thorough documentation when it's available.\n */\ngoog.FEATURESET_YEAR = goog.define('goog.FEATURESET_YEAR', 2012);\n\n\n/**\n * @define {boolean} DEBUG is provided as a convenience so that debugging code\n * that should not be included in a production. It can be easily stripped\n * by specifying --define goog.DEBUG=false to the Closure Compiler aka\n * JSCompiler. For example, most toString() methods should be declared inside an\n * \"if (goog.DEBUG)\" conditional because they are generally used for debugging\n * purposes and it is difficult for the JSCompiler to statically determine\n * whether they are used.\n */\ngoog.DEBUG = goog.define('goog.DEBUG', true);\n\n\n/**\n * @define {string} LOCALE defines the locale being used for compilation. It is\n * used to select locale specific data to be compiled in js binary. BUILD rule\n * can specify this value by \"--define goog.LOCALE=<locale_name>\" as a compiler\n * option.\n *\n * Take into account that the locale code format is important. You should use\n * the canonical Unicode format with hyphen as a delimiter. Language must be\n * lowercase, Language Script - Capitalized, Region - UPPERCASE.\n * There are few examples: pt-BR, en, en-US, sr-Latin-BO, zh-Hans-CN.\n *\n * See more info about locale codes here:\n * http://www.unicode.org/reports/tr35/#Unicode_Language_and_Locale_Identifiers\n *\n * For language codes you should use values defined by ISO 693-1. See it here\n * http://www.w3.org/WAI/ER/IG/ert/iso639.htm. There is only one exception from\n * this rule: the Hebrew language. For legacy reasons the old code (iw) should\n * be used instead of the new code (he).\n *\n */\ngoog.LOCALE = goog.define('goog.LOCALE', 'en');  // default to en\n\n\n/**\n * @define {boolean} Whether this code is running on trusted sites.\n *\n * On untrusted sites, several native functions can be defined or overridden by\n * external libraries like Prototype, Datejs, and JQuery and setting this flag\n * to false forces closure to use its own implementations when possible.\n *\n * If your JavaScript can be loaded by a third party site and you are wary about\n * relying on non-standard implementations, specify\n * \"--define goog.TRUSTED_SITE=false\" to the compiler.\n */\ngoog.TRUSTED_SITE = goog.define('goog.TRUSTED_SITE', true);\n\n\n/**\n * @define {boolean} Whether a project is expected to be running in strict mode.\n *\n * This define can be used to trigger alternate implementations compatible with\n * running in EcmaScript Strict mode or warn about unavailable functionality.\n * @see https://goo.gl/PudQ4y\n *\n */\ngoog.STRICT_MODE_COMPATIBLE = goog.define('goog.STRICT_MODE_COMPATIBLE', false);\n\n\n/**\n * @define {boolean} Whether code that calls {@link goog.setTestOnly} should\n *     be disallowed in the compilation unit.\n */\ngoog.DISALLOW_TEST_ONLY_CODE =\n    goog.define('goog.DISALLOW_TEST_ONLY_CODE', COMPILED && !goog.DEBUG);\n\n\n/**\n * @define {boolean} Whether to use a Chrome app CSP-compliant method for\n *     loading scripts via goog.require. @see appendScriptSrcNode_.\n */\ngoog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING =\n    goog.define('goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING', false);\n\n\n/**\n * Defines a namespace in Closure.\n *\n * A namespace may only be defined once in a codebase. It may be defined using\n * goog.provide() or goog.module().\n *\n * The presence of one or more goog.provide() calls in a file indicates\n * that the file defines the given objects/namespaces.\n * Provided symbols must not be null or undefined.\n *\n * In addition, goog.provide() creates the object stubs for a namespace\n * (for example, goog.provide(\"goog.foo.bar\") will create the object\n * goog.foo.bar if it does not already exist).\n *\n * Build tools also scan for provide/require/module statements\n * to discern dependencies, build dependency files (see deps.js), etc.\n *\n * @see goog.require\n * @see goog.module\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\".\n */\ngoog.provide = function(name) {\n  if (goog.isInModuleLoader_()) {\n    throw new Error('goog.provide cannot be used within a module.');\n  }\n  if (!COMPILED) {\n    // Ensure that the same namespace isn't provided twice.\n    // A goog.module/goog.provide maps a goog.require to a specific file\n    if (goog.isProvided_(name)) {\n      throw new Error('Namespace \"' + name + '\" already declared.');\n    }\n  }\n\n  goog.constructNamespace_(name);\n};\n\n\n/**\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\".\n * @param {Object=} opt_obj The object to embed in the namespace.\n * @private\n */\ngoog.constructNamespace_ = function(name, opt_obj) {\n  if (!COMPILED) {\n    delete goog.implicitNamespaces_[name];\n\n    var namespace = name;\n    while ((namespace = namespace.substring(0, namespace.lastIndexOf('.')))) {\n      if (goog.getObjectByName(namespace)) {\n        break;\n      }\n      goog.implicitNamespaces_[namespace] = true;\n    }\n  }\n\n  goog.exportPath_(name, opt_obj);\n};\n\n\n/**\n * Returns CSP nonce, if set for any script tag.\n * @param {?Window=} opt_window The window context used to retrieve the nonce.\n *     Defaults to global context.\n * @return {string} CSP nonce or empty string if no nonce is present.\n */\ngoog.getScriptNonce = function(opt_window) {\n  if (opt_window && opt_window != goog.global) {\n    return goog.getScriptNonce_(opt_window.document);\n  }\n  if (goog.cspNonce_ === null) {\n    goog.cspNonce_ = goog.getScriptNonce_(goog.global.document);\n  }\n  return goog.cspNonce_;\n};\n\n\n/**\n * According to the CSP3 spec a nonce must be a valid base64 string.\n * @see https://www.w3.org/TR/CSP3/#grammardef-base64-value\n * @private @const\n */\ngoog.NONCE_PATTERN_ = /^[\\w+/_-]+[=]{0,2}$/;\n\n\n/**\n * @private {?string}\n */\ngoog.cspNonce_ = null;\n\n\n/**\n * Returns CSP nonce, if set for any script tag.\n * @param {!Document} doc\n * @return {string} CSP nonce or empty string if no nonce is present.\n * @private\n */\ngoog.getScriptNonce_ = function(doc) {\n  var script = doc.querySelector && doc.querySelector('script[nonce]');\n  if (script) {\n    // Try to get the nonce from the IDL property first, because browsers that\n    // implement additional nonce protection features (currently only Chrome) to\n    // prevent nonce stealing via CSS do not expose the nonce via attributes.\n    // See https://github.com/whatwg/html/issues/2369\n    var nonce = script['nonce'] || script.getAttribute('nonce');\n    if (nonce && goog.NONCE_PATTERN_.test(nonce)) {\n      return nonce;\n    }\n  }\n  return '';\n};\n\n\n/**\n * Module identifier validation regexp.\n * Note: This is a conservative check, it is very possible to be more lenient,\n *   the primary exclusion here is \"/\" and \"\\\" and a leading \".\", these\n *   restrictions are intended to leave the door open for using goog.require\n *   with relative file paths rather than module identifiers.\n * @private\n */\ngoog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;\n\n\n/**\n * Defines a module in Closure.\n *\n * Marks that this file must be loaded as a module and claims the namespace.\n *\n * A namespace may only be defined once in a codebase. It may be defined using\n * goog.provide() or goog.module().\n *\n * goog.module() has three requirements:\n * - goog.module may not be used in the same file as goog.provide.\n * - goog.module must be the first statement in the file.\n * - only one goog.module is allowed per file.\n *\n * When a goog.module annotated file is loaded, it is enclosed in\n * a strict function closure. This means that:\n * - any variables declared in a goog.module file are private to the file\n * (not global), though the compiler is expected to inline the module.\n * - The code must obey all the rules of \"strict\" JavaScript.\n * - the file will be marked as \"use strict\"\n *\n * NOTE: unlike goog.provide, goog.module does not declare any symbols by\n * itself. If declared symbols are desired, use\n * goog.module.declareLegacyNamespace().\n *\n *\n * See the public goog.module proposal: http://goo.gl/Va1hin\n *\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\", is expected but not required.\n * @return {void}\n */\ngoog.module = function(name) {\n  if (typeof name !== 'string' || !name ||\n      name.search(goog.VALID_MODULE_RE_) == -1) {\n    throw new Error('Invalid module identifier');\n  }\n  if (!goog.isInGoogModuleLoader_()) {\n    throw new Error(\n        'Module ' + name + ' has been loaded incorrectly. Note, ' +\n        'modules cannot be loaded as normal scripts. They require some kind of ' +\n        'pre-processing step. You\\'re likely trying to load a module via a ' +\n        'script tag or as a part of a concatenated bundle without rewriting the ' +\n        'module. For more info see: ' +\n        'https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.');\n  }\n  if (goog.moduleLoaderState_.moduleName) {\n    throw new Error('goog.module may only be called once per module.');\n  }\n\n  // Store the module name for the loader.\n  goog.moduleLoaderState_.moduleName = name;\n  if (!COMPILED) {\n    // Ensure that the same namespace isn't provided twice.\n    // A goog.module/goog.provide maps a goog.require to a specific file\n    if (goog.isProvided_(name)) {\n      throw new Error('Namespace \"' + name + '\" already declared.');\n    }\n    delete goog.implicitNamespaces_[name];\n  }\n};\n\n\n/**\n * @param {string} name The module identifier.\n * @return {?} The module exports for an already loaded module or null.\n *\n * Note: This is not an alternative to goog.require, it does not\n * indicate a hard dependency, instead it is used to indicate\n * an optional dependency or to access the exports of a module\n * that has already been loaded.\n * @suppress {missingProvide}\n */\ngoog.module.get = function(name) {\n  return goog.module.getInternal_(name);\n};\n\n\n/**\n * @param {string} name The module identifier.\n * @return {?} The module exports for an already loaded module or null.\n * @private\n */\ngoog.module.getInternal_ = function(name) {\n  if (!COMPILED) {\n    if (name in goog.loadedModules_) {\n      return goog.loadedModules_[name].exports;\n    } else if (!goog.implicitNamespaces_[name]) {\n      var ns = goog.getObjectByName(name);\n      return ns != null ? ns : null;\n    }\n  }\n  return null;\n};\n\n\n/**\n * Types of modules the debug loader can load.\n * @enum {string}\n */\ngoog.ModuleType = {\n  ES6: 'es6',\n  GOOG: 'goog'\n};\n\n\n/**\n * @private {?{\n *   moduleName: (string|undefined),\n *   declareLegacyNamespace:boolean,\n *   type: ?goog.ModuleType\n * }}\n */\ngoog.moduleLoaderState_ = null;\n\n\n/**\n * @private\n * @return {boolean} Whether a goog.module or an es6 module is currently being\n *     initialized.\n */\ngoog.isInModuleLoader_ = function() {\n  return goog.isInGoogModuleLoader_() || goog.isInEs6ModuleLoader_();\n};\n\n\n/**\n * @private\n * @return {boolean} Whether a goog.module is currently being initialized.\n */\ngoog.isInGoogModuleLoader_ = function() {\n  return !!goog.moduleLoaderState_ &&\n      goog.moduleLoaderState_.type == goog.ModuleType.GOOG;\n};\n\n\n/**\n * @private\n * @return {boolean} Whether an es6 module is currently being initialized.\n */\ngoog.isInEs6ModuleLoader_ = function() {\n  var inLoader = !!goog.moduleLoaderState_ &&\n      goog.moduleLoaderState_.type == goog.ModuleType.ES6;\n\n  if (inLoader) {\n    return true;\n  }\n\n  var jscomp = goog.global['$jscomp'];\n\n  if (jscomp) {\n    // jscomp may not have getCurrentModulePath if this is a compiled bundle\n    // that has some of the runtime, but not all of it. This can happen if\n    // optimizations are turned on so the unused runtime is removed but renaming\n    // and Closure pass are off (so $jscomp is still named $jscomp and the\n    // goog.provide/require calls still exist).\n    if (typeof jscomp.getCurrentModulePath != 'function') {\n      return false;\n    }\n\n    // Bundled ES6 module.\n    return !!jscomp.getCurrentModulePath();\n  }\n\n  return false;\n};\n\n\n/**\n * Provide the module's exports as a globally accessible object under the\n * module's declared name.  This is intended to ease migration to goog.module\n * for files that have existing usages.\n * @suppress {missingProvide}\n */\ngoog.module.declareLegacyNamespace = function() {\n  if (!COMPILED && !goog.isInGoogModuleLoader_()) {\n    throw new Error(\n        'goog.module.declareLegacyNamespace must be called from ' +\n        'within a goog.module');\n  }\n  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {\n    throw new Error(\n        'goog.module must be called prior to ' +\n        'goog.module.declareLegacyNamespace.');\n  }\n  goog.moduleLoaderState_.declareLegacyNamespace = true;\n};\n\n\n/**\n * Associates an ES6 module with a Closure module ID so that is available via\n * goog.require. The associated ID  acts like a goog.module ID - it does not\n * create any global names, it is merely available via goog.require /\n * goog.module.get / goog.forwardDeclare / goog.requireType. goog.require and\n * goog.module.get will return the entire module as if it was import *'d. This\n * allows Closure files to reference ES6 modules for the sake of migration.\n *\n * @param {string} namespace\n * @suppress {missingProvide}\n */\ngoog.declareModuleId = function(namespace) {\n  if (!COMPILED) {\n    if (!goog.isInEs6ModuleLoader_()) {\n      throw new Error(\n          'goog.declareModuleId may only be called from ' +\n          'within an ES6 module');\n    }\n    if (goog.moduleLoaderState_ && goog.moduleLoaderState_.moduleName) {\n      throw new Error(\n          'goog.declareModuleId may only be called once per module.');\n    }\n    if (namespace in goog.loadedModules_) {\n      throw new Error(\n          'Module with namespace \"' + namespace + '\" already exists.');\n    }\n  }\n  if (goog.moduleLoaderState_) {\n    // Not bundled - debug loading.\n    goog.moduleLoaderState_.moduleName = namespace;\n  } else {\n    // Bundled - not debug loading, no module loader state.\n    var jscomp = goog.global['$jscomp'];\n    if (!jscomp || typeof jscomp.getCurrentModulePath != 'function') {\n      throw new Error(\n          'Module with namespace \"' + namespace +\n          '\" has been loaded incorrectly.');\n    }\n    var exports = jscomp.require(jscomp.getCurrentModulePath());\n    goog.loadedModules_[namespace] = {\n      exports: exports,\n      type: goog.ModuleType.ES6,\n      moduleId: namespace\n    };\n  }\n};\n\n\n/**\n * Marks that the current file should only be used for testing, and never for\n * live code in production.\n *\n * In the case of unit tests, the message may optionally be an exact namespace\n * for the test (e.g. 'goog.stringTest'). The linter will then ignore the extra\n * provide (if not explicitly defined in the code).\n *\n * @param {string=} opt_message Optional message to add to the error that's\n *     raised when used in production code.\n */\ngoog.setTestOnly = function(opt_message) {\n  if (goog.DISALLOW_TEST_ONLY_CODE) {\n    opt_message = opt_message || '';\n    throw new Error(\n        'Importing test-only code into non-debug environment' +\n        (opt_message ? ': ' + opt_message : '.'));\n  }\n};\n\n\n/**\n * Forward declares a symbol. This is an indication to the compiler that the\n * symbol may be used in the source yet is not required and may not be provided\n * in compilation.\n *\n * The most common usage of forward declaration is code that takes a type as a\n * function parameter but does not need to require it. By forward declaring\n * instead of requiring, no hard dependency is made, and (if not required\n * elsewhere) the namespace may never be required and thus, not be pulled\n * into the JavaScript binary. If it is required elsewhere, it will be type\n * checked as normal.\n *\n * Before using goog.forwardDeclare, please read the documentation at\n * https://github.com/google/closure-compiler/wiki/Bad-Type-Annotation to\n * understand the options and tradeoffs when working with forward declarations.\n *\n * @param {string} name The namespace to forward declare in the form of\n *     \"goog.package.part\".\n */\ngoog.forwardDeclare = function(name) {};\n\n\n/**\n * Forward declare type information. Used to assign types to goog.global\n * referenced object that would otherwise result in unknown type references\n * and thus block property disambiguation.\n */\ngoog.forwardDeclare('Document');\ngoog.forwardDeclare('HTMLScriptElement');\ngoog.forwardDeclare('XMLHttpRequest');\n\n\nif (!COMPILED) {\n  /**\n   * Check if the given name has been goog.provided. This will return false for\n   * names that are available only as implicit namespaces.\n   * @param {string} name name of the object to look for.\n   * @return {boolean} Whether the name has been provided.\n   * @private\n   */\n  goog.isProvided_ = function(name) {\n    return (name in goog.loadedModules_) ||\n        (!goog.implicitNamespaces_[name] && goog.getObjectByName(name) != null);\n  };\n\n  /**\n   * Namespaces implicitly defined by goog.provide. For example,\n   * goog.provide('goog.events.Event') implicitly declares that 'goog' and\n   * 'goog.events' must be namespaces.\n   *\n   * @type {!Object<string, (boolean|undefined)>}\n   * @private\n   */\n  goog.implicitNamespaces_ = {'goog.module': true};\n\n  // NOTE: We add goog.module as an implicit namespace as goog.module is defined\n  // here and because the existing module package has not been moved yet out of\n  // the goog.module namespace. This satisifies both the debug loader and\n  // ahead-of-time dependency management.\n}\n\n\n/**\n * Returns an object based on its fully qualified external name.  The object\n * is not found if null or undefined.  If you are using a compilation pass that\n * renames property names beware that using this function will not find renamed\n * properties.\n *\n * @param {string} name The fully qualified name.\n * @param {Object=} opt_obj The object within which to look; default is\n *     |goog.global|.\n * @return {?} The value (object or primitive) or, if not found, null.\n */\ngoog.getObjectByName = function(name, opt_obj) {\n  var parts = name.split('.');\n  var cur = opt_obj || goog.global;\n  for (var i = 0; i < parts.length; i++) {\n    cur = cur[parts[i]];\n    if (cur == null) {\n      return null;\n    }\n  }\n  return cur;\n};\n\n\n/**\n * Globalizes a whole namespace, such as goog or goog.lang.\n *\n * @param {!Object} obj The namespace to globalize.\n * @param {Object=} opt_global The object to add the properties to.\n * @deprecated Properties may be explicitly exported to the global scope, but\n *     this should no longer be done in bulk.\n */\ngoog.globalize = function(obj, opt_global) {\n  var global = opt_global || goog.global;\n  for (var x in obj) {\n    global[x] = obj[x];\n  }\n};\n\n\n/**\n * Adds a dependency from a file to the files it requires.\n * @param {string} relPath The path to the js file.\n * @param {!Array<string>} provides An array of strings with\n *     the names of the objects this file provides.\n * @param {!Array<string>} requires An array of strings with\n *     the names of the objects this file requires.\n * @param {boolean|!Object<string>=} opt_loadFlags Parameters indicating\n *     how the file must be loaded.  The boolean 'true' is equivalent\n *     to {'module': 'goog'} for backwards-compatibility.  Valid properties\n *     and values include {'module': 'goog'} and {'lang': 'es6'}.\n */\ngoog.addDependency = function(relPath, provides, requires, opt_loadFlags) {\n  if (!COMPILED && goog.DEPENDENCIES_ENABLED) {\n    goog.debugLoader_.addDependency(relPath, provides, requires, opt_loadFlags);\n  }\n};\n\n\n\n\n// NOTE(nnaze): The debug DOM loader was included in base.js as an original way\n// to do \"debug-mode\" development.  The dependency system can sometimes be\n// confusing, as can the debug DOM loader's asynchronous nature.\n//\n// With the DOM loader, a call to goog.require() is not blocking -- the script\n// will not load until some point after the current script.  If a namespace is\n// needed at runtime, it needs to be defined in a previous script, or loaded via\n// require() with its registered dependencies.\n//\n// User-defined namespaces may need their own deps file. For a reference on\n// creating a deps file, see:\n// Externally: https://developers.google.com/closure/library/docs/depswriter\n//\n// Because of legacy clients, the DOM loader can't be easily removed from\n// base.js.  Work was done to make it disableable or replaceable for\n// different environments (DOM-less JavaScript interpreters like Rhino or V8,\n// for example). See bootstrap/ for more information.\n\n\n/**\n * @define {boolean} Whether to enable the debug loader.\n *\n * If enabled, a call to goog.require() will attempt to load the namespace by\n * appending a script tag to the DOM (if the namespace has been registered).\n *\n * If disabled, goog.require() will simply assert that the namespace has been\n * provided (and depend on the fact that some outside tool correctly ordered\n * the script).\n */\ngoog.ENABLE_DEBUG_LOADER = goog.define('goog.ENABLE_DEBUG_LOADER', true);\n\n\n/**\n * @param {string} msg\n * @private\n */\ngoog.logToConsole_ = function(msg) {\n  if (goog.global.console) {\n    goog.global.console['error'](msg);\n  }\n};\n\n\n/**\n * Implements a system for the dynamic resolution of dependencies that works in\n * parallel with the BUILD system.\n *\n * Note that all calls to goog.require will be stripped by the compiler.\n *\n * @see goog.provide\n * @param {string} namespace Namespace (as was given in goog.provide,\n *     goog.module, or goog.declareModuleId) in the form\n *     \"goog.package.part\".\n * @return {?} If called within a goog.module or ES6 module file, the associated\n *     namespace or module otherwise null.\n */\ngoog.require = function(namespace) {\n  if (!COMPILED) {\n    // Might need to lazy load on old IE.\n    if (goog.ENABLE_DEBUG_LOADER) {\n      goog.debugLoader_.requested(namespace);\n    }\n\n    // If the object already exists we do not need to do anything.\n    if (goog.isProvided_(namespace)) {\n      if (goog.isInModuleLoader_()) {\n        return goog.module.getInternal_(namespace);\n      }\n    } else if (goog.ENABLE_DEBUG_LOADER) {\n      var moduleLoaderState = goog.moduleLoaderState_;\n      goog.moduleLoaderState_ = null;\n      try {\n        goog.debugLoader_.load_(namespace);\n      } finally {\n        goog.moduleLoaderState_ = moduleLoaderState;\n      }\n    }\n\n    return null;\n  }\n};\n\n\n/**\n * Requires a symbol for its type information. This is an indication to the\n * compiler that the symbol may appear in type annotations, yet it is not\n * referenced at runtime.\n *\n * When called within a goog.module or ES6 module file, the return value may be\n * assigned to or destructured into a variable, but it may not be otherwise used\n * in code outside of a type annotation.\n *\n * Note that all calls to goog.requireType will be stripped by the compiler.\n *\n * @param {string} namespace Namespace (as was given in goog.provide,\n *     goog.module, or goog.declareModuleId) in the form\n *     \"goog.package.part\".\n * @return {?}\n */\ngoog.requireType = function(namespace) {\n  // Return an empty object so that single-level destructuring of the return\n  // value doesn't crash at runtime when using the debug loader. Multi-level\n  // destructuring isn't supported.\n  return {};\n};\n\n\n/**\n * Path for included scripts.\n * @type {string}\n */\ngoog.basePath = '';\n\n\n/**\n * A hook for overriding the base path.\n * @type {string|undefined}\n */\ngoog.global.CLOSURE_BASE_PATH;\n\n\n/**\n * Whether to attempt to load Closure's deps file. By default, when uncompiled,\n * deps files will attempt to be loaded.\n * @type {boolean|undefined}\n */\ngoog.global.CLOSURE_NO_DEPS;\n\n\n/**\n * A function to import a single script. This is meant to be overridden when\n * Closure is being run in non-HTML contexts, such as web workers. It's defined\n * in the global scope so that it can be set before base.js is loaded, which\n * allows deps.js to be imported properly.\n *\n * The first parameter the script source, which is a relative URI. The second,\n * optional parameter is the script contents, in the event the script needed\n * transformation. It should return true if the script was imported, false\n * otherwise.\n * @type {(function(string, string=): boolean)|undefined}\n */\ngoog.global.CLOSURE_IMPORT_SCRIPT;\n\n\n/**\n * Null function used for default values of callbacks, etc.\n * @return {void} Nothing.\n */\ngoog.nullFunction = function() {};\n\n\n/**\n * When defining a class Foo with an abstract method bar(), you can do:\n * Foo.prototype.bar = goog.abstractMethod\n *\n * Now if a subclass of Foo fails to override bar(), an error will be thrown\n * when bar() is invoked.\n *\n * @type {!Function}\n * @throws {Error} when invoked to indicate the method should be overridden.\n * @deprecated Use \"@abstract\" annotation instead of goog.abstractMethod in new\n *     code. See\n *     https://github.com/google/closure-compiler/wiki/@abstract-classes-and-methods\n */\ngoog.abstractMethod = function() {\n  throw new Error('unimplemented abstract method');\n};\n\n\n/**\n * Adds a `getInstance` static method that always returns the same\n * instance object.\n * @param {!Function} ctor The constructor for the class to add the static\n *     method to.\n * @suppress {missingProperties} 'instance_' isn't a property on 'Function'\n *     but we don't have a better type to use here.\n */\ngoog.addSingletonGetter = function(ctor) {\n  // instance_ is immediately set to prevent issues with sealed constructors\n  // such as are encountered when a constructor is returned as the export object\n  // of a goog.module in unoptimized code.\n  // Delcare type to avoid conformance violations that ctor.instance_ is unknown\n  /** @type {undefined|!Object} @suppress {underscore} */\n  ctor.instance_ = undefined;\n  ctor.getInstance = function() {\n    if (ctor.instance_) {\n      return ctor.instance_;\n    }\n    if (goog.DEBUG) {\n      // NOTE: JSCompiler can't optimize away Array#push.\n      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;\n    }\n    // Cast to avoid conformance violations that ctor.instance_ is unknown\n    return /** @type {!Object|undefined} */ (ctor.instance_) = new ctor;\n  };\n};\n\n\n/**\n * All singleton classes that have been instantiated, for testing. Don't read\n * it directly, use the `goog.testing.singleton` module. The compiler\n * removes this variable if unused.\n * @type {!Array<!Function>}\n * @private\n */\ngoog.instantiatedSingletons_ = [];\n\n\n/**\n * @define {boolean} Whether to load goog.modules using `eval` when using\n * the debug loader.  This provides a better debugging experience as the\n * source is unmodified and can be edited using Chrome Workspaces or similar.\n * However in some environments the use of `eval` is banned\n * so we provide an alternative.\n */\ngoog.LOAD_MODULE_USING_EVAL = goog.define('goog.LOAD_MODULE_USING_EVAL', true);\n\n\n/**\n * @define {boolean} Whether the exports of goog.modules should be sealed when\n * possible.\n */\ngoog.SEAL_MODULE_EXPORTS = goog.define('goog.SEAL_MODULE_EXPORTS', goog.DEBUG);\n\n\n/**\n * The registry of initialized modules:\n * The module identifier or path to module exports map.\n * @private @const {!Object<string, {exports:?,type:string,moduleId:string}>}\n */\ngoog.loadedModules_ = {};\n\n\n/**\n * True if the debug loader enabled and used.\n * @const {boolean}\n */\ngoog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;\n\n\n/**\n * @define {string} How to decide whether to transpile.  Valid values\n * are 'always', 'never', and 'detect'.  The default ('detect') is to\n * use feature detection to determine which language levels need\n * transpilation.\n */\n// NOTE(sdh): we could expand this to accept a language level to bypass\n// detection: e.g. goog.TRANSPILE == 'es5' would transpile ES6 files but\n// would leave ES3 and ES5 files alone.\ngoog.TRANSPILE = goog.define('goog.TRANSPILE', 'detect');\n\n/**\n * @define {boolean} If true assume that ES modules have already been\n * transpiled by the jscompiler (in the same way that transpile.js would\n * transpile them - to jscomp modules). Useful only for servers that wish to use\n * the debug loader and transpile server side. Thus this is only respected if\n * goog.TRANSPILE is \"never\".\n */\ngoog.ASSUME_ES_MODULES_TRANSPILED =\n    goog.define('goog.ASSUME_ES_MODULES_TRANSPILED', false);\n\n\n/**\n * @define {string} If a file needs to be transpiled what the output language\n * should be. By default this is the highest language level this file detects\n * the current environment supports. Generally this flag should not be set, but\n * it could be useful to override. Example: If the current environment supports\n * ES6 then by default ES7+ files will be transpiled to ES6, unless this is\n * overridden.\n *\n * Valid values include: es3, es5, es6, es7, and es8. Anything not recognized\n * is treated as es3.\n *\n * Note that setting this value does not force transpilation. Just if\n * transpilation occurs this will be the output. So this is most useful when\n * goog.TRANSPILE is set to 'always' and then forcing the language level to be\n * something lower than what the environment detects.\n */\ngoog.TRANSPILE_TO_LANGUAGE = goog.define('goog.TRANSPILE_TO_LANGUAGE', '');\n\n\n/**\n * @define {string} Path to the transpiler.  Executing the script at this\n * path (relative to base.js) should define a function $jscomp.transpile.\n */\ngoog.TRANSPILER = goog.define('goog.TRANSPILER', 'transpile.js');\n\n\n/**\n * @package {?boolean}\n * Visible for testing.\n */\ngoog.hasBadLetScoping = null;\n\n\n/**\n * @return {boolean}\n * @package Visible for testing.\n */\ngoog.useSafari10Workaround = function() {\n  if (goog.hasBadLetScoping == null) {\n    var hasBadLetScoping;\n    try {\n      hasBadLetScoping = !eval(\n          '\"use strict\";' +\n          'let x = 1; function f() { return typeof x; };' +\n          'f() == \"number\";');\n    } catch (e) {\n      // Assume that ES6 syntax isn't supported.\n      hasBadLetScoping = false;\n    }\n    goog.hasBadLetScoping = hasBadLetScoping;\n  }\n  return goog.hasBadLetScoping;\n};\n\n\n/**\n * @param {string} moduleDef\n * @return {string}\n * @package Visible for testing.\n */\ngoog.workaroundSafari10EvalBug = function(moduleDef) {\n  return '(function(){' + moduleDef +\n      '\\n' +  // Terminate any trailing single line comment.\n      ';' +   // Terminate any trailing expression.\n      '})();\\n';\n};\n\n\n/**\n * @param {function(?):?|string} moduleDef The module definition.\n */\ngoog.loadModule = function(moduleDef) {\n  // NOTE: we allow function definitions to be either in the from\n  // of a string to eval (which keeps the original source intact) or\n  // in a eval forbidden environment (CSP) we allow a function definition\n  // which in its body must call `goog.module`, and return the exports\n  // of the module.\n  var previousState = goog.moduleLoaderState_;\n  try {\n    goog.moduleLoaderState_ = {\n      moduleName: '',\n      declareLegacyNamespace: false,\n      type: goog.ModuleType.GOOG\n    };\n    var exports;\n    if (goog.isFunction(moduleDef)) {\n      exports = moduleDef.call(undefined, {});\n    } else if (typeof moduleDef === 'string') {\n      if (goog.useSafari10Workaround()) {\n        moduleDef = goog.workaroundSafari10EvalBug(moduleDef);\n      }\n\n      exports = goog.loadModuleFromSource_.call(undefined, moduleDef);\n    } else {\n      throw new Error('Invalid module definition');\n    }\n\n    var moduleName = goog.moduleLoaderState_.moduleName;\n    if (typeof moduleName === 'string' && moduleName) {\n      // Don't seal legacy namespaces as they may be used as a parent of\n      // another namespace\n      if (goog.moduleLoaderState_.declareLegacyNamespace) {\n        goog.constructNamespace_(moduleName, exports);\n      } else if (\n          goog.SEAL_MODULE_EXPORTS && Object.seal &&\n          typeof exports == 'object' && exports != null) {\n        Object.seal(exports);\n      }\n\n      var data = {\n        exports: exports,\n        type: goog.ModuleType.GOOG,\n        moduleId: goog.moduleLoaderState_.moduleName\n      };\n      goog.loadedModules_[moduleName] = data;\n    } else {\n      throw new Error('Invalid module name \\\"' + moduleName + '\\\"');\n    }\n  } finally {\n    goog.moduleLoaderState_ = previousState;\n  }\n};\n\n\n/**\n * @private @const\n */\ngoog.loadModuleFromSource_ = /** @type {function(string):?} */ (function() {\n  // NOTE: we avoid declaring parameters or local variables here to avoid\n  // masking globals or leaking values into the module definition.\n  'use strict';\n  var exports = {};\n  eval(arguments[0]);\n  return exports;\n});\n\n\n/**\n * Normalize a file path by removing redundant \"..\" and extraneous \".\" file\n * path components.\n * @param {string} path\n * @return {string}\n * @private\n */\ngoog.normalizePath_ = function(path) {\n  var components = path.split('/');\n  var i = 0;\n  while (i < components.length) {\n    if (components[i] == '.') {\n      components.splice(i, 1);\n    } else if (\n        i && components[i] == '..' && components[i - 1] &&\n        components[i - 1] != '..') {\n      components.splice(--i, 2);\n    } else {\n      i++;\n    }\n  }\n  return components.join('/');\n};\n\n\n/**\n * Provides a hook for loading a file when using Closure's goog.require() API\n * with goog.modules.  In particular this hook is provided to support Node.js.\n *\n * @type {(function(string):string)|undefined}\n */\ngoog.global.CLOSURE_LOAD_FILE_SYNC;\n\n\n/**\n * Loads file by synchronous XHR. Should not be used in production environments.\n * @param {string} src Source URL.\n * @return {?string} File contents, or null if load failed.\n * @private\n */\ngoog.loadFileSync_ = function(src) {\n  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {\n    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);\n  } else {\n    try {\n      /** @type {XMLHttpRequest} */\n      var xhr = new goog.global['XMLHttpRequest']();\n      xhr.open('get', src, false);\n      xhr.send();\n      // NOTE: Successful http: requests have a status of 200, but successful\n      // file: requests may have a status of zero.  Any other status, or a\n      // thrown exception (particularly in case of file: requests) indicates\n      // some sort of error, which we treat as a missing or unavailable file.\n      return xhr.status == 0 || xhr.status == 200 ? xhr.responseText : null;\n    } catch (err) {\n      // No need to rethrow or log, since errors should show up on their own.\n      return null;\n    }\n  }\n};\n\n\n/**\n * Lazily retrieves the transpiler and applies it to the source.\n * @param {string} code JS code.\n * @param {string} path Path to the code.\n * @param {string} target Language level output.\n * @return {string} The transpiled code.\n * @private\n */\ngoog.transpile_ = function(code, path, target) {\n  var jscomp = goog.global['$jscomp'];\n  if (!jscomp) {\n    goog.global['$jscomp'] = jscomp = {};\n  }\n  var transpile = jscomp.transpile;\n  if (!transpile) {\n    var transpilerPath = goog.basePath + goog.TRANSPILER;\n    var transpilerCode = goog.loadFileSync_(transpilerPath);\n    if (transpilerCode) {\n      // This must be executed synchronously, since by the time we know we\n      // need it, we're about to load and write the ES6 code synchronously,\n      // so a normal script-tag load will be too slow. Wrapped in a function\n      // so that code is eval'd in the global scope.\n      (function() {\n        (0, eval)(transpilerCode + '\\n//# sourceURL=' + transpilerPath);\n      }).call(goog.global);\n      // Even though the transpiler is optional, if $gwtExport is found, it's\n      // a sign the transpiler was loaded and the $jscomp.transpile *should*\n      // be there.\n      if (goog.global['$gwtExport'] && goog.global['$gwtExport']['$jscomp'] &&\n          !goog.global['$gwtExport']['$jscomp']['transpile']) {\n        throw new Error(\n            'The transpiler did not properly export the \"transpile\" ' +\n            'method. $gwtExport: ' + JSON.stringify(goog.global['$gwtExport']));\n      }\n      // transpile.js only exports a single $jscomp function, transpile. We\n      // grab just that and add it to the existing definition of $jscomp which\n      // contains the polyfills.\n      goog.global['$jscomp'].transpile =\n          goog.global['$gwtExport']['$jscomp']['transpile'];\n      jscomp = goog.global['$jscomp'];\n      transpile = jscomp.transpile;\n    }\n  }\n  if (!transpile) {\n    // The transpiler is an optional component.  If it's not available then\n    // replace it with a pass-through function that simply logs.\n    var suffix = ' requires transpilation but no transpiler was found.';\n    transpile = jscomp.transpile = function(code, path) {\n      // TODO(sdh): figure out some way to get this error to show up\n      // in test results, noting that the failure may occur in many\n      // different ways, including in loadModule() before the test\n      // runner even comes up.\n      goog.logToConsole_(path + suffix);\n      return code;\n    };\n  }\n  // Note: any transpilation errors/warnings will be logged to the console.\n  return transpile(code, path, target);\n};\n\n//==============================================================================\n// Language Enhancements\n//==============================================================================\n\n\n/**\n * This is a \"fixed\" version of the typeof operator.  It differs from the typeof\n * operator in such a way that null returns 'null' and arrays return 'array'.\n * @param {?} value The value to get the type of.\n * @return {string} The name of the type.\n */\ngoog.typeOf = function(value) {\n  var s = typeof value;\n  if (s == 'object') {\n    if (value) {\n      // Check these first, so we can avoid calling Object.prototype.toString if\n      // possible.\n      //\n      // IE improperly marshals typeof across execution contexts, but a\n      // cross-context object will still return false for \"instanceof Object\".\n      if (value instanceof Array) {\n        return 'array';\n      } else if (value instanceof Object) {\n        return s;\n      }\n\n      // HACK: In order to use an Object prototype method on the arbitrary\n      //   value, the compiler requires the value be cast to type Object,\n      //   even though the ECMA spec explicitly allows it.\n      var className = Object.prototype.toString.call(\n          /** @type {!Object} */ (value));\n      // In Firefox 3.6, attempting to access iframe window objects' length\n      // property throws an NS_ERROR_FAILURE, so we need to special-case it\n      // here.\n      if (className == '[object Window]') {\n        return 'object';\n      }\n\n      // We cannot always use constructor == Array or instanceof Array because\n      // different frames have different Array objects. In IE6, if the iframe\n      // where the array was created is destroyed, the array loses its\n      // prototype. Then dereferencing val.splice here throws an exception, so\n      // we can't use goog.isFunction. Calling typeof directly returns 'unknown'\n      // so that will work. In this case, this function will return false and\n      // most array functions will still work because the array is still\n      // array-like (supports length and []) even though it has lost its\n      // prototype.\n      // Mark Miller noticed that Object.prototype.toString\n      // allows access to the unforgeable [[Class]] property.\n      //  15.2.4.2 Object.prototype.toString ( )\n      //  When the toString method is called, the following steps are taken:\n      //      1. Get the [[Class]] property of this object.\n      //      2. Compute a string value by concatenating the three strings\n      //         \"[object \", Result(1), and \"]\".\n      //      3. Return Result(2).\n      // and this behavior survives the destruction of the execution context.\n      if ((className == '[object Array]' ||\n           // In IE all non value types are wrapped as objects across window\n           // boundaries (not iframe though) so we have to do object detection\n           // for this edge case.\n           typeof value.length == 'number' &&\n               typeof value.splice != 'undefined' &&\n               typeof value.propertyIsEnumerable != 'undefined' &&\n               !value.propertyIsEnumerable('splice')\n\n               )) {\n        return 'array';\n      }\n      // HACK: There is still an array case that fails.\n      //     function ArrayImpostor() {}\n      //     ArrayImpostor.prototype = [];\n      //     var impostor = new ArrayImpostor;\n      // this can be fixed by getting rid of the fast path\n      // (value instanceof Array) and solely relying on\n      // (value && Object.prototype.toString.vall(value) === '[object Array]')\n      // but that would require many more function calls and is not warranted\n      // unless closure code is receiving objects from untrusted sources.\n\n      // IE in cross-window calls does not correctly marshal the function type\n      // (it appears just as an object) so we cannot use just typeof val ==\n      // 'function'. However, if the object has a call property, it is a\n      // function.\n      if ((className == '[object Function]' ||\n           typeof value.call != 'undefined' &&\n               typeof value.propertyIsEnumerable != 'undefined' &&\n               !value.propertyIsEnumerable('call'))) {\n        return 'function';\n      }\n\n    } else {\n      return 'null';\n    }\n\n  } else if (s == 'function' && typeof value.call == 'undefined') {\n    // In Safari typeof nodeList returns 'function', and on Firefox typeof\n    // behaves similarly for HTML{Applet,Embed,Object}, Elements and RegExps. We\n    // would like to return object for those and we can detect an invalid\n    // function by making sure that the function object has a call method.\n    return 'object';\n  }\n  return s;\n};\n\n\n/**\n * Returns true if the specified value is null.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is null.\n * @deprecated Use `val === null` instead.\n */\ngoog.isNull = function(val) {\n  return val === null;\n};\n\n\n/**\n * Returns true if the specified value is defined and not null.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is defined and not null.\n * @deprecated Use `val != null` instead.\n */\ngoog.isDefAndNotNull = function(val) {\n  // Note that undefined == null.\n  return val != null;\n};\n\n\n/**\n * Returns true if the specified value is an array.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is an array.\n */\ngoog.isArray = function(val) {\n  return goog.typeOf(val) == 'array';\n};\n\n\n/**\n * Returns true if the object looks like an array. To qualify as array like\n * the value needs to be either a NodeList or an object with a Number length\n * property. Note that for this function neither strings nor functions are\n * considered \"array-like\".\n *\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is an array.\n */\ngoog.isArrayLike = function(val) {\n  var type = goog.typeOf(val);\n  // We do not use goog.isObject here in order to exclude function values.\n  return type == 'array' || type == 'object' && typeof val.length == 'number';\n};\n\n\n/**\n * Returns true if the object looks like a Date. To qualify as Date-like the\n * value needs to be an object and have a getFullYear() function.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a like a Date.\n */\ngoog.isDateLike = function(val) {\n  return goog.isObject(val) && typeof val.getFullYear == 'function';\n};\n\n\n/**\n * Returns true if the specified value is a function.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a function.\n */\ngoog.isFunction = function(val) {\n  return goog.typeOf(val) == 'function';\n};\n\n\n/**\n * Returns true if the specified value is an object.  This includes arrays and\n * functions.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is an object.\n */\ngoog.isObject = function(val) {\n  var type = typeof val;\n  return type == 'object' && val != null || type == 'function';\n  // return Object(val) === val also works, but is slower, especially if val is\n  // not an object.\n};\n\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. The unique ID is\n * guaranteed to be unique across the current session amongst objects that are\n * passed into `getUid`. There is no guarantee that the ID is unique or\n * consistent across sessions. It is unsafe to generate unique ID for function\n * prototypes.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\ngoog.getUid = function(obj) {\n  // TODO(arv): Make the type stricter, do not accept null.\n\n  // In Opera window.hasOwnProperty exists but always returns false so we avoid\n  // using it. As a consequence the unique ID generated for BaseClass.prototype\n  // and SubClass.prototype will be the same.\n  // TODO(b/141512323): UUIDs are broken for ctors with class-side inheritance.\n  return obj[goog.UID_PROPERTY_] ||\n      (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);\n};\n\n\n/**\n * Whether the given object is already assigned a unique ID.\n *\n * This does not modify the object.\n *\n * @param {!Object} obj The object to check.\n * @return {boolean} Whether there is an assigned unique id for the object.\n */\ngoog.hasUid = function(obj) {\n  return !!obj[goog.UID_PROPERTY_];\n};\n\n\n/**\n * Removes the unique ID from an object. This is useful if the object was\n * previously mutated using `goog.getUid` in which case the mutation is\n * undone.\n * @param {Object} obj The object to remove the unique ID field from.\n */\ngoog.removeUid = function(obj) {\n  // TODO(arv): Make the type stricter, do not accept null.\n\n  // In IE, DOM nodes are not instances of Object and throw an exception if we\n  // try to delete.  Instead we try to use removeAttribute.\n  if (obj !== null && 'removeAttribute' in obj) {\n    obj.removeAttribute(goog.UID_PROPERTY_);\n  }\n\n  try {\n    delete obj[goog.UID_PROPERTY_];\n  } catch (ex) {\n  }\n};\n\n\n/**\n * Name for unique ID property. Initialized in a way to help avoid collisions\n * with other closure JavaScript on the same page.\n * @type {string}\n * @private\n */\ngoog.UID_PROPERTY_ = 'closure_uid_' + ((Math.random() * 1e9) >>> 0);\n\n\n/**\n * Counter for UID.\n * @type {number}\n * @private\n */\ngoog.uidCounter_ = 0;\n\n\n/**\n * Adds a hash code field to an object. The hash code is unique for the\n * given object.\n * @param {Object} obj The object to get the hash code for.\n * @return {number} The hash code for the object.\n * @deprecated Use goog.getUid instead.\n */\ngoog.getHashCode = goog.getUid;\n\n\n/**\n * Removes the hash code field from an object.\n * @param {Object} obj The object to remove the field from.\n * @deprecated Use goog.removeUid instead.\n */\ngoog.removeHashCode = goog.removeUid;\n\n\n/**\n * Clones a value. The input may be an Object, Array, or basic type. Objects and\n * arrays will be cloned recursively.\n *\n * WARNINGS:\n * <code>goog.cloneObject</code> does not detect reference loops. Objects that\n * refer to themselves will cause infinite recursion.\n *\n * <code>goog.cloneObject</code> is unaware of unique identifiers, and copies\n * UIDs created by <code>getUid</code> into cloned results.\n *\n * @param {*} obj The value to clone.\n * @return {*} A clone of the input value.\n * @deprecated goog.cloneObject is unsafe. Prefer the goog.object methods.\n */\ngoog.cloneObject = function(obj) {\n  var type = goog.typeOf(obj);\n  if (type == 'object' || type == 'array') {\n    if (typeof obj.clone === 'function') {\n      return obj.clone();\n    }\n    var clone = type == 'array' ? [] : {};\n    for (var key in obj) {\n      clone[key] = goog.cloneObject(obj[key]);\n    }\n    return clone;\n  }\n\n  return obj;\n};\n\n\n/**\n * A native implementation of goog.bind.\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} selfObj Specifies the object which this should point to when the\n *     function is run.\n * @param {...*} var_args Additional arguments that are partially applied to the\n *     function.\n * @return {!Function} A partially-applied form of the function goog.bind() was\n *     invoked as a method of.\n * @template T\n * @private\n */\ngoog.bindNative_ = function(fn, selfObj, var_args) {\n  return /** @type {!Function} */ (fn.call.apply(fn.bind, arguments));\n};\n\n\n/**\n * A pure-JS implementation of goog.bind.\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} selfObj Specifies the object which this should point to when the\n *     function is run.\n * @param {...*} var_args Additional arguments that are partially applied to the\n *     function.\n * @return {!Function} A partially-applied form of the function goog.bind() was\n *     invoked as a method of.\n * @template T\n * @private\n */\ngoog.bindJs_ = function(fn, selfObj, var_args) {\n  if (!fn) {\n    throw new Error();\n  }\n\n  if (arguments.length > 2) {\n    var boundArgs = Array.prototype.slice.call(arguments, 2);\n    return function() {\n      // Prepend the bound arguments to the current arguments.\n      var newArgs = Array.prototype.slice.call(arguments);\n      Array.prototype.unshift.apply(newArgs, boundArgs);\n      return fn.apply(selfObj, newArgs);\n    };\n\n  } else {\n    return function() {\n      return fn.apply(selfObj, arguments);\n    };\n  }\n};\n\n\n/**\n * Partially applies this function to a particular 'this object' and zero or\n * more arguments. The result is a new function with some arguments of the first\n * function pre-filled and the value of this 'pre-specified'.\n *\n * Remaining arguments specified at call-time are appended to the pre-specified\n * ones.\n *\n * Also see: {@link #partial}.\n *\n * Usage:\n * <pre>var barMethBound = goog.bind(myFunction, myObj, 'arg1', 'arg2');\n * barMethBound('arg3', 'arg4');</pre>\n *\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} selfObj Specifies the object which this should point to when the\n *     function is run.\n * @param {...*} var_args Additional arguments that are partially applied to the\n *     function.\n * @return {!Function} A partially-applied form of the function goog.bind() was\n *     invoked as a method of.\n * @template T\n * @suppress {deprecated} See above.\n */\ngoog.bind = function(fn, selfObj, var_args) {\n  // TODO(nicksantos): narrow the type signature.\n  if (Function.prototype.bind &&\n      // NOTE(nicksantos): Somebody pulled base.js into the default Chrome\n      // extension environment. This means that for Chrome extensions, they get\n      // the implementation of Function.prototype.bind that calls goog.bind\n      // instead of the native one. Even worse, we don't want to introduce a\n      // circular dependency between goog.bind and Function.prototype.bind, so\n      // we have to hack this to make sure it works correctly.\n      Function.prototype.bind.toString().indexOf('native code') != -1) {\n    goog.bind = goog.bindNative_;\n  } else {\n    goog.bind = goog.bindJs_;\n  }\n  return goog.bind.apply(null, arguments);\n};\n\n\n/**\n * Like goog.bind(), except that a 'this object' is not required. Useful when\n * the target function is already bound.\n *\n * Usage:\n * var g = goog.partial(f, arg1, arg2);\n * g(arg3, arg4);\n *\n * @param {Function} fn A function to partially apply.\n * @param {...*} var_args Additional arguments that are partially applied to fn.\n * @return {!Function} A partially-applied form of the function goog.partial()\n *     was invoked as a method of.\n */\ngoog.partial = function(fn, var_args) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  return function() {\n    // Clone the array (with slice()) and append additional arguments\n    // to the existing arguments.\n    var newArgs = args.slice();\n    newArgs.push.apply(newArgs, arguments);\n    return fn.apply(/** @type {?} */ (this), newArgs);\n  };\n};\n\n\n/**\n * Copies all the members of a source object to a target object. This method\n * does not work on all browsers for all objects that contain keys such as\n * toString or hasOwnProperty. Use goog.object.extend for this purpose.\n *\n * NOTE: Some have advocated for the use of goog.mixin to setup classes\n * with multiple inheritence (traits, mixins, etc).  However, as it simply\n * uses \"for in\", this is not compatible with ES6 classes whose methods are\n * non-enumerable.  Changing this, would break cases where non-enumerable\n * properties are not expected.\n *\n * @param {Object} target Target.\n * @param {Object} source Source.\n * @deprecated Prefer Object.assign\n */\ngoog.mixin = function(target, source) {\n  for (var x in source) {\n    target[x] = source[x];\n  }\n\n  // For IE7 or lower, the for-in-loop does not contain any properties that are\n  // not enumerable on the prototype object (for example, isPrototypeOf from\n  // Object.prototype) but also it will not include 'replace' on objects that\n  // extend String and change 'replace' (not that it is common for anyone to\n  // extend anything except Object).\n};\n\n\n/**\n * @return {number} An integer value representing the number of milliseconds\n *     between midnight, January 1, 1970 and the current time.\n * @deprecated Use Date.now\n */\ngoog.now = (goog.TRUSTED_SITE && Date.now) || (function() {\n             // Unary plus operator converts its operand to a number which in\n             // the case of\n             // a date is done by calling getTime().\n             return +new Date();\n           });\n\n\n/**\n * Evals JavaScript in the global scope.  In IE this uses execScript, other\n * browsers use goog.global.eval. If goog.global.eval does not evaluate in the\n * global scope (for example, in Safari), appends a script tag instead.\n * Throws an exception if neither execScript or eval is defined.\n * @param {string} script JavaScript string.\n */\ngoog.globalEval = function(script) {\n  if (goog.global.execScript) {\n    goog.global.execScript(script, 'JavaScript');\n  } else if (goog.global.eval) {\n    // Test to see if eval works\n    if (goog.evalWorksForGlobals_ == null) {\n      try {\n        goog.global.eval('var _evalTest_ = 1;');\n      } catch (ignore) {\n      }\n      if (typeof goog.global['_evalTest_'] != 'undefined') {\n        try {\n          delete goog.global['_evalTest_'];\n        } catch (ignore) {\n          // Microsoft edge fails the deletion above in strict mode.\n        }\n        goog.evalWorksForGlobals_ = true;\n      } else {\n        goog.evalWorksForGlobals_ = false;\n      }\n    }\n\n    if (goog.evalWorksForGlobals_) {\n      goog.global.eval(script);\n    } else {\n      /** @type {!Document} */\n      var doc = goog.global.document;\n      var scriptElt =\n          /** @type {!HTMLScriptElement} */ (doc.createElement('script'));\n      scriptElt.type = 'text/javascript';\n      scriptElt.defer = false;\n      // Note(user): can't use .innerHTML since \"t('<test>')\" will fail and\n      // .text doesn't work in Safari 2.  Therefore we append a text node.\n      scriptElt.appendChild(doc.createTextNode(script));\n      doc.head.appendChild(scriptElt);\n      doc.head.removeChild(scriptElt);\n    }\n  } else {\n    throw new Error('goog.globalEval not available');\n  }\n};\n\n\n/**\n * Indicates whether or not we can call 'eval' directly to eval code in the\n * global scope. Set to a Boolean by the first call to goog.globalEval (which\n * empirically tests whether eval works for globals). @see goog.globalEval\n * @type {?boolean}\n * @private\n */\ngoog.evalWorksForGlobals_ = null;\n\n\n/**\n * Optional map of CSS class names to obfuscated names used with\n * goog.getCssName().\n * @private {!Object<string, string>|undefined}\n * @see goog.setCssNameMapping\n */\ngoog.cssNameMapping_;\n\n\n/**\n * Optional obfuscation style for CSS class names. Should be set to either\n * 'BY_WHOLE' or 'BY_PART' if defined.\n * @type {string|undefined}\n * @private\n * @see goog.setCssNameMapping\n */\ngoog.cssNameMappingStyle_;\n\n\n\n/**\n * A hook for modifying the default behavior goog.getCssName. The function\n * if present, will receive the standard output of the goog.getCssName as\n * its input.\n *\n * @type {(function(string):string)|undefined}\n */\ngoog.global.CLOSURE_CSS_NAME_MAP_FN;\n\n\n/**\n * Handles strings that are intended to be used as CSS class names.\n *\n * This function works in tandem with @see goog.setCssNameMapping.\n *\n * Without any mapping set, the arguments are simple joined with a hyphen and\n * passed through unaltered.\n *\n * When there is a mapping, there are two possible styles in which these\n * mappings are used. In the BY_PART style, each part (i.e. in between hyphens)\n * of the passed in css name is rewritten according to the map. In the BY_WHOLE\n * style, the full css name is looked up in the map directly. If a rewrite is\n * not specified by the map, the compiler will output a warning.\n *\n * When the mapping is passed to the compiler, it will replace calls to\n * goog.getCssName with the strings from the mapping, e.g.\n *     var x = goog.getCssName('foo');\n *     var y = goog.getCssName(this.baseClass, 'active');\n *  becomes:\n *     var x = 'foo';\n *     var y = this.baseClass + '-active';\n *\n * If one argument is passed it will be processed, if two are passed only the\n * modifier will be processed, as it is assumed the first argument was generated\n * as a result of calling goog.getCssName.\n *\n * @param {string} className The class name.\n * @param {string=} opt_modifier A modifier to be appended to the class name.\n * @return {string} The class name or the concatenation of the class name and\n *     the modifier.\n */\ngoog.getCssName = function(className, opt_modifier) {\n  // String() is used for compatibility with compiled soy where the passed\n  // className can be non-string objects.\n  if (String(className).charAt(0) == '.') {\n    throw new Error(\n        'className passed in goog.getCssName must not start with \".\".' +\n        ' You passed: ' + className);\n  }\n\n  var getMapping = function(cssName) {\n    return goog.cssNameMapping_[cssName] || cssName;\n  };\n\n  var renameByParts = function(cssName) {\n    // Remap all the parts individually.\n    var parts = cssName.split('-');\n    var mapped = [];\n    for (var i = 0; i < parts.length; i++) {\n      mapped.push(getMapping(parts[i]));\n    }\n    return mapped.join('-');\n  };\n\n  var rename;\n  if (goog.cssNameMapping_) {\n    rename =\n        goog.cssNameMappingStyle_ == 'BY_WHOLE' ? getMapping : renameByParts;\n  } else {\n    rename = function(a) {\n      return a;\n    };\n  }\n\n  var result =\n      opt_modifier ? className + '-' + rename(opt_modifier) : rename(className);\n\n  // The special CLOSURE_CSS_NAME_MAP_FN allows users to specify further\n  // processing of the class name.\n  if (goog.global.CLOSURE_CSS_NAME_MAP_FN) {\n    return goog.global.CLOSURE_CSS_NAME_MAP_FN(result);\n  }\n\n  return result;\n};\n\n\n/**\n * Sets the map to check when returning a value from goog.getCssName(). Example:\n * <pre>\n * goog.setCssNameMapping({\n *   \"goog\": \"a\",\n *   \"disabled\": \"b\",\n * });\n *\n * var x = goog.getCssName('goog');\n * // The following evaluates to: \"a a-b\".\n * goog.getCssName('goog') + ' ' + goog.getCssName(x, 'disabled')\n * </pre>\n * When declared as a map of string literals to string literals, the JSCompiler\n * will replace all calls to goog.getCssName() using the supplied map if the\n * --process_closure_primitives flag is set.\n *\n * @param {!Object} mapping A map of strings to strings where keys are possible\n *     arguments to goog.getCssName() and values are the corresponding values\n *     that should be returned.\n * @param {string=} opt_style The style of css name mapping. There are two valid\n *     options: 'BY_PART', and 'BY_WHOLE'.\n * @see goog.getCssName for a description.\n */\ngoog.setCssNameMapping = function(mapping, opt_style) {\n  goog.cssNameMapping_ = mapping;\n  goog.cssNameMappingStyle_ = opt_style;\n};\n\n\n/**\n * To use CSS renaming in compiled mode, one of the input files should have a\n * call to goog.setCssNameMapping() with an object literal that the JSCompiler\n * can extract and use to replace all calls to goog.getCssName(). In uncompiled\n * mode, JavaScript code should be loaded before this base.js file that declares\n * a global variable, CLOSURE_CSS_NAME_MAPPING, which is used below. This is\n * to ensure that the mapping is loaded before any calls to goog.getCssName()\n * are made in uncompiled mode.\n *\n * A hook for overriding the CSS name mapping.\n * @type {!Object<string, string>|undefined}\n */\ngoog.global.CLOSURE_CSS_NAME_MAPPING;\n\n\nif (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {\n  // This does not call goog.setCssNameMapping() because the JSCompiler\n  // requires that goog.setCssNameMapping() be called with an object literal.\n  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;\n}\n\n\n/**\n * Gets a localized message.\n *\n * This function is a compiler primitive. If you give the compiler a localized\n * message bundle, it will replace the string at compile-time with a localized\n * version, and expand goog.getMsg call to a concatenated string.\n *\n * Messages must be initialized in the form:\n * <code>\n * var MSG_NAME = goog.getMsg('Hello {$placeholder}', {'placeholder': 'world'});\n * </code>\n *\n * This function produces a string which should be treated as plain text. Use\n * {@link goog.html.SafeHtmlFormatter} in conjunction with goog.getMsg to\n * produce SafeHtml.\n *\n * @param {string} str Translatable string, places holders in the form {$foo}.\n * @param {Object<string, string>=} opt_values Maps place holder name to value.\n * @param {{html: boolean}=} opt_options Options:\n *     html: Escape '<' in str to '&lt;'. Used by Closure Templates where the\n *     generated code size and performance is critical which is why {@link\n *     goog.html.SafeHtmlFormatter} is not used. The value must be literal true\n *     or false.\n * @return {string} message with placeholders filled.\n */\ngoog.getMsg = function(str, opt_values, opt_options) {\n  if (opt_options && opt_options.html) {\n    // Note that '&' is not replaced because the translation can contain HTML\n    // entities.\n    str = str.replace(/</g, '&lt;');\n  }\n  if (opt_values) {\n    str = str.replace(/\\{\\$([^}]+)}/g, function(match, key) {\n      return (opt_values != null && key in opt_values) ? opt_values[key] :\n                                                         match;\n    });\n  }\n  return str;\n};\n\n\n/**\n * Gets a localized message. If the message does not have a translation, gives a\n * fallback message.\n *\n * This is useful when introducing a new message that has not yet been\n * translated into all languages.\n *\n * This function is a compiler primitive. Must be used in the form:\n * <code>var x = goog.getMsgWithFallback(MSG_A, MSG_B);</code>\n * where MSG_A and MSG_B were initialized with goog.getMsg.\n *\n * @param {string} a The preferred message.\n * @param {string} b The fallback message.\n * @return {string} The best translated message.\n */\ngoog.getMsgWithFallback = function(a, b) {\n  return a;\n};\n\n\n/**\n * Exposes an unobfuscated global namespace path for the given object.\n * Note that fields of the exported object *will* be obfuscated, unless they are\n * exported in turn via this function or goog.exportProperty.\n *\n * Also handy for making public items that are defined in anonymous closures.\n *\n * ex. goog.exportSymbol('public.path.Foo', Foo);\n *\n * ex. goog.exportSymbol('public.path.Foo.staticFunction', Foo.staticFunction);\n *     public.path.Foo.staticFunction();\n *\n * ex. goog.exportSymbol('public.path.Foo.prototype.myMethod',\n *                       Foo.prototype.myMethod);\n *     new public.path.Foo().myMethod();\n *\n * @param {string} publicPath Unobfuscated name to export.\n * @param {*} object Object the name should point to.\n * @param {Object=} opt_objectToExportTo The object to add the path to; default\n *     is goog.global.\n */\ngoog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {\n  goog.exportPath_(publicPath, object, opt_objectToExportTo);\n};\n\n\n/**\n * Exports a property unobfuscated into the object's namespace.\n * ex. goog.exportProperty(Foo, 'staticFunction', Foo.staticFunction);\n * ex. goog.exportProperty(Foo.prototype, 'myMethod', Foo.prototype.myMethod);\n * @param {Object} object Object whose static property is being exported.\n * @param {string} publicName Unobfuscated name to export.\n * @param {*} symbol Object the name should point to.\n */\ngoog.exportProperty = function(object, publicName, symbol) {\n  object[publicName] = symbol;\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n * <pre>\n * function ParentClass(a, b) { }\n * ParentClass.prototype.foo = function(a) { };\n *\n * function ChildClass(a, b, c) {\n *   ChildClass.base(this, 'constructor', a, b);\n * }\n * goog.inherits(ChildClass, ParentClass);\n *\n * var child = new ChildClass('a', 'b', 'see');\n * child.foo(); // This works.\n * </pre>\n *\n * @param {!Function} childCtor Child class.\n * @param {!Function} parentCtor Parent class.\n * @suppress {strictMissingProperties} superClass_ and base is not defined on\n *    Function.\n */\ngoog.inherits = function(childCtor, parentCtor) {\n  /** @constructor */\n  function tempCtor() {}\n  tempCtor.prototype = parentCtor.prototype;\n  childCtor.superClass_ = parentCtor.prototype;\n  childCtor.prototype = new tempCtor();\n  /** @override */\n  childCtor.prototype.constructor = childCtor;\n\n  /**\n   * Calls superclass constructor/method.\n   *\n   * This function is only available if you use goog.inherits to\n   * express inheritance relationships between classes.\n   *\n   * NOTE: This is a replacement for goog.base and for superClass_\n   * property defined in childCtor.\n   *\n   * @param {!Object} me Should always be \"this\".\n   * @param {string} methodName The method name to call. Calling\n   *     superclass constructor can be done with the special string\n   *     'constructor'.\n   * @param {...*} var_args The arguments to pass to superclass\n   *     method/constructor.\n   * @return {*} The return value of the superclass method/constructor.\n   */\n  childCtor.base = function(me, methodName, var_args) {\n    // Copying using loop to avoid deop due to passing arguments object to\n    // function. This is faster in many JS engines as of late 2014.\n    var args = new Array(arguments.length - 2);\n    for (var i = 2; i < arguments.length; i++) {\n      args[i - 2] = arguments[i];\n    }\n    return parentCtor.prototype[methodName].apply(me, args);\n  };\n};\n\n\n/**\n * Call up to the superclass.\n *\n * If this is called from a constructor, then this calls the superclass\n * constructor with arguments 1-N.\n *\n * If this is called from a prototype method, then you must pass the name of the\n * method as the second argument to this function. If you do not, you will get a\n * runtime error. This calls the superclass' method with arguments 2-N.\n *\n * This function only works if you use goog.inherits to express inheritance\n * relationships between your classes.\n *\n * This function is a compiler primitive. At compile-time, the compiler will do\n * macro expansion to remove a lot of the extra overhead that this function\n * introduces. The compiler will also enforce a lot of the assumptions that this\n * function makes, and treat it as a compiler error if you break them.\n *\n * @param {!Object} me Should always be \"this\".\n * @param {*=} opt_methodName The method name if calling a super method.\n * @param {...*} var_args The rest of the arguments.\n * @return {*} The return value of the superclass method.\n * @suppress {es5Strict} This method can not be used in strict mode, but\n *     all Closure Library consumers must depend on this file.\n * @deprecated goog.base is not strict mode compatible.  Prefer the static\n *     \"base\" method added to the constructor by goog.inherits\n *     or ES6 classes and the \"super\" keyword.\n */\ngoog.base = function(me, opt_methodName, var_args) {\n  var caller = arguments.callee.caller;\n\n  if (goog.STRICT_MODE_COMPATIBLE || (goog.DEBUG && !caller)) {\n    throw new Error(\n        'arguments.caller not defined.  goog.base() cannot be used ' +\n        'with strict mode code. See ' +\n        'http://www.ecma-international.org/ecma-262/5.1/#sec-C');\n  }\n\n  if (typeof caller.superClass_ !== 'undefined') {\n    // Copying using loop to avoid deop due to passing arguments object to\n    // function. This is faster in many JS engines as of late 2014.\n    var ctorArgs = new Array(arguments.length - 1);\n    for (var i = 1; i < arguments.length; i++) {\n      ctorArgs[i - 1] = arguments[i];\n    }\n    // This is a constructor. Call the superclass constructor.\n    return /** @type {!Function} */ (caller.superClass_)\n        .constructor.apply(me, ctorArgs);\n  }\n\n  if (typeof opt_methodName != 'string' && typeof opt_methodName != 'symbol') {\n    throw new Error(\n        'method names provided to goog.base must be a string or a symbol');\n  }\n\n  // Copying using loop to avoid deop due to passing arguments object to\n  // function. This is faster in many JS engines as of late 2014.\n  var args = new Array(arguments.length - 2);\n  for (var i = 2; i < arguments.length; i++) {\n    args[i - 2] = arguments[i];\n  }\n  var foundCaller = false;\n  for (var proto = me.constructor.prototype; proto;\n       proto = Object.getPrototypeOf(proto)) {\n    if (proto[opt_methodName] === caller) {\n      foundCaller = true;\n    } else if (foundCaller) {\n      return proto[opt_methodName].apply(me, args);\n    }\n  }\n\n  // If we did not find the caller in the prototype chain, then one of two\n  // things happened:\n  // 1) The caller is an instance method.\n  // 2) This method was not called by the right caller.\n  if (me[opt_methodName] === caller) {\n    return me.constructor.prototype[opt_methodName].apply(me, args);\n  } else {\n    throw new Error(\n        'goog.base called from a method of one name ' +\n        'to a method of a different name');\n  }\n};\n\n\n/**\n * Allow for aliasing within scope functions.  This function exists for\n * uncompiled code - in compiled code the calls will be inlined and the aliases\n * applied.  In uncompiled code the function is simply run since the aliases as\n * written are valid JavaScript.\n *\n *\n * @param {function()} fn Function to call.  This function can contain aliases\n *     to namespaces (e.g. \"var dom = goog.dom\") or classes\n *     (e.g. \"var Timer = goog.Timer\").\n */\ngoog.scope = function(fn) {\n  if (goog.isInModuleLoader_()) {\n    throw new Error('goog.scope is not supported within a module.');\n  }\n  fn.call(goog.global);\n};\n\n\n/*\n * To support uncompiled, strict mode bundles that use eval to divide source\n * like so:\n *    eval('someSource;//# sourceUrl sourcefile.js');\n * We need to export the globally defined symbols \"goog\" and \"COMPILED\".\n * Exporting \"goog\" breaks the compiler optimizations, so we required that\n * be defined externally.\n * NOTE: We don't use goog.exportSymbol here because we don't want to trigger\n * extern generation when that compiler option is enabled.\n */\nif (!COMPILED) {\n  goog.global['COMPILED'] = COMPILED;\n}\n\n\n//==============================================================================\n// goog.defineClass implementation\n//==============================================================================\n\n\n/**\n * Creates a restricted form of a Closure \"class\":\n *   - from the compiler's perspective, the instance returned from the\n *     constructor is sealed (no new properties may be added).  This enables\n *     better checks.\n *   - the compiler will rewrite this definition to a form that is optimal\n *     for type checking and optimization (initially this will be a more\n *     traditional form).\n *\n * @param {Function} superClass The superclass, Object or null.\n * @param {goog.defineClass.ClassDescriptor} def\n *     An object literal describing\n *     the class.  It may have the following properties:\n *     \"constructor\": the constructor function\n *     \"statics\": an object literal containing methods to add to the constructor\n *        as \"static\" methods or a function that will receive the constructor\n *        function as its only parameter to which static properties can\n *        be added.\n *     all other properties are added to the prototype.\n * @return {!Function} The class constructor.\n * @deprecated Use ES6 class syntax instead.\n */\ngoog.defineClass = function(superClass, def) {\n  // TODO(johnlenz): consider making the superClass an optional parameter.\n  var constructor = def.constructor;\n  var statics = def.statics;\n  // Wrap the constructor prior to setting up the prototype and static methods.\n  if (!constructor || constructor == Object.prototype.constructor) {\n    constructor = function() {\n      throw new Error(\n          'cannot instantiate an interface (no constructor defined).');\n    };\n  }\n\n  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);\n  if (superClass) {\n    goog.inherits(cls, superClass);\n  }\n\n  // Remove all the properties that should not be copied to the prototype.\n  delete def.constructor;\n  delete def.statics;\n\n  goog.defineClass.applyProperties_(cls.prototype, def);\n  if (statics != null) {\n    if (statics instanceof Function) {\n      statics(cls);\n    } else {\n      goog.defineClass.applyProperties_(cls, statics);\n    }\n  }\n\n  return cls;\n};\n\n\n/**\n * @typedef {{\n *   constructor: (!Function|undefined),\n *   statics: (Object|undefined|function(Function):void)\n * }}\n */\ngoog.defineClass.ClassDescriptor;\n\n\n/**\n * @define {boolean} Whether the instances returned by goog.defineClass should\n *     be sealed when possible.\n *\n * When sealing is disabled the constructor function will not be wrapped by\n * goog.defineClass, making it incompatible with ES6 class methods.\n */\ngoog.defineClass.SEAL_CLASS_INSTANCES =\n    goog.define('goog.defineClass.SEAL_CLASS_INSTANCES', goog.DEBUG);\n\n\n/**\n * If goog.defineClass.SEAL_CLASS_INSTANCES is enabled and Object.seal is\n * defined, this function will wrap the constructor in a function that seals the\n * results of the provided constructor function.\n *\n * @param {!Function} ctr The constructor whose results maybe be sealed.\n * @param {Function} superClass The superclass constructor.\n * @return {!Function} The replacement constructor.\n * @private\n */\ngoog.defineClass.createSealingConstructor_ = function(ctr, superClass) {\n  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {\n    // Do now wrap the constructor when sealing is disabled. Angular code\n    // depends on this for injection to work properly.\n    return ctr;\n  }\n\n  // Compute whether the constructor is sealable at definition time, rather\n  // than when the instance is being constructed.\n  var superclassSealable = !goog.defineClass.isUnsealable_(superClass);\n\n  /**\n   * @this {Object}\n   * @return {?}\n   */\n  var wrappedCtr = function() {\n    // Don't seal an instance of a subclass when it calls the constructor of\n    // its super class as there is most likely still setup to do.\n    var instance = ctr.apply(this, arguments) || this;\n    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];\n\n    if (this.constructor === wrappedCtr && superclassSealable &&\n        Object.seal instanceof Function) {\n      Object.seal(instance);\n    }\n    return instance;\n  };\n\n  return wrappedCtr;\n};\n\n\n/**\n * @param {Function} ctr The constructor to test.\n * @return {boolean} Whether the constructor has been tagged as unsealable\n *     using goog.tagUnsealableClass.\n * @private\n */\ngoog.defineClass.isUnsealable_ = function(ctr) {\n  return ctr && ctr.prototype &&\n      ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];\n};\n\n\n// TODO(johnlenz): share these values with the goog.object\n/**\n * The names of the fields that are defined on Object.prototype.\n * @type {!Array<string>}\n * @private\n * @const\n */\ngoog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = [\n  'constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable',\n  'toLocaleString', 'toString', 'valueOf'\n];\n\n\n// TODO(johnlenz): share this function with the goog.object\n/**\n * @param {!Object} target The object to add properties to.\n * @param {!Object} source The object to copy properties from.\n * @private\n */\ngoog.defineClass.applyProperties_ = function(target, source) {\n  // TODO(johnlenz): update this to support ES5 getters/setters\n\n  var key;\n  for (key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  }\n\n  // For IE the for-in-loop does not contain any properties that are not\n  // enumerable on the prototype object (for example isPrototypeOf from\n  // Object.prototype) and it will also not include 'replace' on objects that\n  // extend String and change 'replace' (not that it is common for anyone to\n  // extend anything except Object).\n  for (var i = 0; i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; i++) {\n    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  }\n};\n\n\n/**\n * Sealing classes breaks the older idiom of assigning properties on the\n * prototype rather than in the constructor. As such, goog.defineClass\n * must not seal subclasses of these old-style classes until they are fixed.\n * Until then, this marks a class as \"broken\", instructing defineClass\n * not to seal subclasses.\n * @param {!Function} ctr The legacy constructor to tag as unsealable.\n */\ngoog.tagUnsealableClass = function(ctr) {\n  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {\n    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;\n  }\n};\n\n\n/**\n * Name for unsealable tag property.\n * @const @private {string}\n */\ngoog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = 'goog_defineClass_legacy_unsealable';\n\n\n// There's a bug in the compiler where without collapse properties the\n// Closure namespace defines do not guard code correctly. To help reduce code\n// size also check for !COMPILED even though it redundant until this is fixed.\nif (!COMPILED && goog.DEPENDENCIES_ENABLED) {\n\n  /**\n   * Tries to detect whether is in the context of an HTML document.\n   * @return {boolean} True if it looks like HTML document.\n   * @private\n   */\n  goog.inHtmlDocument_ = function() {\n    /** @type {!Document} */\n    var doc = goog.global.document;\n    return doc != null && 'write' in doc;  // XULDocument misses write.\n  };\n\n\n  /**\n   * We'd like to check for if the document readyState is 'loading'; however\n   * there are bugs on IE 10 and below where the readyState being anything other\n   * than 'complete' is not reliable.\n   * @return {boolean}\n   * @private\n   */\n  goog.isDocumentLoading_ = function() {\n    // attachEvent is available on IE 6 thru 10 only, and thus can be used to\n    // detect those browsers.\n    /** @type {!HTMLDocument} */\n    var doc = goog.global.document;\n    return doc.attachEvent ? doc.readyState != 'complete' :\n                             doc.readyState == 'loading';\n  };\n\n\n  /**\n   * Tries to detect the base path of base.js script that bootstraps Closure.\n   * @private\n   */\n  goog.findBasePath_ = function() {\n    if (goog.global.CLOSURE_BASE_PATH != undefined &&\n        // Anti DOM-clobbering runtime check (b/37736576).\n        typeof goog.global.CLOSURE_BASE_PATH === 'string') {\n      goog.basePath = goog.global.CLOSURE_BASE_PATH;\n      return;\n    } else if (!goog.inHtmlDocument_()) {\n      return;\n    }\n    /** @type {!Document} */\n    var doc = goog.global.document;\n    // If we have a currentScript available, use it exclusively.\n    var currentScript = doc.currentScript;\n    if (currentScript) {\n      var scripts = [currentScript];\n    } else {\n      var scripts = doc.getElementsByTagName('SCRIPT');\n    }\n    // Search backwards since the current script is in almost all cases the one\n    // that has base.js.\n    for (var i = scripts.length - 1; i >= 0; --i) {\n      var script = /** @type {!HTMLScriptElement} */ (scripts[i]);\n      var src = script.src;\n      var qmark = src.lastIndexOf('?');\n      var l = qmark == -1 ? src.length : qmark;\n      if (src.substr(l - 7, 7) == 'base.js') {\n        goog.basePath = src.substr(0, l - 7);\n        return;\n      }\n    }\n  };\n\n  goog.findBasePath_();\n\n  /** @struct @constructor @final */\n  goog.Transpiler = function() {\n    /** @private {?Object<string, boolean>} */\n    this.requiresTranspilation_ = null;\n    /** @private {string} */\n    this.transpilationTarget_ = goog.TRANSPILE_TO_LANGUAGE;\n  };\n\n\n  /**\n   * Returns a newly created map from language mode string to a boolean\n   * indicating whether transpilation should be done for that mode as well as\n   * the highest level language that this environment supports.\n   *\n   * Guaranteed invariant:\n   * For any two modes, l1 and l2 where l2 is a newer mode than l1,\n   * `map[l1] == true` implies that `map[l2] == true`.\n   *\n   * Note this method is extracted and used elsewhere, so it cannot rely on\n   * anything external (it should easily be able to be transformed into a\n   * standalone, top level function).\n   *\n   * @private\n   * @return {{\n   *   target: string,\n   *   map: !Object<string, boolean>\n   * }}\n   */\n  goog.Transpiler.prototype.createRequiresTranspilation_ = function() {\n    var transpilationTarget = 'es3';\n    var /** !Object<string, boolean> */ requiresTranspilation = {'es3': false};\n    var transpilationRequiredForAllLaterModes = false;\n\n    /**\n     * Adds an entry to requiresTranspliation for the given language mode.\n     *\n     * IMPORTANT: Calls must be made in order from oldest to newest language\n     * mode.\n     * @param {string} modeName\n     * @param {function(): boolean} isSupported Returns true if the JS engine\n     *     supports the given mode.\n     */\n    function addNewerLanguageTranspilationCheck(modeName, isSupported) {\n      if (transpilationRequiredForAllLaterModes) {\n        requiresTranspilation[modeName] = true;\n      } else if (isSupported()) {\n        transpilationTarget = modeName;\n        requiresTranspilation[modeName] = false;\n      } else {\n        requiresTranspilation[modeName] = true;\n        transpilationRequiredForAllLaterModes = true;\n      }\n    }\n\n    /**\n     * Does the given code evaluate without syntax errors and return a truthy\n     * result?\n     */\n    function /** boolean */ evalCheck(/** string */ code) {\n      try {\n        return !!eval(code);\n      } catch (ignored) {\n        return false;\n      }\n    }\n\n    var userAgent = goog.global.navigator && goog.global.navigator.userAgent ?\n        goog.global.navigator.userAgent :\n        '';\n\n    // Identify ES3-only browsers by their incorrect treatment of commas.\n    addNewerLanguageTranspilationCheck('es5', function() {\n      return evalCheck('[1,].length==1');\n    });\n    addNewerLanguageTranspilationCheck('es6', function() {\n      // Edge has a non-deterministic (i.e., not reproducible) bug with ES6:\n      // https://github.com/Microsoft/ChakraCore/issues/1496.\n      var re = /Edge\\/(\\d+)(\\.\\d)*/i;\n      var edgeUserAgent = userAgent.match(re);\n      if (edgeUserAgent) {\n        // The Reflect.construct test below is flaky on Edge. It can sometimes\n        // pass or fail on 40 15.15063, so just exit early for Edge and treat\n        // it as ES5. Until we're on a more up to date version just always use\n        // ES5. See https://github.com/Microsoft/ChakraCore/issues/3217.\n        return false;\n      }\n      // Test es6: [FF50 (?), Edge 14 (?), Chrome 50]\n      //   (a) default params (specifically shadowing locals),\n      //   (b) destructuring, (c) block-scoped functions,\n      //   (d) for-of (const), (e) new.target/Reflect.construct\n      var es6fullTest =\n          'class X{constructor(){if(new.target!=String)throw 1;this.x=42}}' +\n          'let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof ' +\n          'String))throw 1;for(const a of[2,3]){if(a==2)continue;function ' +\n          'f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()' +\n          '==3}';\n\n      return evalCheck('(()=>{\"use strict\";' + es6fullTest + '})()');\n    });\n    // ** and **= are the only new features in 'es7'\n    addNewerLanguageTranspilationCheck('es7', function() {\n      return evalCheck('2 ** 2 == 4');\n    });\n    // async functions are the only new features in 'es8'\n    addNewerLanguageTranspilationCheck('es8', function() {\n      return evalCheck('async () => 1, true');\n    });\n    addNewerLanguageTranspilationCheck('es9', function() {\n      return evalCheck('({...rest} = {}), true');\n    });\n    addNewerLanguageTranspilationCheck('es_next', function() {\n      return false;  // assume it always need to transpile\n    });\n    return {target: transpilationTarget, map: requiresTranspilation};\n  };\n\n\n  /**\n   * Determines whether the given language needs to be transpiled.\n   * @param {string} lang\n   * @param {string|undefined} module\n   * @return {boolean}\n   */\n  goog.Transpiler.prototype.needsTranspile = function(lang, module) {\n    if (goog.TRANSPILE == 'always') {\n      return true;\n    } else if (goog.TRANSPILE == 'never') {\n      return false;\n    } else if (!this.requiresTranspilation_) {\n      var obj = this.createRequiresTranspilation_();\n      this.requiresTranspilation_ = obj.map;\n      this.transpilationTarget_ = this.transpilationTarget_ || obj.target;\n    }\n    if (lang in this.requiresTranspilation_) {\n      if (this.requiresTranspilation_[lang]) {\n        return true;\n      } else if (\n          goog.inHtmlDocument_() && module == 'es6' &&\n          !('noModule' in goog.global.document.createElement('script'))) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      throw new Error('Unknown language mode: ' + lang);\n    }\n  };\n\n\n  /**\n   * Lazily retrieves the transpiler and applies it to the source.\n   * @param {string} code JS code.\n   * @param {string} path Path to the code.\n   * @return {string} The transpiled code.\n   */\n  goog.Transpiler.prototype.transpile = function(code, path) {\n    // TODO(johnplaisted): We should delete goog.transpile_ and just have this\n    // function. But there's some compile error atm where goog.global is being\n    // stripped incorrectly without this.\n    return goog.transpile_(code, path, this.transpilationTarget_);\n  };\n\n\n  /** @private @final {!goog.Transpiler} */\n  goog.transpiler_ = new goog.Transpiler();\n\n  /**\n   * Rewrites closing script tags in input to avoid ending an enclosing script\n   * tag.\n   *\n   * @param {string} str\n   * @return {string}\n   * @private\n   */\n  goog.protectScriptTag_ = function(str) {\n    return str.replace(/<\\/(SCRIPT)/ig, '\\\\x3c/$1');\n  };\n\n\n  /**\n   * A debug loader is responsible for downloading and executing javascript\n   * files in an unbundled, uncompiled environment.\n   *\n   * This can be custimized via the setDependencyFactory method, or by\n   * CLOSURE_IMPORT_SCRIPT/CLOSURE_LOAD_FILE_SYNC.\n   *\n   * @struct @constructor @final @private\n   */\n  goog.DebugLoader_ = function() {\n    /** @private @const {!Object<string, !goog.Dependency>} */\n    this.dependencies_ = {};\n    /** @private @const {!Object<string, string>} */\n    this.idToPath_ = {};\n    /** @private @const {!Object<string, boolean>} */\n    this.written_ = {};\n    /** @private @const {!Array<!goog.Dependency>} */\n    this.loadingDeps_ = [];\n    /** @private {!Array<!goog.Dependency>} */\n    this.depsToLoad_ = [];\n    /** @private {boolean} */\n    this.paused_ = false;\n    /** @private {!goog.DependencyFactory} */\n    this.factory_ = new goog.DependencyFactory(goog.transpiler_);\n    /** @private @const {!Object<string, !Function>} */\n    this.deferredCallbacks_ = {};\n    /** @private @const {!Array<string>} */\n    this.deferredQueue_ = [];\n  };\n\n  /**\n   * @param {!Array<string>} namespaces\n   * @param {function(): undefined} callback Function to call once all the\n   *     namespaces have loaded.\n   */\n  goog.DebugLoader_.prototype.bootstrap = function(namespaces, callback) {\n    var cb = callback;\n    function resolve() {\n      if (cb) {\n        goog.global.setTimeout(cb, 0);\n        cb = null;\n      }\n    }\n\n    if (!namespaces.length) {\n      resolve();\n      return;\n    }\n\n    var deps = [];\n    for (var i = 0; i < namespaces.length; i++) {\n      var path = this.getPathFromDeps_(namespaces[i]);\n      if (!path) {\n        throw new Error('Unregonized namespace: ' + namespaces[i]);\n      }\n      deps.push(this.dependencies_[path]);\n    }\n\n    var require = goog.require;\n    var loaded = 0;\n    for (var i = 0; i < namespaces.length; i++) {\n      require(namespaces[i]);\n      deps[i].onLoad(function() {\n        if (++loaded == namespaces.length) {\n          resolve();\n        }\n      });\n    }\n  };\n\n\n  /**\n   * Loads the Closure Dependency file.\n   *\n   * Exposed a public function so CLOSURE_NO_DEPS can be set to false, base\n   * loaded, setDependencyFactory called, and then this called. i.e. allows\n   * custom loading of the deps file.\n   */\n  goog.DebugLoader_.prototype.loadClosureDeps = function() {\n    // Circumvent addDependency, which would try to transpile deps.js if\n    // transpile is set to always.\n    var relPath = 'deps.js';\n    this.depsToLoad_.push(this.factory_.createDependency(\n        goog.normalizePath_(goog.basePath + relPath), relPath, [], [], {},\n        false));\n    this.loadDeps_();\n  };\n\n\n  /**\n   * Notifies the debug loader when a dependency has been requested.\n   *\n   * @param {string} absPathOrId Path of the dependency or goog id.\n   * @param {boolean=} opt_force\n   */\n  goog.DebugLoader_.prototype.requested = function(absPathOrId, opt_force) {\n    var path = this.getPathFromDeps_(absPathOrId);\n    if (path &&\n        (opt_force || this.areDepsLoaded_(this.dependencies_[path].requires))) {\n      var callback = this.deferredCallbacks_[path];\n      if (callback) {\n        delete this.deferredCallbacks_[path];\n        callback();\n      }\n    }\n  };\n\n\n  /**\n   * Sets the dependency factory, which can be used to create custom\n   * goog.Dependency implementations to control how dependencies are loaded.\n   *\n   * @param {!goog.DependencyFactory} factory\n   */\n  goog.DebugLoader_.prototype.setDependencyFactory = function(factory) {\n    this.factory_ = factory;\n  };\n\n\n  /**\n   * Travserses the dependency graph and queues the given dependency, and all of\n   * its transitive dependencies, for loading and then starts loading if not\n   * paused.\n   *\n   * @param {string} namespace\n   * @private\n   */\n  goog.DebugLoader_.prototype.load_ = function(namespace) {\n    if (!this.getPathFromDeps_(namespace)) {\n      var errorMessage = 'goog.require could not find: ' + namespace;\n\n      goog.logToConsole_(errorMessage);\n      throw Error(errorMessage);\n    } else {\n      var loader = this;\n\n      var deps = [];\n\n      /** @param {string} namespace */\n      var visit = function(namespace) {\n        var path = loader.getPathFromDeps_(namespace);\n\n        if (!path) {\n          throw new Error('Bad dependency path or symbol: ' + namespace);\n        }\n\n        if (loader.written_[path]) {\n          return;\n        }\n\n        loader.written_[path] = true;\n\n        var dep = loader.dependencies_[path];\n        for (var i = 0; i < dep.requires.length; i++) {\n          if (!goog.isProvided_(dep.requires[i])) {\n            visit(dep.requires[i]);\n          }\n        }\n\n        deps.push(dep);\n      };\n\n      visit(namespace);\n\n      var wasLoading = !!this.depsToLoad_.length;\n      this.depsToLoad_ = this.depsToLoad_.concat(deps);\n\n      if (!this.paused_ && !wasLoading) {\n        this.loadDeps_();\n      }\n    }\n  };\n\n\n  /**\n   * Loads any queued dependencies until they are all loaded or paused.\n   *\n   * @private\n   */\n  goog.DebugLoader_.prototype.loadDeps_ = function() {\n    var loader = this;\n    var paused = this.paused_;\n\n    while (this.depsToLoad_.length && !paused) {\n      (function() {\n        var loadCallDone = false;\n        var dep = loader.depsToLoad_.shift();\n\n        var loaded = false;\n        loader.loading_(dep);\n\n        var controller = {\n          pause: function() {\n            if (loadCallDone) {\n              throw new Error('Cannot call pause after the call to load.');\n            } else {\n              paused = true;\n            }\n          },\n          resume: function() {\n            if (loadCallDone) {\n              loader.resume_();\n            } else {\n              // Some dep called pause and then resume in the same load call.\n              // Just keep running this same loop.\n              paused = false;\n            }\n          },\n          loaded: function() {\n            if (loaded) {\n              throw new Error('Double call to loaded.');\n            }\n\n            loaded = true;\n            loader.loaded_(dep);\n          },\n          pending: function() {\n            // Defensive copy.\n            var pending = [];\n            for (var i = 0; i < loader.loadingDeps_.length; i++) {\n              pending.push(loader.loadingDeps_[i]);\n            }\n            return pending;\n          },\n          /**\n           * @param {goog.ModuleType} type\n           */\n          setModuleState: function(type) {\n            goog.moduleLoaderState_ = {\n              type: type,\n              moduleName: '',\n              declareLegacyNamespace: false\n            };\n          },\n          /** @type {function(string, string, string=)} */\n          registerEs6ModuleExports: function(\n              path, exports, opt_closureNamespace) {\n            if (opt_closureNamespace) {\n              goog.loadedModules_[opt_closureNamespace] = {\n                exports: exports,\n                type: goog.ModuleType.ES6,\n                moduleId: opt_closureNamespace || ''\n              };\n            }\n          },\n          /** @type {function(string, ?)} */\n          registerGoogModuleExports: function(moduleId, exports) {\n            goog.loadedModules_[moduleId] = {\n              exports: exports,\n              type: goog.ModuleType.GOOG,\n              moduleId: moduleId\n            };\n          },\n          clearModuleState: function() {\n            goog.moduleLoaderState_ = null;\n          },\n          defer: function(callback) {\n            if (loadCallDone) {\n              throw new Error(\n                  'Cannot register with defer after the call to load.');\n            }\n            loader.defer_(dep, callback);\n          },\n          areDepsLoaded: function() {\n            return loader.areDepsLoaded_(dep.requires);\n          }\n        };\n\n        try {\n          dep.load(controller);\n        } finally {\n          loadCallDone = true;\n        }\n      })();\n    }\n\n    if (paused) {\n      this.pause_();\n    }\n  };\n\n\n  /** @private */\n  goog.DebugLoader_.prototype.pause_ = function() {\n    this.paused_ = true;\n  };\n\n\n  /** @private */\n  goog.DebugLoader_.prototype.resume_ = function() {\n    if (this.paused_) {\n      this.paused_ = false;\n      this.loadDeps_();\n    }\n  };\n\n\n  /**\n   * Marks the given dependency as loading (load has been called but it has not\n   * yet marked itself as finished). Useful for dependencies that want to know\n   * what else is loading. Example: goog.modules cannot eval if there are\n   * loading dependencies.\n   *\n   * @param {!goog.Dependency} dep\n   * @private\n   */\n  goog.DebugLoader_.prototype.loading_ = function(dep) {\n    this.loadingDeps_.push(dep);\n  };\n\n\n  /**\n   * Marks the given dependency as having finished loading and being available\n   * for require.\n   *\n   * @param {!goog.Dependency} dep\n   * @private\n   */\n  goog.DebugLoader_.prototype.loaded_ = function(dep) {\n    for (var i = 0; i < this.loadingDeps_.length; i++) {\n      if (this.loadingDeps_[i] == dep) {\n        this.loadingDeps_.splice(i, 1);\n        break;\n      }\n    }\n\n    for (var i = 0; i < this.deferredQueue_.length; i++) {\n      if (this.deferredQueue_[i] == dep.path) {\n        this.deferredQueue_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (this.loadingDeps_.length == this.deferredQueue_.length &&\n        !this.depsToLoad_.length) {\n      // Something has asked to load these, but they may not be directly\n      // required again later, so load them now that we know we're done loading\n      // everything else. e.g. a goog module entry point.\n      while (this.deferredQueue_.length) {\n        this.requested(this.deferredQueue_.shift(), true);\n      }\n    }\n\n    dep.loaded();\n  };\n\n\n  /**\n   * @param {!Array<string>} pathsOrIds\n   * @return {boolean}\n   * @private\n   */\n  goog.DebugLoader_.prototype.areDepsLoaded_ = function(pathsOrIds) {\n    for (var i = 0; i < pathsOrIds.length; i++) {\n      var path = this.getPathFromDeps_(pathsOrIds[i]);\n      if (!path ||\n          (!(path in this.deferredCallbacks_) &&\n           !goog.isProvided_(pathsOrIds[i]))) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n\n  /**\n   * @param {string} absPathOrId\n   * @return {?string}\n   * @private\n   */\n  goog.DebugLoader_.prototype.getPathFromDeps_ = function(absPathOrId) {\n    if (absPathOrId in this.idToPath_) {\n      return this.idToPath_[absPathOrId];\n    } else if (absPathOrId in this.dependencies_) {\n      return absPathOrId;\n    } else {\n      return null;\n    }\n  };\n\n\n  /**\n   * @param {!goog.Dependency} dependency\n   * @param {!Function} callback\n   * @private\n   */\n  goog.DebugLoader_.prototype.defer_ = function(dependency, callback) {\n    this.deferredCallbacks_[dependency.path] = callback;\n    this.deferredQueue_.push(dependency.path);\n  };\n\n\n  /**\n   * Interface for goog.Dependency implementations to have some control over\n   * loading of dependencies.\n   *\n   * @record\n   */\n  goog.LoadController = function() {};\n\n\n  /**\n   * Tells the controller to halt loading of more dependencies.\n   */\n  goog.LoadController.prototype.pause = function() {};\n\n\n  /**\n   * Tells the controller to resume loading of more dependencies if paused.\n   */\n  goog.LoadController.prototype.resume = function() {};\n\n\n  /**\n   * Tells the controller that this dependency has finished loading.\n   *\n   * This causes this to be removed from pending() and any load callbacks to\n   * fire.\n   */\n  goog.LoadController.prototype.loaded = function() {};\n\n\n  /**\n   * List of dependencies on which load has been called but which have not\n   * called loaded on their controller. This includes the current dependency.\n   *\n   * @return {!Array<!goog.Dependency>}\n   */\n  goog.LoadController.prototype.pending = function() {};\n\n\n  /**\n   * Registers an object as an ES6 module's exports so that goog.modules may\n   * require it by path.\n   *\n   * @param {string} path Full path of the module.\n   * @param {?} exports\n   * @param {string=} opt_closureNamespace Closure namespace to associate with\n   *     this module.\n   */\n  goog.LoadController.prototype.registerEs6ModuleExports = function(\n      path, exports, opt_closureNamespace) {};\n\n\n  /**\n   * Sets the current module state.\n   *\n   * @param {goog.ModuleType} type Type of module.\n   */\n  goog.LoadController.prototype.setModuleState = function(type) {};\n\n\n  /**\n   * Clears the current module state.\n   */\n  goog.LoadController.prototype.clearModuleState = function() {};\n\n\n  /**\n   * Registers a callback to call once the dependency is actually requested\n   * via goog.require + all of the immediate dependencies have been loaded or\n   * all other files have been loaded. Allows for lazy loading until\n   * require'd without pausing dependency loading, which is needed on old IE.\n   *\n   * @param {!Function} callback\n   */\n  goog.LoadController.prototype.defer = function(callback) {};\n\n\n  /**\n   * @return {boolean}\n   */\n  goog.LoadController.prototype.areDepsLoaded = function() {};\n\n\n  /**\n   * Basic super class for all dependencies Closure Library can load.\n   *\n   * This default implementation is designed to load untranspiled, non-module\n   * scripts in a web broswer.\n   *\n   * For transpiled non-goog.module files {@see goog.TranspiledDependency}.\n   * For goog.modules see {@see goog.GoogModuleDependency}.\n   * For untranspiled ES6 modules {@see goog.Es6ModuleDependency}.\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor\n   */\n  goog.Dependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    /** @const */\n    this.path = path;\n    /** @const */\n    this.relativePath = relativePath;\n    /** @const */\n    this.provides = provides;\n    /** @const */\n    this.requires = requires;\n    /** @const */\n    this.loadFlags = loadFlags;\n    /** @private {boolean} */\n    this.loaded_ = false;\n    /** @private {!Array<function()>} */\n    this.loadCallbacks_ = [];\n  };\n\n\n  /**\n   * @return {string} The pathname part of this dependency's path if it is a\n   *     URI.\n   */\n  goog.Dependency.prototype.getPathName = function() {\n    var pathName = this.path;\n    var protocolIndex = pathName.indexOf('://');\n    if (protocolIndex >= 0) {\n      pathName = pathName.substring(protocolIndex + 3);\n      var slashIndex = pathName.indexOf('/');\n      if (slashIndex >= 0) {\n        pathName = pathName.substring(slashIndex + 1);\n      }\n    }\n    return pathName;\n  };\n\n\n  /**\n   * @param {function()} callback Callback to fire as soon as this has loaded.\n   * @final\n   */\n  goog.Dependency.prototype.onLoad = function(callback) {\n    if (this.loaded_) {\n      callback();\n    } else {\n      this.loadCallbacks_.push(callback);\n    }\n  };\n\n\n  /**\n   * Marks this dependency as loaded and fires any callbacks registered with\n   * onLoad.\n   * @final\n   */\n  goog.Dependency.prototype.loaded = function() {\n    this.loaded_ = true;\n    var callbacks = this.loadCallbacks_;\n    this.loadCallbacks_ = [];\n    for (var i = 0; i < callbacks.length; i++) {\n      callbacks[i]();\n    }\n  };\n\n\n  /**\n   * Whether or not document.written / appended script tags should be deferred.\n   *\n   * @private {boolean}\n   */\n  goog.Dependency.defer_ = false;\n\n\n  /**\n   * Map of script ready / state change callbacks. Old IE cannot handle putting\n   * these properties on goog.global.\n   *\n   * @private @const {!Object<string, function(?):undefined>}\n   */\n  goog.Dependency.callbackMap_ = {};\n\n\n  /**\n   * @param {function(...?):?} callback\n   * @return {string}\n   * @private\n   */\n  goog.Dependency.registerCallback_ = function(callback) {\n    var key = Math.random().toString(32);\n    goog.Dependency.callbackMap_[key] = callback;\n    return key;\n  };\n\n\n  /**\n   * @param {string} key\n   * @private\n   */\n  goog.Dependency.unregisterCallback_ = function(key) {\n    delete goog.Dependency.callbackMap_[key];\n  };\n\n\n  /**\n   * @param {string} key\n   * @param {...?} var_args\n   * @private\n   * @suppress {unusedPrivateMembers}\n   */\n  goog.Dependency.callback_ = function(key, var_args) {\n    if (key in goog.Dependency.callbackMap_) {\n      var callback = goog.Dependency.callbackMap_[key];\n      var args = [];\n      for (var i = 1; i < arguments.length; i++) {\n        args.push(arguments[i]);\n      }\n      callback.apply(undefined, args);\n    } else {\n      var errorMessage = 'Callback key ' + key +\n          ' does not exist (was base.js loaded more than once?).';\n      throw Error(errorMessage);\n    }\n  };\n\n\n  /**\n   * Starts loading this dependency. This dependency can pause loading if it\n   * needs to and resume it later via the controller interface.\n   *\n   * When this is loaded it should call controller.loaded(). Note that this will\n   * end up calling the loaded method of this dependency; there is no need to\n   * call it explicitly.\n   *\n   * @param {!goog.LoadController} controller\n   */\n  goog.Dependency.prototype.load = function(controller) {\n    if (goog.global.CLOSURE_IMPORT_SCRIPT) {\n      if (goog.global.CLOSURE_IMPORT_SCRIPT(this.path)) {\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n    if (!goog.inHtmlDocument_()) {\n      goog.logToConsole_(\n          'Cannot use default debug loader outside of HTML documents.');\n      if (this.relativePath == 'deps.js') {\n        // Some old code is relying on base.js auto loading deps.js failing with\n        // no error before later setting CLOSURE_IMPORT_SCRIPT.\n        // CLOSURE_IMPORT_SCRIPT should be set *before* base.js is loaded, or\n        // CLOSURE_NO_DEPS set to true.\n        goog.logToConsole_(\n            'Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, ' +\n            'or setting CLOSURE_NO_DEPS to true.');\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n    /** @type {!HTMLDocument} */\n    var doc = goog.global.document;\n\n    // If the user tries to require a new symbol after document load,\n    // something has gone terribly wrong. Doing a document.write would\n    // wipe out the page. This does not apply to the CSP-compliant method\n    // of writing script tags.\n    if (doc.readyState == 'complete' &&\n        !goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {\n      // Certain test frameworks load base.js multiple times, which tries\n      // to write deps.js each time. If that happens, just fail silently.\n      // These frameworks wipe the page between each load of base.js, so this\n      // is OK.\n      var isDeps = /\\bdeps.js$/.test(this.path);\n      if (isDeps) {\n        controller.loaded();\n        return;\n      } else {\n        throw Error('Cannot write \"' + this.path + '\" after document load');\n      }\n    }\n\n    if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING &&\n        goog.isDocumentLoading_()) {\n      var key = goog.Dependency.registerCallback_(function(script) {\n        if (!goog.DebugLoader_.IS_OLD_IE_ || script.readyState == 'complete') {\n          goog.Dependency.unregisterCallback_(key);\n          controller.loaded();\n        }\n      });\n      var nonceAttr = !goog.DebugLoader_.IS_OLD_IE_ && goog.getScriptNonce() ?\n          ' nonce=\"' + goog.getScriptNonce() + '\"' :\n          '';\n      var event =\n          goog.DebugLoader_.IS_OLD_IE_ ? 'onreadystatechange' : 'onload';\n      var defer = goog.Dependency.defer_ ? 'defer' : '';\n      var script = '<script src=\"' + this.path + '\" ' + event +\n          '=\"goog.Dependency.callback_(\\'' + key +\n          '\\', this)\" type=\"text/javascript\" ' + defer + nonceAttr + '><' +\n          '/script>';\n      doc.write(\n          goog.TRUSTED_TYPES_POLICY_ ?\n              goog.TRUSTED_TYPES_POLICY_.createHTML(script) :\n              script);\n    } else {\n      var scriptEl =\n          /** @type {!HTMLScriptElement} */ (doc.createElement('script'));\n      scriptEl.defer = goog.Dependency.defer_;\n      scriptEl.async = false;\n      scriptEl.type = 'text/javascript';\n\n      // If CSP nonces are used, propagate them to dynamically created scripts.\n      // This is necessary to allow nonce-based CSPs without 'strict-dynamic'.\n      var nonce = goog.getScriptNonce();\n      if (nonce) {\n        scriptEl.setAttribute('nonce', nonce);\n      }\n\n      if (goog.DebugLoader_.IS_OLD_IE_) {\n        // Execution order is not guaranteed on old IE, halt loading and write\n        // these scripts one at a time, after each loads.\n        controller.pause();\n        scriptEl.onreadystatechange = function() {\n          if (scriptEl.readyState == 'loaded' ||\n              scriptEl.readyState == 'complete') {\n            controller.loaded();\n            controller.resume();\n          }\n        };\n      } else {\n        scriptEl.onload = function() {\n          scriptEl.onload = null;\n          controller.loaded();\n        };\n      }\n\n      scriptEl.src = goog.TRUSTED_TYPES_POLICY_ ?\n          goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path) :\n          this.path;\n      doc.head.appendChild(scriptEl);\n    }\n  };\n\n\n  /**\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides Should be an empty array.\n   *     TODO(johnplaisted) add support for adding closure namespaces to ES6\n   *     modules for interop purposes.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor\n   * @extends {goog.Dependency}\n   */\n  goog.Es6ModuleDependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    goog.Es6ModuleDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n  };\n  goog.inherits(goog.Es6ModuleDependency, goog.Dependency);\n\n\n  /** @override */\n  goog.Es6ModuleDependency.prototype.load = function(controller) {\n    if (goog.global.CLOSURE_IMPORT_SCRIPT) {\n      if (goog.global.CLOSURE_IMPORT_SCRIPT(this.path)) {\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n    if (!goog.inHtmlDocument_()) {\n      goog.logToConsole_(\n          'Cannot use default debug loader outside of HTML documents.');\n      controller.pause();\n      return;\n    }\n\n    /** @type {!HTMLDocument} */\n    var doc = goog.global.document;\n\n    var dep = this;\n\n    // TODO(johnplaisted): Does document.writing really speed up anything? Any\n    // difference between this and just waiting for interactive mode and then\n    // appending?\n    function write(src, contents) {\n      if (contents) {\n        var script = '<script type=\"module\" crossorigin>' + contents + '</' +\n            'script>';\n        doc.write(\n            goog.TRUSTED_TYPES_POLICY_ ?\n                goog.TRUSTED_TYPES_POLICY_.createHTML(script) :\n                script);\n      } else {\n        var script = '<script type=\"module\" crossorigin src=\"' + src + '\"></' +\n            'script>';\n        doc.write(\n            goog.TRUSTED_TYPES_POLICY_ ?\n                goog.TRUSTED_TYPES_POLICY_.createHTML(script) :\n                script);\n      }\n    }\n\n    function append(src, contents) {\n      var scriptEl =\n          /** @type {!HTMLScriptElement} */ (doc.createElement('script'));\n      scriptEl.defer = true;\n      scriptEl.async = false;\n      scriptEl.type = 'module';\n      scriptEl.setAttribute('crossorigin', true);\n\n      // If CSP nonces are used, propagate them to dynamically created scripts.\n      // This is necessary to allow nonce-based CSPs without 'strict-dynamic'.\n      var nonce = goog.getScriptNonce();\n      if (nonce) {\n        scriptEl.setAttribute('nonce', nonce);\n      }\n\n      if (contents) {\n        scriptEl.textContent = goog.TRUSTED_TYPES_POLICY_ ?\n            goog.TRUSTED_TYPES_POLICY_.createScript(contents) :\n            contents;\n      } else {\n        scriptEl.src = goog.TRUSTED_TYPES_POLICY_ ?\n            goog.TRUSTED_TYPES_POLICY_.createScriptURL(src) :\n            src;\n      }\n\n      doc.head.appendChild(scriptEl);\n    }\n\n    var create;\n\n    if (goog.isDocumentLoading_()) {\n      create = write;\n      // We can ONLY call document.write if we are guaranteed that any\n      // non-module script tags document.written after this are deferred.\n      // Small optimization, in theory document.writing is faster.\n      goog.Dependency.defer_ = true;\n    } else {\n      create = append;\n    }\n\n    // Write 4 separate tags here:\n    // 1) Sets the module state at the correct time (just before execution).\n    // 2) A src node for this, which just hopefully lets the browser load it a\n    //    little early (no need to parse #3).\n    // 3) Import the module and register it.\n    // 4) Clear the module state at the correct time. Guaranteed to run even\n    //    if there is an error in the module (#3 will not run if there is an\n    //    error in the module).\n    var beforeKey = goog.Dependency.registerCallback_(function() {\n      goog.Dependency.unregisterCallback_(beforeKey);\n      controller.setModuleState(goog.ModuleType.ES6);\n    });\n    create(undefined, 'goog.Dependency.callback_(\"' + beforeKey + '\")');\n\n    // TODO(johnplaisted): Does this really speed up anything?\n    create(this.path, undefined);\n\n    var registerKey = goog.Dependency.registerCallback_(function(exports) {\n      goog.Dependency.unregisterCallback_(registerKey);\n      controller.registerEs6ModuleExports(\n          dep.path, exports, goog.moduleLoaderState_.moduleName);\n    });\n    create(\n        undefined,\n        'import * as m from \"' + this.path + '\"; goog.Dependency.callback_(\"' +\n            registerKey + '\", m)');\n\n    var afterKey = goog.Dependency.registerCallback_(function() {\n      goog.Dependency.unregisterCallback_(afterKey);\n      controller.clearModuleState();\n      controller.loaded();\n    });\n    create(undefined, 'goog.Dependency.callback_(\"' + afterKey + '\")');\n  };\n\n\n  /**\n   * Superclass of any dependency that needs to be loaded into memory,\n   * transformed, and then eval'd (goog.modules and transpiled files).\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor @abstract\n   * @extends {goog.Dependency}\n   */\n  goog.TransformedDependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    goog.TransformedDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n    /** @private {?string} */\n    this.contents_ = null;\n\n    /**\n     * Whether to lazily make the synchronous XHR (when goog.require'd) or make\n     * the synchronous XHR when initially loading. On FireFox 61 there is a bug\n     * where an ES6 module cannot make a synchronous XHR (rather, it can, but if\n     * it does then no other ES6 modules will load after).\n     *\n     * tl;dr we lazy load due to bugs on older browsers and eager load due to\n     * bugs on newer ones.\n     *\n     * https://bugzilla.mozilla.org/show_bug.cgi?id=1477090\n     *\n     * @private @const {boolean}\n     */\n    this.lazyFetch_ = !goog.inHtmlDocument_() ||\n        !('noModule' in goog.global.document.createElement('script'));\n  };\n  goog.inherits(goog.TransformedDependency, goog.Dependency);\n\n\n  /** @override */\n  goog.TransformedDependency.prototype.load = function(controller) {\n    var dep = this;\n\n    function fetch() {\n      dep.contents_ = goog.loadFileSync_(dep.path);\n\n      if (dep.contents_) {\n        dep.contents_ = dep.transform(dep.contents_);\n        if (dep.contents_) {\n          dep.contents_ += '\\n//# sourceURL=' + dep.path;\n        }\n      }\n    }\n\n    if (goog.global.CLOSURE_IMPORT_SCRIPT) {\n      fetch();\n      if (this.contents_ &&\n          goog.global.CLOSURE_IMPORT_SCRIPT('', this.contents_)) {\n        this.contents_ = null;\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n\n    var isEs6 = this.loadFlags['module'] == goog.ModuleType.ES6;\n\n    if (!this.lazyFetch_) {\n      fetch();\n    }\n\n    function load() {\n      if (dep.lazyFetch_) {\n        fetch();\n      }\n\n      if (!dep.contents_) {\n        // loadFileSync_ or transform are responsible. Assume they logged an\n        // error.\n        return;\n      }\n\n      if (isEs6) {\n        controller.setModuleState(goog.ModuleType.ES6);\n      }\n\n      var namespace;\n\n      try {\n        var contents = dep.contents_;\n        dep.contents_ = null;\n        goog.globalEval(contents);\n        if (isEs6) {\n          namespace = goog.moduleLoaderState_.moduleName;\n        }\n      } finally {\n        if (isEs6) {\n          controller.clearModuleState();\n        }\n      }\n\n      if (isEs6) {\n        // Due to circular dependencies this may not be available for require\n        // right now.\n        goog.global['$jscomp']['require']['ensure'](\n            [dep.getPathName()], function() {\n              controller.registerEs6ModuleExports(\n                  dep.path,\n                  goog.global['$jscomp']['require'](dep.getPathName()),\n                  namespace);\n            });\n      }\n\n      controller.loaded();\n    }\n\n    // Do not fetch now; in FireFox 47 the synchronous XHR doesn't block all\n    // events. If we fetched now and then document.write'd the contents the\n    // document.write would be an eval and would execute too soon! Instead write\n    // a script tag to fetch and eval synchronously at the correct time.\n    function fetchInOwnScriptThenLoad() {\n      /** @type {!HTMLDocument} */\n      var doc = goog.global.document;\n\n      var key = goog.Dependency.registerCallback_(function() {\n        goog.Dependency.unregisterCallback_(key);\n        load();\n      });\n\n      var script = '<script type=\"text/javascript\">' +\n          goog.protectScriptTag_('goog.Dependency.callback_(\"' + key + '\");') +\n          '</' +\n          'script>';\n      doc.write(\n          goog.TRUSTED_TYPES_POLICY_ ?\n              goog.TRUSTED_TYPES_POLICY_.createHTML(script) :\n              script);\n    }\n\n    // If one thing is pending it is this.\n    var anythingElsePending = controller.pending().length > 1;\n\n    // If anything else is loading we need to lazy load due to bugs in old IE.\n    // Specifically script tags with src and script tags with contents could\n    // execute out of order if document.write is used, so we cannot use\n    // document.write. Do not pause here; it breaks old IE as well.\n    var useOldIeWorkAround =\n        anythingElsePending && goog.DebugLoader_.IS_OLD_IE_;\n\n    // Additionally if we are meant to defer scripts but the page is still\n    // loading (e.g. an ES6 module is loading) then also defer. Or if we are\n    // meant to defer and anything else is pending then defer (those may be\n    // scripts that did not need transformation and are just script tags with\n    // defer set to true, and we need to evaluate after that deferred script).\n    var needsAsyncLoading = goog.Dependency.defer_ &&\n        (anythingElsePending || goog.isDocumentLoading_());\n\n    if (useOldIeWorkAround || needsAsyncLoading) {\n      // Note that we only defer when we have to rather than 100% of the time.\n      // Always defering would work, but then in theory the order of\n      // goog.require calls would then matter. We want to enforce that most of\n      // the time the order of the require calls does not matter.\n      controller.defer(function() {\n        load();\n      });\n      return;\n    }\n    // TODO(johnplaisted): Externs are missing onreadystatechange for\n    // HTMLDocument.\n    /** @type {?} */\n    var doc = goog.global.document;\n\n    var isInternetExplorer =\n        goog.inHtmlDocument_() && 'ActiveXObject' in goog.global;\n\n    // Don't delay in any version of IE. There's bug around this that will\n    // cause out of order script execution. This means that on older IE ES6\n    // modules will load too early (while the document is still loading + the\n    // dom is not available). The other option is to load too late (when the\n    // document is complete and the onload even will never fire). This seems\n    // to be the lesser of two evils as scripts already act like the former.\n    if (isEs6 && goog.inHtmlDocument_() && goog.isDocumentLoading_() &&\n        !isInternetExplorer) {\n      goog.Dependency.defer_ = true;\n      // Transpiled ES6 modules still need to load like regular ES6 modules,\n      // aka only after the document is interactive.\n      controller.pause();\n      var oldCallback = doc.onreadystatechange;\n      doc.onreadystatechange = function() {\n        if (doc.readyState == 'interactive') {\n          doc.onreadystatechange = oldCallback;\n          load();\n          controller.resume();\n        }\n        if (goog.isFunction(oldCallback)) {\n          oldCallback.apply(undefined, arguments);\n        }\n      };\n    } else {\n      // Always eval on old IE.\n      if (goog.DebugLoader_.IS_OLD_IE_ || !goog.inHtmlDocument_() ||\n          !goog.isDocumentLoading_()) {\n        load();\n      } else {\n        fetchInOwnScriptThenLoad();\n      }\n    }\n  };\n\n\n  /**\n   * @param {string} contents\n   * @return {string}\n   * @abstract\n   */\n  goog.TransformedDependency.prototype.transform = function(contents) {};\n\n\n  /**\n   * Any non-goog.module dependency which needs to be transpiled before eval.\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @param {!goog.Transpiler} transpiler\n   * @struct @constructor\n   * @extends {goog.TransformedDependency}\n   */\n  goog.TranspiledDependency = function(\n      path, relativePath, provides, requires, loadFlags, transpiler) {\n    goog.TranspiledDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n    /** @protected @const*/\n    this.transpiler = transpiler;\n  };\n  goog.inherits(goog.TranspiledDependency, goog.TransformedDependency);\n\n\n  /** @override */\n  goog.TranspiledDependency.prototype.transform = function(contents) {\n    // Transpile with the pathname so that ES6 modules are domain agnostic.\n    return this.transpiler.transpile(contents, this.getPathName());\n  };\n\n\n  /**\n   * An ES6 module dependency that was transpiled to a jscomp module outside\n   * of the debug loader, e.g. server side.\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor\n   * @extends {goog.TransformedDependency}\n   */\n  goog.PreTranspiledEs6ModuleDependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    goog.PreTranspiledEs6ModuleDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n  };\n  goog.inherits(\n      goog.PreTranspiledEs6ModuleDependency, goog.TransformedDependency);\n\n\n  /** @override */\n  goog.PreTranspiledEs6ModuleDependency.prototype.transform = function(\n      contents) {\n    return contents;\n  };\n\n\n  /**\n   * A goog.module, transpiled or not. Will always perform some minimal\n   * transformation even when not transpiled to wrap in a goog.loadModule\n   * statement.\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @param {boolean} needsTranspile\n   * @param {!goog.Transpiler} transpiler\n   * @struct @constructor\n   * @extends {goog.TransformedDependency}\n   */\n  goog.GoogModuleDependency = function(\n      path, relativePath, provides, requires, loadFlags, needsTranspile,\n      transpiler) {\n    goog.GoogModuleDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n    /** @private @const */\n    this.needsTranspile_ = needsTranspile;\n    /** @private @const */\n    this.transpiler_ = transpiler;\n  };\n  goog.inherits(goog.GoogModuleDependency, goog.TransformedDependency);\n\n\n  /** @override */\n  goog.GoogModuleDependency.prototype.transform = function(contents) {\n    if (this.needsTranspile_) {\n      contents = this.transpiler_.transpile(contents, this.getPathName());\n    }\n\n    if (!goog.LOAD_MODULE_USING_EVAL || goog.global.JSON === undefined) {\n      return '' +\n          'goog.loadModule(function(exports) {' +\n          '\"use strict\";' + contents +\n          '\\n' +  // terminate any trailing single line comment.\n          ';return exports' +\n          '});' +\n          '\\n//# sourceURL=' + this.path + '\\n';\n    } else {\n      return '' +\n          'goog.loadModule(' +\n          goog.global.JSON.stringify(\n              contents + '\\n//# sourceURL=' + this.path + '\\n') +\n          ');';\n    }\n  };\n\n\n  /**\n   * Whether the browser is IE9 or earlier, which needs special handling\n   * for deferred modules.\n   * @const @private {boolean}\n   */\n  goog.DebugLoader_.IS_OLD_IE_ = !!(\n      !goog.global.atob && goog.global.document && goog.global.document['all']);\n\n\n  /**\n   * @param {string} relPath\n   * @param {!Array<string>|undefined} provides\n   * @param {!Array<string>} requires\n   * @param {boolean|!Object<string>=} opt_loadFlags\n   * @see goog.addDependency\n   */\n  goog.DebugLoader_.prototype.addDependency = function(\n      relPath, provides, requires, opt_loadFlags) {\n    provides = provides || [];\n    relPath = relPath.replace(/\\\\/g, '/');\n    var path = goog.normalizePath_(goog.basePath + relPath);\n    if (!opt_loadFlags || typeof opt_loadFlags === 'boolean') {\n      opt_loadFlags = opt_loadFlags ? {'module': goog.ModuleType.GOOG} : {};\n    }\n    var dep = this.factory_.createDependency(\n        path, relPath, provides, requires, opt_loadFlags,\n        goog.transpiler_.needsTranspile(\n            opt_loadFlags['lang'] || 'es3', opt_loadFlags['module']));\n    this.dependencies_[path] = dep;\n    for (var i = 0; i < provides.length; i++) {\n      this.idToPath_[provides[i]] = path;\n    }\n    this.idToPath_[relPath] = path;\n  };\n\n\n  /**\n   * Creates goog.Dependency instances for the debug loader to load.\n   *\n   * Should be overridden to have the debug loader use custom subclasses of\n   * goog.Dependency.\n   *\n   * @param {!goog.Transpiler} transpiler\n   * @struct @constructor\n   */\n  goog.DependencyFactory = function(transpiler) {\n    /** @protected @const */\n    this.transpiler = transpiler;\n  };\n\n\n  /**\n   * @param {string} path Absolute path of the file.\n   * @param {string} relativePath Path relative to closure\u2019s base.js.\n   * @param {!Array<string>} provides Array of provided goog.provide/module ids.\n   * @param {!Array<string>} requires Array of required goog.provide/module /\n   *     relative ES6 module paths.\n   * @param {!Object<string, string>} loadFlags\n   * @param {boolean} needsTranspile True if the file needs to be transpiled\n   *     per the goog.Transpiler.\n   * @return {!goog.Dependency}\n   */\n  goog.DependencyFactory.prototype.createDependency = function(\n      path, relativePath, provides, requires, loadFlags, needsTranspile) {\n\n    if (loadFlags['module'] == goog.ModuleType.GOOG) {\n      return new goog.GoogModuleDependency(\n          path, relativePath, provides, requires, loadFlags, needsTranspile,\n          this.transpiler);\n    } else if (needsTranspile) {\n      return new goog.TranspiledDependency(\n          path, relativePath, provides, requires, loadFlags, this.transpiler);\n    } else {\n      if (loadFlags['module'] == goog.ModuleType.ES6) {\n        if (goog.TRANSPILE == 'never' && goog.ASSUME_ES_MODULES_TRANSPILED) {\n          return new goog.PreTranspiledEs6ModuleDependency(\n              path, relativePath, provides, requires, loadFlags);\n        } else {\n          return new goog.Es6ModuleDependency(\n              path, relativePath, provides, requires, loadFlags);\n        }\n      } else {\n        return new goog.Dependency(\n            path, relativePath, provides, requires, loadFlags);\n      }\n    }\n  };\n\n\n  /** @private @const */\n  goog.debugLoader_ = new goog.DebugLoader_();\n\n\n  /**\n   * Loads the Closure Dependency file.\n   *\n   * Exposed a public function so CLOSURE_NO_DEPS can be set to false, base\n   * loaded, setDependencyFactory called, and then this called. i.e. allows\n   * custom loading of the deps file.\n   */\n  goog.loadClosureDeps = function() {\n    goog.debugLoader_.loadClosureDeps();\n  };\n\n\n  /**\n   * Sets the dependency factory, which can be used to create custom\n   * goog.Dependency implementations to control how dependencies are loaded.\n   *\n   * Note: if you wish to call this function and provide your own implemnetation\n   * it is a wise idea to set CLOSURE_NO_DEPS to true, otherwise the dependency\n   * file and all of its goog.addDependency calls will use the default factory.\n   * You can call goog.loadClosureDeps to load the Closure dependency file\n   * later, after your factory is injected.\n   *\n   * @param {!goog.DependencyFactory} factory\n   */\n  goog.setDependencyFactory = function(factory) {\n    goog.debugLoader_.setDependencyFactory(factory);\n  };\n\n\n  if (!goog.global.CLOSURE_NO_DEPS) {\n    goog.debugLoader_.loadClosureDeps();\n  }\n\n\n  /**\n   * Bootstraps the given namespaces and calls the callback once they are\n   * available either via goog.require. This is a replacement for using\n   * `goog.require` to bootstrap Closure JavaScript. Previously a `goog.require`\n   * in an HTML file would guarantee that the require'd namespace was available\n   * in the next immediate script tag. With ES6 modules this no longer a\n   * guarantee.\n   *\n   * @param {!Array<string>} namespaces\n   * @param {function(): ?} callback Function to call once all the namespaces\n   *     have loaded. Always called asynchronously.\n   */\n  goog.bootstrap = function(namespaces, callback) {\n    goog.debugLoader_.bootstrap(namespaces, callback);\n  };\n}\n\n\n/**\n * @define {string} Trusted Types policy name. If non-empty then Closure will\n * use Trusted Types.\n */\ngoog.TRUSTED_TYPES_POLICY_NAME =\n    goog.define('goog.TRUSTED_TYPES_POLICY_NAME', '');\n\n\n/**\n * Returns the parameter.\n * @param {string} s\n * @return {string}\n * @private\n */\ngoog.identity_ = function(s) {\n  return s;\n};\n\n\n/**\n * Creates Trusted Types policy if Trusted Types are supported by the browser.\n * The policy just blesses any string as a Trusted Type. It is not visibility\n * restricted because anyone can also call TrustedTypes.createPolicy directly.\n * However, the allowed names should be restricted by a HTTP header and the\n * reference to the created policy should be visibility restricted.\n * @param {string} name\n * @return {?TrustedTypePolicy}\n */\ngoog.createTrustedTypesPolicy = function(name) {\n  var policy = null;\n  // TODO(koto): Remove window.TrustedTypes variant when the newer API ships.\n  var policyFactory = goog.global.trustedTypes || goog.global.TrustedTypes;\n  if (!policyFactory || !policyFactory.createPolicy) {\n    return policy;\n  }\n  // TrustedTypes.createPolicy throws if called with a name that is already\n  // registered, even in report-only mode. Until the API changes, catch the\n  // error not to break the applications functionally. In such case, the code\n  // will fall back to using regular Safe Types.\n  // TODO(koto): Remove catching once createPolicy API stops throwing.\n  try {\n    policy = policyFactory.createPolicy(name, {\n      createHTML: goog.identity_,\n      createScript: goog.identity_,\n      createScriptURL: goog.identity_,\n      createURL: goog.identity_\n    });\n  } catch (e) {\n    goog.logToConsole_(e.message);\n  }\n  return policy;\n};\n\n\n/** @private @const {?TrustedTypePolicy} */\ngoog.TRUSTED_TYPES_POLICY_ = goog.TRUSTED_TYPES_POLICY_NAME ?\n    goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + '#base') :\n    null;\n"],
"names":["COMPILED","goog","global","self","CLOSURE_UNCOMPILED_DEFINES","CLOSURE_DEFINES","isDef","goog.isDef","val","isString","goog.isString","isBoolean","goog.isBoolean","isNumber","goog.isNumber","exportPath_","goog.exportPath_","name","opt_object","opt_objectToExportTo","parts","split","cur","execScript","part","length","shift","undefined","Object","prototype","define","goog.define","defaultValue","value","uncompiledDefines","defines","nodeType","hasOwnProperty","call","FEATURESET_YEAR","DEBUG","LOCALE","TRUSTED_SITE","STRICT_MODE_COMPATIBLE","DISALLOW_TEST_ONLY_CODE","ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING","provide","goog.provide","isInModuleLoader_","Error","isProvided_","constructNamespace_","goog.constructNamespace_","opt_obj","implicitNamespaces_","namespace","substring","lastIndexOf","getObjectByName","getScriptNonce","goog.getScriptNonce","opt_window","getScriptNonce_","document","cspNonce_","NONCE_PATTERN_","goog.getScriptNonce_","doc","script","querySelector","nonce","getAttribute","test","VALID_MODULE_RE_","module","goog.module","search","isInGoogModuleLoader_","moduleLoaderState_","moduleName","get","goog.module.get","getInternal_","goog.module.getInternal_","loadedModules_","exports","ns","ModuleType","ES6","GOOG","goog.isInModuleLoader_","isInEs6ModuleLoader_","goog.isInGoogModuleLoader_","type","goog.isInEs6ModuleLoader_","inLoader","jscomp","getCurrentModulePath","declareLegacyNamespace","goog.module.declareLegacyNamespace","declareModuleId","goog.declareModuleId","require","moduleId","setTestOnly","goog.setTestOnly","opt_message","forwardDeclare","goog.forwardDeclare","goog.isProvided_","goog.getObjectByName","i","globalize","goog.globalize","obj","opt_global","x","addDependency","goog.addDependency","relPath","provides","requires","opt_loadFlags","DEPENDENCIES_ENABLED","debugLoader_","ENABLE_DEBUG_LOADER","logToConsole_","goog.logToConsole_","msg","console","goog.require","requested","moduleLoaderState","load_","requireType","goog.requireType","basePath","CLOSURE_BASE_PATH","CLOSURE_NO_DEPS","CLOSURE_IMPORT_SCRIPT","nullFunction","goog.nullFunction","abstractMethod","goog.abstractMethod","addSingletonGetter","goog.addSingletonGetter","ctor","instance_","getInstance","ctor.getInstance","instantiatedSingletons_","LOAD_MODULE_USING_EVAL","SEAL_MODULE_EXPORTS","TRANSPILE","ASSUME_ES_MODULES_TRANSPILED","TRANSPILE_TO_LANGUAGE","TRANSPILER","hasBadLetScoping","useSafari10Workaround","goog.useSafari10Workaround","eval","e","workaroundSafari10EvalBug","goog.workaroundSafari10EvalBug","moduleDef","loadModule","goog.loadModule","previousState","isFunction","loadModuleFromSource_","seal","data","arguments","normalizePath_","goog.normalizePath_","path","components","splice","join","CLOSURE_LOAD_FILE_SYNC","loadFileSync_","goog.loadFileSync_","src","xhr","open","send","status","responseText","err","transpile_","goog.transpile_","code","target","transpile","transpilerPath","transpilerCode","JSON","stringify","suffix","jscomp.transpile","typeOf","goog.typeOf","s","Array","className","toString","propertyIsEnumerable","isNull","goog.isNull","isDefAndNotNull","goog.isDefAndNotNull","isArray","goog.isArray","isArrayLike","goog.isArrayLike","isDateLike","goog.isDateLike","isObject","getFullYear","goog.isFunction","goog.isObject","getUid","goog.getUid","UID_PROPERTY_","uidCounter_","hasUid","goog.hasUid","removeUid","goog.removeUid","removeAttribute","ex","Math","random","getHashCode","removeHashCode","cloneObject","goog.cloneObject","clone","key","bindNative_","goog.bindNative_","fn","selfObj","var_args","apply","bind","bindJs_","goog.bindJs_","boundArgs","slice","newArgs","unshift","goog.bind","Function","indexOf","partial","goog.partial","args","push","mixin","goog.mixin","source","now","Date","globalEval","goog.globalEval","evalWorksForGlobals_","ignore","scriptElt","createElement","defer","appendChild","createTextNode","head","removeChild","cssNameMapping_","cssNameMappingStyle_","CLOSURE_CSS_NAME_MAP_FN","getCssName","goog.getCssName","opt_modifier","String","charAt","getMapping","cssName","renameByParts","mapped","rename","a","result","setCssNameMapping","goog.setCssNameMapping","mapping","opt_style","CLOSURE_CSS_NAME_MAPPING","getMsg","goog.getMsg","str","opt_values","opt_options","html","replace","match","getMsgWithFallback","goog.getMsgWithFallback","b","exportSymbol","goog.exportSymbol","publicPath","object","exportProperty","goog.exportProperty","publicName","symbol","inherits","goog.inherits","childCtor","parentCtor","tempCtor","superClass_","constructor","base","childCtor.base","me","methodName","goog.base","opt_methodName","caller","callee","ctorArgs","foundCaller","proto","getPrototypeOf","scope","goog.scope","defineClass","goog.defineClass","superClass","def","statics","cls","createSealingConstructor_","applyProperties_","ClassDescriptor","SEAL_CLASS_INSTANCES","goog.defineClass.createSealingConstructor_","ctr","superclassSealable","isUnsealable_","wrappedCtr","instance","goog.defineClass.isUnsealable_","UNSEALABLE_CONSTRUCTOR_PROPERTY_","OBJECT_PROTOTYPE_FIELDS_","goog.defineClass.applyProperties_","tagUnsealableClass","goog.tagUnsealableClass","inHtmlDocument_","goog.inHtmlDocument_","isDocumentLoading_","goog.isDocumentLoading_","attachEvent","readyState","findBasePath_","goog.findBasePath_","currentScript","scripts","getElementsByTagName","qmark","l","substr","Transpiler","goog.Transpiler","requiresTranspilation_","transpilationTarget_","createRequiresTranspilation_","goog.Transpiler.prototype.createRequiresTranspilation_","transpilationTarget","requiresTranspilation","transpilationRequiredForAllLaterModes","addNewerLanguageTranspilationCheck","modeName","isSupported","evalCheck","ignored","userAgent","navigator","re","edgeUserAgent","es6fullTest","map","needsTranspile","goog.Transpiler.prototype.needsTranspile","lang","goog.Transpiler.prototype.transpile","transpiler_","protectScriptTag_","goog.protectScriptTag_","DebugLoader_","goog.DebugLoader_","dependencies_","idToPath_","written_","loadingDeps_","depsToLoad_","paused_","factory_","DependencyFactory","deferredCallbacks_","deferredQueue_","bootstrap","goog.DebugLoader_.prototype.bootstrap","namespaces","callback","cb","resolve","setTimeout","deps","getPathFromDeps_","loaded","onLoad","loadClosureDeps","goog.DebugLoader_.prototype.loadClosureDeps","createDependency","loadDeps_","goog.DebugLoader_.prototype.requested","absPathOrId","opt_force","areDepsLoaded_","setDependencyFactory","goog.DebugLoader_.prototype.setDependencyFactory","factory","goog.DebugLoader_.prototype.load_","errorMessage","loader","visit","dep","wasLoading","concat","goog.DebugLoader_.prototype.loadDeps_","paused","loadCallDone","loading_","controller","pause","resume","resume_","loaded_","pending","setModuleState","registerEs6ModuleExports","opt_closureNamespace","registerGoogModuleExports","clearModuleState","defer_","areDepsLoaded","load","pause_","goog.DebugLoader_.prototype.pause_","goog.DebugLoader_.prototype.resume_","goog.DebugLoader_.prototype.loading_","goog.DebugLoader_.prototype.loaded_","goog.DebugLoader_.prototype.areDepsLoaded_","pathsOrIds","goog.DebugLoader_.prototype.getPathFromDeps_","goog.DebugLoader_.prototype.defer_","dependency","LoadController","goog.LoadController","goog.LoadController.prototype.pause","goog.LoadController.prototype.resume","goog.LoadController.prototype.loaded","goog.LoadController.prototype.pending","goog.LoadController.prototype.registerEs6ModuleExports","goog.LoadController.prototype.setModuleState","goog.LoadController.prototype.clearModuleState","goog.LoadController.prototype.defer","goog.LoadController.prototype.areDepsLoaded","Dependency","goog.Dependency","relativePath","loadFlags","loadCallbacks_","getPathName","goog.Dependency.prototype.getPathName","pathName","protocolIndex","slashIndex","goog.Dependency.prototype.onLoad","goog.Dependency.prototype.loaded","callbacks","callbackMap_","registerCallback_","goog.Dependency.registerCallback_","unregisterCallback_","goog.Dependency.unregisterCallback_","callback_","goog.Dependency.callback_","goog.Dependency.prototype.load","isDeps","IS_OLD_IE_","nonceAttr","event","write","TRUSTED_TYPES_POLICY_","createHTML","scriptEl","async","setAttribute","onreadystatechange","scriptEl.onreadystatechange","onload","scriptEl.onload","createScriptURL","Es6ModuleDependency","goog.Es6ModuleDependency","goog.Es6ModuleDependency.prototype.load","contents","append","textContent","createScript","create","beforeKey","registerKey","afterKey","TransformedDependency","goog.TransformedDependency","contents_","lazyFetch_","goog.TransformedDependency.prototype.load","fetch","transform","isEs6","fetchInOwnScriptThenLoad","anythingElsePending","useOldIeWorkAround","needsAsyncLoading","isInternetExplorer","oldCallback","doc.onreadystatechange","goog.TransformedDependency.prototype.transform","TranspiledDependency","goog.TranspiledDependency","transpiler","goog.TranspiledDependency.prototype.transform","PreTranspiledEs6ModuleDependency","goog.PreTranspiledEs6ModuleDependency","goog.PreTranspiledEs6ModuleDependency.prototype.transform","GoogModuleDependency","goog.GoogModuleDependency","needsTranspile_","goog.GoogModuleDependency.prototype.transform","atob","goog.DebugLoader_.prototype.addDependency","goog.DependencyFactory","goog.DependencyFactory.prototype.createDependency","goog.loadClosureDeps","goog.setDependencyFactory","goog.bootstrap","TRUSTED_TYPES_POLICY_NAME","identity_","goog.identity_","createTrustedTypesPolicy","goog.createTrustedTypesPolicy","policy","policyFactory","trustedTypes","TrustedTypes","createPolicy","createURL","message"]
}
