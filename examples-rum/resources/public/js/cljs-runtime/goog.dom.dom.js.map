{
"version":3,
"file":"goog.dom.dom.js",
"lineCount":1933,
"mappings":"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",
"sources":["goog/dom/dom.js"],
"sourcesContent":["// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Utilities for manipulating the browser's Document Object Model\n * Inspiration taken *heavily* from mochikit (http://mochikit.com/).\n *\n * You can use {@link goog.dom.DomHelper} to create new dom helpers that refer\n * to a different document object.  This is useful if you are working with\n * frames or multiple windows.\n *\n * @author arv@google.com (Erik Arvidsson)\n * @suppress {strictMissingProperties}\n */\n\n\n// TODO(arv): Rename/refactor getTextContent and getRawTextContent. The problem\n// is that getTextContent should mimic the DOM3 textContent. We should add a\n// getInnerText (or getText) which tries to return the visible text, innerText.\n\n\ngoog.provide('goog.dom');\ngoog.provide('goog.dom.Appendable');\ngoog.provide('goog.dom.DomHelper');\n\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.dom.BrowserFeature');\ngoog.require('goog.dom.NodeType');\ngoog.require('goog.dom.TagName');\ngoog.require('goog.dom.safe');\ngoog.require('goog.html.SafeHtml');\ngoog.require('goog.html.uncheckedconversions');\ngoog.require('goog.math.Coordinate');\ngoog.require('goog.math.Size');\ngoog.require('goog.object');\ngoog.require('goog.string');\ngoog.require('goog.string.Unicode');\ngoog.require('goog.userAgent');\n\n\n/**\n * @define {boolean} Whether we know at compile time that the browser is in\n * quirks mode.\n */\ngoog.dom.ASSUME_QUIRKS_MODE = goog.define('goog.dom.ASSUME_QUIRKS_MODE', false);\n\n\n/**\n * @define {boolean} Whether we know at compile time that the browser is in\n * standards compliance mode.\n */\ngoog.dom.ASSUME_STANDARDS_MODE =\n    goog.define('goog.dom.ASSUME_STANDARDS_MODE', false);\n\n\n/**\n * Whether we know the compatibility mode at compile time.\n * @type {boolean}\n * @private\n */\ngoog.dom.COMPAT_MODE_KNOWN_ =\n    goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;\n\n\n/**\n * Gets the DomHelper object for the document where the element resides.\n * @param {(Node|Window)=} opt_element If present, gets the DomHelper for this\n *     element.\n * @return {!goog.dom.DomHelper} The DomHelper.\n */\ngoog.dom.getDomHelper = function(opt_element) {\n  return opt_element ?\n      new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) :\n      (goog.dom.defaultDomHelper_ ||\n       (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper()));\n};\n\n\n/**\n * Cached default DOM helper.\n * @type {!goog.dom.DomHelper|undefined}\n * @private\n */\ngoog.dom.defaultDomHelper_;\n\n\n/**\n * Gets the document object being used by the dom library.\n * @return {!Document} Document object.\n */\ngoog.dom.getDocument = function() {\n  return document;\n};\n\n\n/**\n * Gets an element from the current document by element id.\n *\n * If an Element is passed in, it is returned.\n *\n * @param {string|Element} element Element ID or a DOM node.\n * @return {Element} The element with the given ID, or the node passed in.\n */\ngoog.dom.getElement = function(element) {\n  return goog.dom.getElementHelper_(document, element);\n};\n\n\n/**\n * Gets an element by id from the given document (if present).\n * If an element is given, it is returned.\n * @param {!Document} doc\n * @param {string|Element} element Element ID or a DOM node.\n * @return {Element} The resulting element.\n * @private\n */\ngoog.dom.getElementHelper_ = function(doc, element) {\n  return typeof element === 'string' ? doc.getElementById(element) : element;\n};\n\n\n/**\n * Gets an element by id, asserting that the element is found.\n *\n * This is used when an element is expected to exist, and should fail with\n * an assertion error if it does not (if assertions are enabled).\n *\n * @param {string} id Element ID.\n * @return {!Element} The element with the given ID, if it exists.\n */\ngoog.dom.getRequiredElement = function(id) {\n  return goog.dom.getRequiredElementHelper_(document, id);\n};\n\n\n/**\n * Helper function for getRequiredElementHelper functions, both static and\n * on DomHelper.  Asserts the element with the given id exists.\n * @param {!Document} doc\n * @param {string} id\n * @return {!Element} The element with the given ID, if it exists.\n * @private\n */\ngoog.dom.getRequiredElementHelper_ = function(doc, id) {\n  // To prevent users passing in Elements as is permitted in getElement().\n  goog.asserts.assertString(id);\n  var element = goog.dom.getElementHelper_(doc, id);\n  element =\n      goog.asserts.assertElement(element, 'No element found with id: ' + id);\n  return element;\n};\n\n\n/**\n * Alias for getElement.\n * @param {string|Element} element Element ID or a DOM node.\n * @return {Element} The element with the given ID, or the node passed in.\n * @deprecated Use {@link goog.dom.getElement} instead.\n */\ngoog.dom.$ = goog.dom.getElement;\n\n\n/**\n * Gets elements by tag name.\n * @param {!goog.dom.TagName<T>} tagName\n * @param {(!Document|!Element)=} opt_parent Parent element or document where to\n *     look for elements. Defaults to document.\n * @return {!NodeList<R>} List of elements. The members of the list are\n *     {!Element} if tagName is not a member of goog.dom.TagName or more\n *     specific types if it is (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.getElementsByTagName = function(tagName, opt_parent) {\n  var parent = opt_parent || document;\n  return parent.getElementsByTagName(String(tagName));\n};\n\n\n/**\n * Looks up elements by both tag and class name, using browser native functions\n * (`querySelectorAll`, `getElementsByTagName` or\n * `getElementsByClassName`) where possible. This function\n * is a useful, if limited, way of collecting a list of DOM elements\n * with certain characteristics.  `querySelectorAll` offers a\n * more powerful and general solution which allows matching on CSS3\n * selector expressions.\n *\n * Note that tag names are case sensitive in the SVG namespace, and this\n * function converts opt_tag to uppercase for comparisons. For queries in the\n * SVG namespace you should use querySelector or querySelectorAll instead.\n * https://bugzilla.mozilla.org/show_bug.cgi?id=963870\n * https://bugs.webkit.org/show_bug.cgi?id=83438\n *\n * @see {https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll}\n *\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {!IArrayLike<R>} Array-like list of elements (only a length property\n *     and numerical indices are guaranteed to exist). The members of the array\n *     are {!Element} if opt_tag is not a member of goog.dom.TagName or more\n *     specific types if it is (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {\n  return goog.dom.getElementsByTagNameAndClass_(\n      document, opt_tag, opt_class, opt_el);\n};\n\n\n/**\n * Gets the first element matching the tag and the class.\n *\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {?R} Reference to a DOM node. The return type is {?Element} if\n *     tagName is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {?HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.getElementByTagNameAndClass = function(opt_tag, opt_class, opt_el) {\n  return goog.dom.getElementByTagNameAndClass_(\n      document, opt_tag, opt_class, opt_el);\n};\n\n\n/**\n * Returns a static, array-like list of the elements with the provided\n * className.\n *\n * @param {string} className the name of the class to look for.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {!IArrayLike<!Element>} The items found with the class name provided.\n */\ngoog.dom.getElementsByClass = function(className, opt_el) {\n  var parent = opt_el || document;\n  if (goog.dom.canUseQuerySelector_(parent)) {\n    return parent.querySelectorAll('.' + className);\n  }\n  return goog.dom.getElementsByTagNameAndClass_(\n      document, '*', className, opt_el);\n};\n\n\n/**\n * Returns the first element with the provided className.\n *\n * @param {string} className the name of the class to look for.\n * @param {Element|Document=} opt_el Optional element to look in.\n * @return {Element} The first item with the class name provided.\n */\ngoog.dom.getElementByClass = function(className, opt_el) {\n  var parent = opt_el || document;\n  var retVal = null;\n  if (parent.getElementsByClassName) {\n    retVal = parent.getElementsByClassName(className)[0];\n  } else {\n    retVal =\n        goog.dom.getElementByTagNameAndClass_(document, '*', className, opt_el);\n  }\n  return retVal || null;\n};\n\n\n/**\n * Ensures an element with the given className exists, and then returns the\n * first element with the provided className.\n *\n * @param {string} className the name of the class to look for.\n * @param {!Element|!Document=} opt_root Optional element or document to look\n *     in.\n * @return {!Element} The first item with the class name provided.\n * @throws {goog.asserts.AssertionError} Thrown if no element is found.\n */\ngoog.dom.getRequiredElementByClass = function(className, opt_root) {\n  var retValue = goog.dom.getElementByClass(className, opt_root);\n  return goog.asserts.assert(\n      retValue, 'No element found with className: ' + className);\n};\n\n\n/**\n * Prefer the standardized (http://www.w3.org/TR/selectors-api/), native and\n * fast W3C Selectors API.\n * @param {!(Element|Document)} parent The parent document object.\n * @return {boolean} whether or not we can use parent.querySelector* APIs.\n * @private\n */\ngoog.dom.canUseQuerySelector_ = function(parent) {\n  return !!(parent.querySelectorAll && parent.querySelector);\n};\n\n\n/**\n * Helper for `getElementsByTagNameAndClass`.\n * @param {!Document} doc The document to get the elements in.\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {!IArrayLike<R>} Array-like list of elements (only a length property\n *     and numerical indices are guaranteed to exist). The members of the array\n *     are {!Element} if opt_tag is not a member of goog.dom.TagName or more\n *     specific types if it is (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n * @private\n */\ngoog.dom.getElementsByTagNameAndClass_ = function(\n    doc, opt_tag, opt_class, opt_el) {\n  var parent = opt_el || doc;\n  var tagName =\n      (opt_tag && opt_tag != '*') ? String(opt_tag).toUpperCase() : '';\n\n  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {\n    var query = tagName + (opt_class ? '.' + opt_class : '');\n    return parent.querySelectorAll(query);\n  }\n\n  // Use the native getElementsByClassName if available, under the assumption\n  // that even when the tag name is specified, there will be fewer elements to\n  // filter through when going by class than by tag name\n  if (opt_class && parent.getElementsByClassName) {\n    var els = parent.getElementsByClassName(opt_class);\n\n    if (tagName) {\n      var arrayLike = {};\n      var len = 0;\n\n      // Filter for specific tags if requested.\n      for (var i = 0, el; el = els[i]; i++) {\n        if (tagName == el.nodeName) {\n          arrayLike[len++] = el;\n        }\n      }\n      arrayLike.length = len;\n\n      return /** @type {!IArrayLike<!Element>} */ (arrayLike);\n    } else {\n      return els;\n    }\n  }\n\n  var els = parent.getElementsByTagName(tagName || '*');\n\n  if (opt_class) {\n    var arrayLike = {};\n    var len = 0;\n    for (var i = 0, el; el = els[i]; i++) {\n      var className = el.className;\n      // Check if className has a split function since SVG className does not.\n      if (typeof className.split == 'function' &&\n          goog.array.contains(className.split(/\\s+/), opt_class)) {\n        arrayLike[len++] = el;\n      }\n    }\n    arrayLike.length = len;\n    return /** @type {!IArrayLike<!Element>} */ (arrayLike);\n  } else {\n    return els;\n  }\n};\n\n\n/**\n * Helper for goog.dom.getElementByTagNameAndClass.\n *\n * @param {!Document} doc The document to get the elements in.\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {?R} Reference to a DOM node. The return type is {?Element} if\n *     tagName is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {?HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n * @private\n */\ngoog.dom.getElementByTagNameAndClass_ = function(\n    doc, opt_tag, opt_class, opt_el) {\n  var parent = opt_el || doc;\n  var tag = (opt_tag && opt_tag != '*') ? String(opt_tag).toUpperCase() : '';\n  if (goog.dom.canUseQuerySelector_(parent) && (tag || opt_class)) {\n    return parent.querySelector(tag + (opt_class ? '.' + opt_class : ''));\n  }\n  var elements =\n      goog.dom.getElementsByTagNameAndClass_(doc, opt_tag, opt_class, opt_el);\n  return elements[0] || null;\n};\n\n\n\n/**\n * Alias for `getElementsByTagNameAndClass`.\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {Element=} opt_el Optional element to look in.\n * @return {!IArrayLike<R>} Array-like list of elements (only a length property\n *     and numerical indices are guaranteed to exist). The members of the array\n *     are {!Element} if opt_tag is not a member of goog.dom.TagName or more\n *     specific types if it is (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n * @deprecated Use {@link goog.dom.getElementsByTagNameAndClass} instead.\n */\ngoog.dom.$$ = goog.dom.getElementsByTagNameAndClass;\n\n\n/**\n * Sets multiple properties, and sometimes attributes, on an element. Note that\n * properties are simply object properties on the element instance, while\n * attributes are visible in the DOM. Many properties map to attributes with the\n * same names, some with different names, and there are also unmappable cases.\n *\n * This method sets properties by default (which means that custom attributes\n * are not supported). These are the exeptions (some of which is legacy):\n * - \"style\": Even though this is an attribute name, it is translated to a\n *   property, \"style.cssText\". Note that this property sanitizes and formats\n *   its value, unlike the attribute.\n * - \"class\": This is an attribute name, it is translated to the \"className\"\n *   property.\n * - \"for\": This is an attribute name, it is translated to the \"htmlFor\"\n *   property.\n * - Entries in {@see goog.dom.DIRECT_ATTRIBUTE_MAP_} are set as attributes,\n *   this is probably due to browser quirks.\n * - \"aria-*\", \"data-*\": Always set as attributes, they have no property\n *   counterparts.\n *\n * @param {Element} element DOM node to set properties on.\n * @param {Object} properties Hash of property:value pairs.\n *     Property values can be strings or goog.string.TypedString values (such as\n *     goog.html.SafeUrl).\n */\ngoog.dom.setProperties = function(element, properties) {\n  goog.object.forEach(properties, function(val, key) {\n    if (val && typeof val == 'object' && val.implementsGoogStringTypedString) {\n      val = val.getTypedStringValue();\n    }\n    if (key == 'style') {\n      element.style.cssText = val;\n    } else if (key == 'class') {\n      element.className = val;\n    } else if (key == 'for') {\n      element.htmlFor = val;\n    } else if (goog.dom.DIRECT_ATTRIBUTE_MAP_.hasOwnProperty(key)) {\n      element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);\n    } else if (\n        goog.string.startsWith(key, 'aria-') ||\n        goog.string.startsWith(key, 'data-')) {\n      element.setAttribute(key, val);\n    } else {\n      element[key] = val;\n    }\n  });\n};\n\n\n/**\n * Map of attributes that should be set using\n * element.setAttribute(key, val) instead of element[key] = val.  Used\n * by goog.dom.setProperties.\n *\n * @private {!Object<string, string>}\n * @const\n */\ngoog.dom.DIRECT_ATTRIBUTE_MAP_ = {\n  'cellpadding': 'cellPadding',\n  'cellspacing': 'cellSpacing',\n  'colspan': 'colSpan',\n  'frameborder': 'frameBorder',\n  'height': 'height',\n  'maxlength': 'maxLength',\n  'nonce': 'nonce',\n  'role': 'role',\n  'rowspan': 'rowSpan',\n  'type': 'type',\n  'usemap': 'useMap',\n  'valign': 'vAlign',\n  'width': 'width'\n};\n\n\n/**\n * Gets the dimensions of the viewport.\n *\n * Gecko Standards mode:\n * docEl.clientWidth  Width of viewport excluding scrollbar.\n * win.innerWidth     Width of viewport including scrollbar.\n * body.clientWidth   Width of body element.\n *\n * docEl.clientHeight Height of viewport excluding scrollbar.\n * win.innerHeight    Height of viewport including scrollbar.\n * body.clientHeight  Height of document.\n *\n * Gecko Backwards compatible mode:\n * docEl.clientWidth  Width of viewport excluding scrollbar.\n * win.innerWidth     Width of viewport including scrollbar.\n * body.clientWidth   Width of viewport excluding scrollbar.\n *\n * docEl.clientHeight Height of document.\n * win.innerHeight    Height of viewport including scrollbar.\n * body.clientHeight  Height of viewport excluding scrollbar.\n *\n * IE6/7 Standards mode:\n * docEl.clientWidth  Width of viewport excluding scrollbar.\n * win.innerWidth     Undefined.\n * body.clientWidth   Width of body element.\n *\n * docEl.clientHeight Height of viewport excluding scrollbar.\n * win.innerHeight    Undefined.\n * body.clientHeight  Height of document element.\n *\n * IE5 + IE6/7 Backwards compatible mode:\n * docEl.clientWidth  0.\n * win.innerWidth     Undefined.\n * body.clientWidth   Width of viewport excluding scrollbar.\n *\n * docEl.clientHeight 0.\n * win.innerHeight    Undefined.\n * body.clientHeight  Height of viewport excluding scrollbar.\n *\n * Opera 9 Standards and backwards compatible mode:\n * docEl.clientWidth  Width of viewport excluding scrollbar.\n * win.innerWidth     Width of viewport including scrollbar.\n * body.clientWidth   Width of viewport excluding scrollbar.\n *\n * docEl.clientHeight Height of document.\n * win.innerHeight    Height of viewport including scrollbar.\n * body.clientHeight  Height of viewport excluding scrollbar.\n *\n * WebKit:\n * Safari 2\n * docEl.clientHeight Same as scrollHeight.\n * docEl.clientWidth  Same as innerWidth.\n * win.innerWidth     Width of viewport excluding scrollbar.\n * win.innerHeight    Height of the viewport including scrollbar.\n * frame.innerHeight  Height of the viewport exluding scrollbar.\n *\n * Safari 3 (tested in 522)\n *\n * docEl.clientWidth  Width of viewport excluding scrollbar.\n * docEl.clientHeight Height of viewport excluding scrollbar in strict mode.\n * body.clientHeight  Height of viewport excluding scrollbar in quirks mode.\n *\n * @param {Window=} opt_window Optional window element to test.\n * @return {!goog.math.Size} Object with values 'width' and 'height'.\n */\ngoog.dom.getViewportSize = function(opt_window) {\n  // TODO(arv): This should not take an argument\n  return goog.dom.getViewportSize_(opt_window || window);\n};\n\n\n/**\n * Helper for `getViewportSize`.\n * @param {Window} win The window to get the view port size for.\n * @return {!goog.math.Size} Object with values 'width' and 'height'.\n * @private\n */\ngoog.dom.getViewportSize_ = function(win) {\n  var doc = win.document;\n  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;\n  return new goog.math.Size(el.clientWidth, el.clientHeight);\n};\n\n\n/**\n * Calculates the height of the document.\n *\n * @return {number} The height of the current document.\n */\ngoog.dom.getDocumentHeight = function() {\n  return goog.dom.getDocumentHeight_(window);\n};\n\n/**\n * Calculates the height of the document of the given window.\n *\n * @param {!Window} win The window whose document height to retrieve.\n * @return {number} The height of the document of the given window.\n */\ngoog.dom.getDocumentHeightForWindow = function(win) {\n  return goog.dom.getDocumentHeight_(win);\n};\n\n/**\n * Calculates the height of the document of the given window.\n *\n * Function code copied from the opensocial gadget api:\n *   gadgets.window.adjustHeight(opt_height)\n *\n * @private\n * @param {!Window} win The window whose document height to retrieve.\n * @return {number} The height of the document of the given window.\n */\ngoog.dom.getDocumentHeight_ = function(win) {\n  // NOTE(eae): This method will return the window size rather than the document\n  // size in webkit quirks mode.\n  var doc = win.document;\n  var height = 0;\n\n  if (doc) {\n    // Calculating inner content height is hard and different between\n    // browsers rendering in Strict vs. Quirks mode.  We use a combination of\n    // three properties within document.body and document.documentElement:\n    // - scrollHeight\n    // - offsetHeight\n    // - clientHeight\n    // These values differ significantly between browsers and rendering modes.\n    // But there are patterns.  It just takes a lot of time and persistence\n    // to figure out.\n\n    var body = doc.body;\n    var docEl = /** @type {!HTMLElement} */ (doc.documentElement);\n    if (!(docEl && body)) {\n      return 0;\n    }\n\n    // Get the height of the viewport\n    var vh = goog.dom.getViewportSize_(win).height;\n    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {\n      // In Strict mode:\n      // The inner content height is contained in either:\n      //    document.documentElement.scrollHeight\n      //    document.documentElement.offsetHeight\n      // Based on studying the values output by different browsers,\n      // use the value that's NOT equal to the viewport height found above.\n      height =\n          docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;\n    } else {\n      // In Quirks mode:\n      // documentElement.clientHeight is equal to documentElement.offsetHeight\n      // except in IE.  In most browsers, document.documentElement can be used\n      // to calculate the inner content height.\n      // However, in other browsers (e.g. IE), document.body must be used\n      // instead.  How do we know which one to use?\n      // If document.documentElement.clientHeight does NOT equal\n      // document.documentElement.offsetHeight, then use document.body.\n      var sh = docEl.scrollHeight;\n      var oh = docEl.offsetHeight;\n      if (docEl.clientHeight != oh) {\n        sh = body.scrollHeight;\n        oh = body.offsetHeight;\n      }\n\n      // Detect whether the inner content height is bigger or smaller\n      // than the bounding box (viewport).  If bigger, take the larger\n      // value.  If smaller, take the smaller value.\n      if (sh > vh) {\n        // Content is larger\n        height = sh > oh ? sh : oh;\n      } else {\n        // Content is smaller\n        height = sh < oh ? sh : oh;\n      }\n    }\n  }\n\n  return height;\n};\n\n\n/**\n * Gets the page scroll distance as a coordinate object.\n *\n * @param {Window=} opt_window Optional window element to test.\n * @return {!goog.math.Coordinate} Object with values 'x' and 'y'.\n * @deprecated Use {@link goog.dom.getDocumentScroll} instead.\n */\ngoog.dom.getPageScroll = function(opt_window) {\n  var win = opt_window || goog.global || window;\n  return goog.dom.getDomHelper(win.document).getDocumentScroll();\n};\n\n\n/**\n * Gets the document scroll distance as a coordinate object.\n *\n * @return {!goog.math.Coordinate} Object with values 'x' and 'y'.\n */\ngoog.dom.getDocumentScroll = function() {\n  return goog.dom.getDocumentScroll_(document);\n};\n\n\n/**\n * Helper for `getDocumentScroll`.\n *\n * @param {!Document} doc The document to get the scroll for.\n * @return {!goog.math.Coordinate} Object with values 'x' and 'y'.\n * @private\n */\ngoog.dom.getDocumentScroll_ = function(doc) {\n  var el = goog.dom.getDocumentScrollElement_(doc);\n  var win = goog.dom.getWindow_(doc);\n  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher('10') &&\n      win.pageYOffset != el.scrollTop) {\n    // The keyboard on IE10 touch devices shifts the page using the pageYOffset\n    // without modifying scrollTop. For this case, we want the body scroll\n    // offsets.\n    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);\n  }\n  return new goog.math.Coordinate(\n      win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);\n};\n\n\n/**\n * Gets the document scroll element.\n * @return {!Element} Scrolling element.\n */\ngoog.dom.getDocumentScrollElement = function() {\n  return goog.dom.getDocumentScrollElement_(document);\n};\n\n\n/**\n * Helper for `getDocumentScrollElement`.\n * @param {!Document} doc The document to get the scroll element for.\n * @return {!Element} Scrolling element.\n * @private\n */\ngoog.dom.getDocumentScrollElement_ = function(doc) {\n  // Old WebKit needs body.scrollLeft in both quirks mode and strict mode. We\n  // also default to the documentElement if the document does not have a body\n  // (e.g. a SVG document).\n  // Uses http://dev.w3.org/csswg/cssom-view/#dom-document-scrollingelement to\n  // avoid trying to guess about browser behavior from the UA string.\n  if (doc.scrollingElement) {\n    return doc.scrollingElement;\n  }\n  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {\n    return doc.documentElement;\n  }\n  return doc.body || doc.documentElement;\n};\n\n\n/**\n * Gets the window object associated with the given document.\n *\n * @param {Document=} opt_doc  Document object to get window for.\n * @return {!Window} The window associated with the given document.\n */\ngoog.dom.getWindow = function(opt_doc) {\n  // TODO(arv): This should not take an argument.\n  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;\n};\n\n\n/**\n * Helper for `getWindow`.\n *\n * @param {!Document} doc  Document object to get window for.\n * @return {!Window} The window associated with the given document.\n * @private\n */\ngoog.dom.getWindow_ = function(doc) {\n  return /** @type {!Window} */ (doc.parentWindow || doc.defaultView);\n};\n\n\n/**\n * Returns a dom node with a set of attributes.  This function accepts varargs\n * for subsequent nodes to be added.  Subsequent nodes will be added to the\n * first node as childNodes.\n *\n * So:\n * <code>createDom(goog.dom.TagName.DIV, null, createDom(goog.dom.TagName.P),\n * createDom(goog.dom.TagName.P));</code> would return a div with two child\n * paragraphs\n *\n * This function uses {@link goog.dom.setProperties} to set attributes: the\n * `opt_attributes` parameter follows the same rules.\n *\n * @param {string|!goog.dom.TagName<T>} tagName Tag to create.\n * @param {?Object|?Array<string>|string=} opt_attributes If object, then a map\n *     of name-value pairs for attributes. If a string, then this is the\n *     className of the new element. If an array, the elements will be joined\n *     together as the className of the new element.\n * @param {...(Object|string|Array|NodeList|null|undefined)} var_args Further\n *     DOM nodes or strings for text nodes. If one of the var_args is an array\n *     or NodeList, its elements will be added as childNodes instead.\n * @return {R} Reference to a DOM node. The return type is {!Element} if tagName\n *     is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.createDom = function(tagName, opt_attributes, var_args) {\n  return goog.dom.createDom_(document, arguments);\n};\n\n\n/**\n * Helper for `createDom`.\n * @param {!Document} doc The document to create the DOM in.\n * @param {!Arguments} args Argument object passed from the callers. See\n *     `goog.dom.createDom` for details.\n * @return {!Element} Reference to a DOM node.\n * @private\n */\ngoog.dom.createDom_ = function(doc, args) {\n  var tagName = String(args[0]);\n  var attributes = args[1];\n\n  // Internet Explorer is dumb:\n  // name: https://msdn.microsoft.com/en-us/library/ms534184(v=vs.85).aspx\n  // type: https://msdn.microsoft.com/en-us/library/ms534700(v=vs.85).aspx\n  // Also does not allow setting of 'type' attribute on 'input' or 'button'.\n  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes &&\n      (attributes.name || attributes.type)) {\n    var tagNameArr = ['<', tagName];\n    if (attributes.name) {\n      tagNameArr.push(' name=\"', goog.string.htmlEscape(attributes.name), '\"');\n    }\n    if (attributes.type) {\n      tagNameArr.push(' type=\"', goog.string.htmlEscape(attributes.type), '\"');\n\n      // Clone attributes map to remove 'type' without mutating the input.\n      var clone = {};\n      goog.object.extend(clone, attributes);\n\n      // JSCompiler can't see how goog.object.extend added this property,\n      // because it was essentially added by reflection.\n      // So it needs to be quoted.\n      delete clone['type'];\n\n      attributes = clone;\n    }\n    tagNameArr.push('>');\n    tagName = tagNameArr.join('');\n  }\n\n  var element = goog.dom.createElement_(doc, tagName);\n\n  if (attributes) {\n    if (typeof attributes === 'string') {\n      element.className = attributes;\n    } else if (goog.isArray(attributes)) {\n      element.className = attributes.join(' ');\n    } else {\n      goog.dom.setProperties(element, attributes);\n    }\n  }\n\n  if (args.length > 2) {\n    goog.dom.append_(doc, element, args, 2);\n  }\n\n  return element;\n};\n\n\n/**\n * Appends a node with text or other nodes.\n * @param {!Document} doc The document to create new nodes in.\n * @param {!Node} parent The node to append nodes to.\n * @param {!Arguments} args The values to add. See `goog.dom.append`.\n * @param {number} startIndex The index of the array to start from.\n * @private\n */\ngoog.dom.append_ = function(doc, parent, args, startIndex) {\n  function childHandler(child) {\n    // TODO(user): More coercion, ala MochiKit?\n    if (child) {\n      parent.appendChild(\n          typeof child === 'string' ? doc.createTextNode(child) : child);\n    }\n  }\n\n  for (var i = startIndex; i < args.length; i++) {\n    var arg = args[i];\n    // TODO(attila): Fix isArrayLike to return false for a text node.\n    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {\n      // If the argument is a node list, not a real array, use a clone,\n      // because forEach can't be used to mutate a NodeList.\n      goog.array.forEach(\n          goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg,\n          childHandler);\n    } else {\n      childHandler(arg);\n    }\n  }\n};\n\n\n/**\n * Alias for `createDom`.\n * @param {string|!goog.dom.TagName<T>} tagName Tag to create.\n * @param {?Object|?Array<string>|string=} opt_attributes If object, then a map\n *     of name-value pairs for attributes. If a string, then this is the\n *     className of the new element. If an array, the elements will be joined\n *     together as the className of the new element.\n * @param {...(Object|string|Array|NodeList|null|undefined)} var_args Further\n *     DOM nodes or strings for text nodes. If one of the var_args is an array,\n *     its children will be added as childNodes instead.\n * @return {R} Reference to a DOM node. The return type is {!Element} if tagName\n *     is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n * @deprecated Use {@link goog.dom.createDom} instead.\n */\ngoog.dom.$dom = goog.dom.createDom;\n\n\n/**\n * Creates a new element.\n * @param {string|!goog.dom.TagName<T>} name Tag to create.\n * @return {R} The new element. The return type is {!Element} if name is\n *     a string or a more specific type if it is a member of goog.dom.TagName\n *     (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.createElement = function(name) {\n  return goog.dom.createElement_(document, name);\n};\n\n\n/**\n * Creates a new element.\n * @param {!Document} doc The document to create the element in.\n * @param {string|!goog.dom.TagName<T>} name Tag to create.\n * @return {R} The new element. The return type is {!Element} if name is\n *     a string or a more specific type if it is a member of goog.dom.TagName\n *     (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n * @private\n */\ngoog.dom.createElement_ = function(doc, name) {\n  name = String(name);\n  if (doc.contentType === 'application/xhtml+xml') name = name.toLowerCase();\n  return doc.createElement(name);\n};\n\n\n/**\n * Creates a new text node.\n * @param {number|string} content Content.\n * @return {!Text} The new text node.\n */\ngoog.dom.createTextNode = function(content) {\n  return document.createTextNode(String(content));\n};\n\n\n/**\n * Create a table.\n * @param {number} rows The number of rows in the table.  Must be >= 1.\n * @param {number} columns The number of columns in the table.  Must be >= 1.\n * @param {boolean=} opt_fillWithNbsp If true, fills table entries with\n *     `goog.string.Unicode.NBSP` characters.\n * @return {!Element} The created table.\n */\ngoog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {\n  // TODO(mlourenco): Return HTMLTableElement, also in prototype function.\n  // Callers need to be updated to e.g. not assign numbers to table.cellSpacing.\n  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);\n};\n\n\n/**\n * Create a table.\n * @param {!Document} doc Document object to use to create the table.\n * @param {number} rows The number of rows in the table.  Must be >= 1.\n * @param {number} columns The number of columns in the table.  Must be >= 1.\n * @param {boolean} fillWithNbsp If true, fills table entries with\n *     `goog.string.Unicode.NBSP` characters.\n * @return {!HTMLTableElement} The created table.\n * @private\n */\ngoog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {\n  var table = goog.dom.createElement_(doc, goog.dom.TagName.TABLE);\n  var tbody =\n      table.appendChild(goog.dom.createElement_(doc, goog.dom.TagName.TBODY));\n  for (var i = 0; i < rows; i++) {\n    var tr = goog.dom.createElement_(doc, goog.dom.TagName.TR);\n    for (var j = 0; j < columns; j++) {\n      var td = goog.dom.createElement_(doc, goog.dom.TagName.TD);\n      // IE <= 9 will create a text node if we set text content to the empty\n      // string, so we avoid doing it unless necessary. This ensures that the\n      // same DOM tree is returned on all browsers.\n      if (fillWithNbsp) {\n        goog.dom.setTextContent(td, goog.string.Unicode.NBSP);\n      }\n      tr.appendChild(td);\n    }\n    tbody.appendChild(tr);\n  }\n  return table;\n};\n\n\n\n/**\n * Creates a new Node from constant strings of HTML markup.\n * @param {...!goog.string.Const} var_args The HTML strings to concatenate then\n *     convert into a node.\n * @return {!Node}\n */\ngoog.dom.constHtmlToNode = function(var_args) {\n  var stringArray = goog.array.map(arguments, goog.string.Const.unwrap);\n  var safeHtml =\n      goog.html.uncheckedconversions\n          .safeHtmlFromStringKnownToSatisfyTypeContract(\n              goog.string.Const.from(\n                  'Constant HTML string, that gets turned into a ' +\n                  'Node later, so it will be automatically balanced.'),\n              stringArray.join(''));\n  return goog.dom.safeHtmlToNode(safeHtml);\n};\n\n\n/**\n * Converts HTML markup into a node. This is a safe version of\n * `goog.dom.htmlToDocumentFragment` which is now deleted.\n * @param {!goog.html.SafeHtml} html The HTML markup to convert.\n * @return {!Node} The resulting node.\n */\ngoog.dom.safeHtmlToNode = function(html) {\n  return goog.dom.safeHtmlToNode_(document, html);\n};\n\n\n/**\n * Helper for `safeHtmlToNode`.\n * @param {!Document} doc The document.\n * @param {!goog.html.SafeHtml} html The HTML markup to convert.\n * @return {!Node} The resulting node.\n * @private\n */\ngoog.dom.safeHtmlToNode_ = function(doc, html) {\n  var tempDiv = goog.dom.createElement_(doc, goog.dom.TagName.DIV);\n  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {\n    goog.dom.safe.setInnerHtml(\n        tempDiv, goog.html.SafeHtml.concat(goog.html.SafeHtml.BR, html));\n    tempDiv.removeChild(goog.asserts.assert(tempDiv.firstChild));\n  } else {\n    goog.dom.safe.setInnerHtml(tempDiv, html);\n  }\n  return goog.dom.childrenToNode_(doc, tempDiv);\n};\n\n\n/**\n * Helper for `safeHtmlToNode_`.\n * @param {!Document} doc The document.\n * @param {!Node} tempDiv The input node.\n * @return {!Node} The resulting node.\n * @private\n */\ngoog.dom.childrenToNode_ = function(doc, tempDiv) {\n  if (tempDiv.childNodes.length == 1) {\n    return tempDiv.removeChild(goog.asserts.assert(tempDiv.firstChild));\n  } else {\n    var fragment = doc.createDocumentFragment();\n    while (tempDiv.firstChild) {\n      fragment.appendChild(tempDiv.firstChild);\n    }\n    return fragment;\n  }\n};\n\n\n/**\n * Returns true if the browser is in \"CSS1-compatible\" (standards-compliant)\n * mode, false otherwise.\n * @return {boolean} True if in CSS1-compatible mode.\n */\ngoog.dom.isCss1CompatMode = function() {\n  return goog.dom.isCss1CompatMode_(document);\n};\n\n\n/**\n * Returns true if the browser is in \"CSS1-compatible\" (standards-compliant)\n * mode, false otherwise.\n * @param {!Document} doc The document to check.\n * @return {boolean} True if in CSS1-compatible mode.\n * @private\n */\ngoog.dom.isCss1CompatMode_ = function(doc) {\n  if (goog.dom.COMPAT_MODE_KNOWN_) {\n    return goog.dom.ASSUME_STANDARDS_MODE;\n  }\n\n  return doc.compatMode == 'CSS1Compat';\n};\n\n\n/**\n * Determines if the given node can contain children, intended to be used for\n * HTML generation.\n *\n * IE natively supports node.canHaveChildren but has inconsistent behavior.\n * Prior to IE8 the base tag allows children and in IE9 all nodes return true\n * for canHaveChildren.\n *\n * In practice all non-IE browsers allow you to add children to any node, but\n * the behavior is inconsistent:\n *\n * <pre>\n *   var a = goog.dom.createElement(goog.dom.TagName.BR);\n *   a.appendChild(document.createTextNode('foo'));\n *   a.appendChild(document.createTextNode('bar'));\n *   console.log(a.childNodes.length);  // 2\n *   console.log(a.innerHTML);  // Chrome: \"\", IE9: \"foobar\", FF3.5: \"foobar\"\n * </pre>\n *\n * For more information, see:\n * http://dev.w3.org/html5/markup/syntax.html#syntax-elements\n *\n * TODO(user): Rename shouldAllowChildren() ?\n *\n * @param {Node} node The node to check.\n * @return {boolean} Whether the node can contain children.\n */\ngoog.dom.canHaveChildren = function(node) {\n  if (node.nodeType != goog.dom.NodeType.ELEMENT) {\n    return false;\n  }\n  switch (/** @type {!Element} */ (node).tagName) {\n    case String(goog.dom.TagName.APPLET):\n    case String(goog.dom.TagName.AREA):\n    case String(goog.dom.TagName.BASE):\n    case String(goog.dom.TagName.BR):\n    case String(goog.dom.TagName.COL):\n    case String(goog.dom.TagName.COMMAND):\n    case String(goog.dom.TagName.EMBED):\n    case String(goog.dom.TagName.FRAME):\n    case String(goog.dom.TagName.HR):\n    case String(goog.dom.TagName.IMG):\n    case String(goog.dom.TagName.INPUT):\n    case String(goog.dom.TagName.IFRAME):\n    case String(goog.dom.TagName.ISINDEX):\n    case String(goog.dom.TagName.KEYGEN):\n    case String(goog.dom.TagName.LINK):\n    case String(goog.dom.TagName.NOFRAMES):\n    case String(goog.dom.TagName.NOSCRIPT):\n    case String(goog.dom.TagName.META):\n    case String(goog.dom.TagName.OBJECT):\n    case String(goog.dom.TagName.PARAM):\n    case String(goog.dom.TagName.SCRIPT):\n    case String(goog.dom.TagName.SOURCE):\n    case String(goog.dom.TagName.STYLE):\n    case String(goog.dom.TagName.TRACK):\n    case String(goog.dom.TagName.WBR):\n      return false;\n  }\n  return true;\n};\n\n\n/**\n * Appends a child to a node.\n * @param {Node} parent Parent.\n * @param {Node} child Child.\n */\ngoog.dom.appendChild = function(parent, child) {\n  goog.asserts.assert(\n      parent != null && child != null,\n      'goog.dom.appendChild expects non-null arguments');\n  parent.appendChild(child);\n};\n\n\n/**\n * Appends a node with text or other nodes.\n * @param {!Node} parent The node to append nodes to.\n * @param {...goog.dom.Appendable} var_args The things to append to the node.\n *     If this is a Node it is appended as is.\n *     If this is a string then a text node is appended.\n *     If this is an array like object then fields 0 to length - 1 are appended.\n */\ngoog.dom.append = function(parent, var_args) {\n  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);\n};\n\n\n/**\n * Removes all the child nodes on a DOM node.\n * @param {Node} node Node to remove children from.\n */\ngoog.dom.removeChildren = function(node) {\n  // Note: Iterations over live collections can be slow, this is the fastest\n  // we could find. The double parenthesis are used to prevent JsCompiler and\n  // strict warnings.\n  var child;\n  while ((child = node.firstChild)) {\n    node.removeChild(child);\n  }\n};\n\n\n/**\n * Inserts a new node before an existing reference node (i.e. as the previous\n * sibling). If the reference node has no parent, then does nothing.\n * @param {Node} newNode Node to insert.\n * @param {Node} refNode Reference node to insert before.\n */\ngoog.dom.insertSiblingBefore = function(newNode, refNode) {\n  goog.asserts.assert(\n      newNode != null && refNode != null,\n      'goog.dom.insertSiblingBefore expects non-null arguments');\n  if (refNode.parentNode) {\n    refNode.parentNode.insertBefore(newNode, refNode);\n  }\n};\n\n\n/**\n * Inserts a new node after an existing reference node (i.e. as the next\n * sibling). If the reference node has no parent, then does nothing.\n * @param {Node} newNode Node to insert.\n * @param {Node} refNode Reference node to insert after.\n */\ngoog.dom.insertSiblingAfter = function(newNode, refNode) {\n  goog.asserts.assert(\n      newNode != null && refNode != null,\n      'goog.dom.insertSiblingAfter expects non-null arguments');\n  if (refNode.parentNode) {\n    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);\n  }\n};\n\n\n/**\n * Insert a child at a given index. If index is larger than the number of child\n * nodes that the parent currently has, the node is inserted as the last child\n * node.\n * @param {Element} parent The element into which to insert the child.\n * @param {Node} child The element to insert.\n * @param {number} index The index at which to insert the new child node. Must\n *     not be negative.\n */\ngoog.dom.insertChildAt = function(parent, child, index) {\n  // Note that if the second argument is null, insertBefore\n  // will append the child at the end of the list of children.\n  goog.asserts.assert(\n      parent != null, 'goog.dom.insertChildAt expects a non-null parent');\n  parent.insertBefore(child, parent.childNodes[index] || null);\n};\n\n\n/**\n * Removes a node from its parent.\n * @param {Node} node The node to remove.\n * @return {Node} The node removed if removed; else, null.\n */\ngoog.dom.removeNode = function(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n};\n\n\n/**\n * Replaces a node in the DOM tree. Will do nothing if `oldNode` has no\n * parent.\n * @param {Node} newNode Node to insert.\n * @param {Node} oldNode Node to replace.\n */\ngoog.dom.replaceNode = function(newNode, oldNode) {\n  goog.asserts.assert(\n      newNode != null && oldNode != null,\n      'goog.dom.replaceNode expects non-null arguments');\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n};\n\n\n/**\n * Flattens an element. That is, removes it and replace it with its children.\n * Does nothing if the element is not in the document.\n * @param {Element} element The element to flatten.\n * @return {Element|undefined} The original element, detached from the document\n *     tree, sans children; or undefined, if the element was not in the document\n *     to begin with.\n */\ngoog.dom.flattenElement = function(element) {\n  var child, parent = element.parentNode;\n  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {\n    // Use IE DOM method (supported by Opera too) if available\n    if (element.removeNode) {\n      return /** @type {Element} */ (element.removeNode(false));\n    } else {\n      // Move all children of the original node up one level.\n      while ((child = element.firstChild)) {\n        parent.insertBefore(child, element);\n      }\n\n      // Detach the original element.\n      return /** @type {Element} */ (goog.dom.removeNode(element));\n    }\n  }\n};\n\n\n/**\n * Returns an array containing just the element children of the given element.\n * @param {Element} element The element whose element children we want.\n * @return {!(Array<!Element>|NodeList<!Element>)} An array or array-like list\n *     of just the element children of the given element.\n */\ngoog.dom.getChildren = function(element) {\n  // We check if the children attribute is supported for child elements\n  // since IE8 misuses the attribute by also including comments.\n  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE &&\n      element.children != undefined) {\n    return element.children;\n  }\n  // Fall back to manually filtering the element's child nodes.\n  return goog.array.filter(element.childNodes, function(node) {\n    return node.nodeType == goog.dom.NodeType.ELEMENT;\n  });\n};\n\n\n/**\n * Returns the first child node that is an element.\n * @param {Node} node The node to get the first child element of.\n * @return {Element} The first child node of `node` that is an element.\n */\ngoog.dom.getFirstElementChild = function(node) {\n  if (node.firstElementChild !== undefined) {\n    return /** @type {!Element} */ (node).firstElementChild;\n  }\n  return goog.dom.getNextElementNode_(node.firstChild, true);\n};\n\n\n/**\n * Returns the last child node that is an element.\n * @param {Node} node The node to get the last child element of.\n * @return {Element} The last child node of `node` that is an element.\n */\ngoog.dom.getLastElementChild = function(node) {\n  if (node.lastElementChild !== undefined) {\n    return /** @type {!Element} */ (node).lastElementChild;\n  }\n  return goog.dom.getNextElementNode_(node.lastChild, false);\n};\n\n\n/**\n * Returns the first next sibling that is an element.\n * @param {Node} node The node to get the next sibling element of.\n * @return {Element} The next sibling of `node` that is an element.\n */\ngoog.dom.getNextElementSibling = function(node) {\n  if (node.nextElementSibling !== undefined) {\n    return /** @type {!Element} */ (node).nextElementSibling;\n  }\n  return goog.dom.getNextElementNode_(node.nextSibling, true);\n};\n\n\n/**\n * Returns the first previous sibling that is an element.\n * @param {Node} node The node to get the previous sibling element of.\n * @return {Element} The first previous sibling of `node` that is\n *     an element.\n */\ngoog.dom.getPreviousElementSibling = function(node) {\n  if (node.previousElementSibling !== undefined) {\n    return /** @type {!Element} */ (node).previousElementSibling;\n  }\n  return goog.dom.getNextElementNode_(node.previousSibling, false);\n};\n\n\n/**\n * Returns the first node that is an element in the specified direction,\n * starting with `node`.\n * @param {Node} node The node to get the next element from.\n * @param {boolean} forward Whether to look forwards or backwards.\n * @return {Element} The first element.\n * @private\n */\ngoog.dom.getNextElementNode_ = function(node, forward) {\n  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {\n    node = forward ? node.nextSibling : node.previousSibling;\n  }\n\n  return /** @type {Element} */ (node);\n};\n\n\n/**\n * Returns the next node in source order from the given node.\n * @param {Node} node The node.\n * @return {Node} The next node in the DOM tree, or null if this was the last\n *     node.\n */\ngoog.dom.getNextNode = function(node) {\n  if (!node) {\n    return null;\n  }\n\n  if (node.firstChild) {\n    return node.firstChild;\n  }\n\n  while (node && !node.nextSibling) {\n    node = node.parentNode;\n  }\n\n  return node ? node.nextSibling : null;\n};\n\n\n/**\n * Returns the previous node in source order from the given node.\n * @param {Node} node The node.\n * @return {Node} The previous node in the DOM tree, or null if this was the\n *     first node.\n */\ngoog.dom.getPreviousNode = function(node) {\n  if (!node) {\n    return null;\n  }\n\n  if (!node.previousSibling) {\n    return node.parentNode;\n  }\n\n  node = node.previousSibling;\n  while (node && node.lastChild) {\n    node = node.lastChild;\n  }\n\n  return node;\n};\n\n\n/**\n * Whether the object looks like a DOM node.\n * @param {?} obj The object being tested for node likeness.\n * @return {boolean} Whether the object looks like a DOM node.\n */\ngoog.dom.isNodeLike = function(obj) {\n  return goog.isObject(obj) && obj.nodeType > 0;\n};\n\n\n/**\n * Whether the object looks like an Element.\n * @param {?} obj The object being tested for Element likeness.\n * @return {boolean} Whether the object looks like an Element.\n */\ngoog.dom.isElement = function(obj) {\n  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;\n};\n\n\n/**\n * Returns true if the specified value is a Window object. This includes the\n * global window for HTML pages, and iframe windows.\n * @param {?} obj Variable to test.\n * @return {boolean} Whether the variable is a window.\n */\ngoog.dom.isWindow = function(obj) {\n  return goog.isObject(obj) && obj['window'] == obj;\n};\n\n\n/**\n * Returns an element's parent, if it's an Element.\n * @param {Element} element The DOM element.\n * @return {Element} The parent, or null if not an Element.\n */\ngoog.dom.getParentElement = function(element) {\n  var parent;\n  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {\n    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher('9') &&\n        !goog.userAgent.isVersionOrHigher('10');\n    // SVG elements in IE9 can't use the parentElement property.\n    // goog.global['SVGElement'] is not defined in IE9 quirks mode.\n    if (!(isIe9 && goog.global['SVGElement'] &&\n          element instanceof goog.global['SVGElement'])) {\n      parent = element.parentElement;\n      if (parent) {\n        return parent;\n      }\n    }\n  }\n  parent = element.parentNode;\n  return goog.dom.isElement(parent) ? /** @type {!Element} */ (parent) : null;\n};\n\n\n/**\n * Whether a node contains another node.\n * @param {?Node|undefined} parent The node that should contain the other node.\n * @param {?Node|undefined} descendant The node to test presence of.\n * @return {boolean} Whether the parent node contains the descendant node.\n */\ngoog.dom.contains = function(parent, descendant) {\n  if (!parent || !descendant) {\n    return false;\n  }\n  // We use browser specific methods for this if available since it is faster\n  // that way.\n\n  // IE DOM\n  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {\n    return parent == descendant || parent.contains(descendant);\n  }\n\n  // W3C DOM Level 3\n  if (typeof parent.compareDocumentPosition != 'undefined') {\n    return parent == descendant ||\n        Boolean(parent.compareDocumentPosition(descendant) & 16);\n  }\n\n  // W3C DOM Level 1\n  while (descendant && parent != descendant) {\n    descendant = descendant.parentNode;\n  }\n  return descendant == parent;\n};\n\n\n/**\n * Compares the document order of two nodes, returning 0 if they are the same\n * node, a negative number if node1 is before node2, and a positive number if\n * node2 is before node1.  Note that we compare the order the tags appear in the\n * document so in the tree <b><i>text</i></b> the B node is considered to be\n * before the I node.\n *\n * @param {Node} node1 The first node to compare.\n * @param {Node} node2 The second node to compare.\n * @return {number} 0 if the nodes are the same node, a negative number if node1\n *     is before node2, and a positive number if node2 is before node1.\n */\ngoog.dom.compareNodeOrder = function(node1, node2) {\n  // Fall out quickly for equality.\n  if (node1 == node2) {\n    return 0;\n  }\n\n  // Use compareDocumentPosition where available\n  if (node1.compareDocumentPosition) {\n    // 4 is the bitmask for FOLLOWS.\n    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;\n  }\n\n  // Special case for document nodes on IE 7 and 8.\n  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {\n    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {\n      return -1;\n    }\n    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {\n      return 1;\n    }\n  }\n\n  // Process in IE using sourceIndex - we check to see if the first node has\n  // a source index or if its parent has one.\n  if ('sourceIndex' in node1 ||\n      (node1.parentNode && 'sourceIndex' in node1.parentNode)) {\n    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;\n    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;\n\n    if (isElement1 && isElement2) {\n      return node1.sourceIndex - node2.sourceIndex;\n    } else {\n      var parent1 = node1.parentNode;\n      var parent2 = node2.parentNode;\n\n      if (parent1 == parent2) {\n        return goog.dom.compareSiblingOrder_(node1, node2);\n      }\n\n      if (!isElement1 && goog.dom.contains(parent1, node2)) {\n        return -1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);\n      }\n\n\n      if (!isElement2 && goog.dom.contains(parent2, node1)) {\n        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);\n      }\n\n      return (isElement1 ? node1.sourceIndex : parent1.sourceIndex) -\n          (isElement2 ? node2.sourceIndex : parent2.sourceIndex);\n    }\n  }\n\n  // For Safari, we compare ranges.\n  var doc = goog.dom.getOwnerDocument(node1);\n\n  var range1, range2;\n  range1 = doc.createRange();\n  range1.selectNode(node1);\n  range1.collapse(true);\n\n  range2 = doc.createRange();\n  range2.selectNode(node2);\n  range2.collapse(true);\n\n  return range1.compareBoundaryPoints(\n      goog.global['Range'].START_TO_END, range2);\n};\n\n\n/**\n * Utility function to compare the position of two nodes, when\n * `textNode`'s parent is an ancestor of `node`.  If this entry\n * condition is not met, this function will attempt to reference a null object.\n * @param {!Node} textNode The textNode to compare.\n * @param {Node} node The node to compare.\n * @return {number} -1 if node is before textNode, +1 otherwise.\n * @private\n */\ngoog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {\n  var parent = textNode.parentNode;\n  if (parent == node) {\n    // If textNode is a child of node, then node comes first.\n    return -1;\n  }\n  var sibling = node;\n  while (sibling.parentNode != parent) {\n    sibling = sibling.parentNode;\n  }\n  return goog.dom.compareSiblingOrder_(sibling, textNode);\n};\n\n\n/**\n * Utility function to compare the position of two nodes known to be non-equal\n * siblings.\n * @param {Node} node1 The first node to compare.\n * @param {!Node} node2 The second node to compare.\n * @return {number} -1 if node1 is before node2, +1 otherwise.\n * @private\n */\ngoog.dom.compareSiblingOrder_ = function(node1, node2) {\n  var s = node2;\n  while ((s = s.previousSibling)) {\n    if (s == node1) {\n      // We just found node1 before node2.\n      return -1;\n    }\n  }\n\n  // Since we didn't find it, node1 must be after node2.\n  return 1;\n};\n\n\n/**\n * Find the deepest common ancestor of the given nodes.\n * @param {...Node} var_args The nodes to find a common ancestor of.\n * @return {Node} The common ancestor of the nodes, or null if there is none.\n *     null will only be returned if two or more of the nodes are from different\n *     documents.\n */\ngoog.dom.findCommonAncestor = function(var_args) {\n  var i, count = arguments.length;\n  if (!count) {\n    return null;\n  } else if (count == 1) {\n    return arguments[0];\n  }\n\n  var paths = [];\n  var minLength = Infinity;\n  for (i = 0; i < count; i++) {\n    // Compute the list of ancestors.\n    var ancestors = [];\n    var node = arguments[i];\n    while (node) {\n      ancestors.unshift(node);\n      node = node.parentNode;\n    }\n\n    // Save the list for comparison.\n    paths.push(ancestors);\n    minLength = Math.min(minLength, ancestors.length);\n  }\n  var output = null;\n  for (i = 0; i < minLength; i++) {\n    var first = paths[0][i];\n    for (var j = 1; j < count; j++) {\n      if (first != paths[j][i]) {\n        return output;\n      }\n    }\n    output = first;\n  }\n  return output;\n};\n\n\n/**\n * Returns whether node is in a document or detached. Throws an error if node\n * itself is a document. This specifically handles two cases beyond naive use of\n * builtins: (1) it works correctly in IE, and (2) it works for elements from\n * different documents/iframes. If neither of these considerations are relevant\n * then a simple `document.contains(node)` may be used instead.\n * @param {!Node} node\n * @return {boolean}\n */\ngoog.dom.isInDocument = function(node) {\n  return (node.ownerDocument.compareDocumentPosition(node) & 16) == 16;\n};\n\n\n/**\n * Returns the owner document for a node.\n * @param {Node|Window} node The node to get the document for.\n * @return {!Document} The document owning the node.\n */\ngoog.dom.getOwnerDocument = function(node) {\n  // TODO(nnaze): Update param signature to be non-nullable.\n  goog.asserts.assert(node, 'Node cannot be null or undefined.');\n  return /** @type {!Document} */ (\n      node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument ||\n              node.document);\n};\n\n\n/**\n * Cross-browser function for getting the document element of a frame or iframe.\n * @param {Element} frame Frame element.\n * @return {!Document} The frame content document.\n */\ngoog.dom.getFrameContentDocument = function(frame) {\n  return frame.contentDocument ||\n      /** @type {!HTMLFrameElement} */ (frame).contentWindow.document;\n};\n\n\n/**\n * Cross-browser function for getting the window of a frame or iframe.\n * @param {Element} frame Frame element.\n * @return {Window} The window associated with the given frame, or null if none\n *     exists.\n */\ngoog.dom.getFrameContentWindow = function(frame) {\n  try {\n    return frame.contentWindow ||\n        (frame.contentDocument ? goog.dom.getWindow(frame.contentDocument) :\n                                 null);\n  } catch (e) {\n    // NOTE(user): In IE8, checking the contentWindow or contentDocument\n    // properties will throw a \"Unspecified Error\" exception if the iframe is\n    // not inserted in the DOM. If we get this we can be sure that no window\n    // exists, so return null.\n  }\n  return null;\n};\n\n\n/**\n * Sets the text content of a node, with cross-browser support.\n * @param {Node} node The node to change the text content of.\n * @param {string|number} text The value that should replace the node's content.\n */\ngoog.dom.setTextContent = function(node, text) {\n  goog.asserts.assert(\n      node != null,\n      'goog.dom.setTextContent expects a non-null value for node');\n\n  if ('textContent' in node) {\n    node.textContent = text;\n  } else if (node.nodeType == goog.dom.NodeType.TEXT) {\n    /** @type {!Text} */ (node).data = String(text);\n  } else if (\n      node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {\n    // If the first child is a text node we just change its data and remove the\n    // rest of the children.\n    while (node.lastChild != node.firstChild) {\n      node.removeChild(goog.asserts.assert(node.lastChild));\n    }\n    /** @type {!Text} */ (node.firstChild).data = String(text);\n  } else {\n    goog.dom.removeChildren(node);\n    var doc = goog.dom.getOwnerDocument(node);\n    node.appendChild(doc.createTextNode(String(text)));\n  }\n};\n\n\n/**\n * Gets the outerHTML of a node, which is like innerHTML, except that it\n * actually contains the HTML of the node itself.\n * @param {Element} element The element to get the HTML of.\n * @return {string} The outerHTML of the given element.\n */\ngoog.dom.getOuterHtml = function(element) {\n  goog.asserts.assert(\n      element !== null,\n      'goog.dom.getOuterHtml expects a non-null value for element');\n  // IE, Opera and WebKit all have outerHTML.\n  if ('outerHTML' in element) {\n    return element.outerHTML;\n  } else {\n    var doc = goog.dom.getOwnerDocument(element);\n    var div = goog.dom.createElement_(doc, goog.dom.TagName.DIV);\n    div.appendChild(element.cloneNode(true));\n    return div.innerHTML;\n  }\n};\n\n\n/**\n * Finds the first descendant node that matches the filter function, using depth\n * first search. This function offers the most general purpose way of finding a\n * matching element.\n *\n * Prefer using `querySelector` if the matching criteria can be expressed as a\n * CSS selector, or `goog.dom.findElement` if you would filter for `nodeType ==\n * Node.ELEMENT_NODE`.\n *\n * @param {Node} root The root of the tree to search.\n * @param {function(Node) : boolean} p The filter function.\n * @return {Node|undefined} The found node or undefined if none is found.\n */\ngoog.dom.findNode = function(root, p) {\n  var rv = [];\n  var found = goog.dom.findNodes_(root, p, rv, true);\n  return found ? rv[0] : undefined;\n};\n\n\n/**\n * Finds all the descendant nodes that match the filter function, using depth\n * first search. This function offers the most general-purpose way\n * of finding a set of matching elements.\n *\n * Prefer using `querySelectorAll` if the matching criteria can be expressed as\n * a CSS selector, or `goog.dom.findElements` if you would filter for\n * `nodeType == Node.ELEMENT_NODE`.\n *\n * @param {Node} root The root of the tree to search.\n * @param {function(Node) : boolean} p The filter function.\n * @return {!Array<!Node>} The found nodes or an empty array if none are found.\n */\ngoog.dom.findNodes = function(root, p) {\n  var rv = [];\n  goog.dom.findNodes_(root, p, rv, false);\n  return rv;\n};\n\n\n/**\n * Finds the first or all the descendant nodes that match the filter function,\n * using a depth first search.\n * @param {Node} root The root of the tree to search.\n * @param {function(Node) : boolean} p The filter function.\n * @param {!Array<!Node>} rv The found nodes are added to this array.\n * @param {boolean} findOne If true we exit after the first found node.\n * @return {boolean} Whether the search is complete or not. True in case findOne\n *     is true and the node is found. False otherwise.\n * @private\n */\ngoog.dom.findNodes_ = function(root, p, rv, findOne) {\n  if (root != null) {\n    var child = root.firstChild;\n    while (child) {\n      if (p(child)) {\n        rv.push(child);\n        if (findOne) {\n          return true;\n        }\n      }\n      if (goog.dom.findNodes_(child, p, rv, findOne)) {\n        return true;\n      }\n      child = child.nextSibling;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Finds the first descendant element (excluding `root`) that matches the filter\n * function, using depth first search. Prefer using `querySelector` if the\n * matching criteria can be expressed as a CSS selector.\n *\n * @param {!Element | !Document} root\n * @param {function(!Element): boolean} pred Filter function.\n * @return {?Element} First matching element or null if there is none.\n */\ngoog.dom.findElement = function(root, pred) {\n  var stack = goog.dom.getChildrenReverse_(root);\n  while (stack.length > 0) {\n    var next = stack.pop();\n    if (pred(next)) return next;\n    for (var c = next.lastElementChild; c; c = c.previousElementSibling) {\n      stack.push(c);\n    }\n  }\n  return null;\n};\n\n\n/**\n * Finds all the descendant elements (excluding `root`) that match the filter\n * function, using depth first search. Prefer using `querySelectorAll` if the\n * matching criteria can be expressed as a CSS selector.\n *\n * @param {!Element | !Document} root\n * @param {function(!Element): boolean} pred Filter function.\n * @return {!Array<!Element>}\n */\ngoog.dom.findElements = function(root, pred) {\n  var result = [], stack = goog.dom.getChildrenReverse_(root);\n  while (stack.length > 0) {\n    var next = stack.pop();\n    if (pred(next)) result.push(next);\n    for (var c = next.lastElementChild; c; c = c.previousElementSibling) {\n      stack.push(c);\n    }\n  }\n  return result;\n};\n\n\n/**\n * @param {!Element | !Document} node\n * @return {!Array<!Element>} node's child elements in reverse order.\n * @private\n */\ngoog.dom.getChildrenReverse_ = function(node) {\n  // document.lastElementChild doesn't exist in IE9; fall back to\n  // documentElement.\n  if (node.nodeType == goog.dom.NodeType.DOCUMENT) {\n    return [node.documentElement];\n  } else {\n    var children = [];\n    for (var c = node.lastElementChild; c; c = c.previousElementSibling) {\n      children.push(c);\n    }\n    return children;\n  }\n};\n\n\n/**\n * Map of tags whose content to ignore when calculating text length.\n * @private {!Object<string, number>}\n * @const\n */\ngoog.dom.TAGS_TO_IGNORE_ = {\n  'SCRIPT': 1,\n  'STYLE': 1,\n  'HEAD': 1,\n  'IFRAME': 1,\n  'OBJECT': 1\n};\n\n\n/**\n * Map of tags which have predefined values with regard to whitespace.\n * @private {!Object<string, string>}\n * @const\n */\ngoog.dom.PREDEFINED_TAG_VALUES_ = {\n  'IMG': ' ',\n  'BR': '\\n'\n};\n\n\n/**\n * Returns true if the element has a tab index that allows it to receive\n * keyboard focus (tabIndex >= 0), false otherwise.  Note that some elements\n * natively support keyboard focus, even if they have no tab index.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element has a tab index that allows keyboard\n *     focus.\n */\ngoog.dom.isFocusableTabIndex = function(element) {\n  return goog.dom.hasSpecifiedTabIndex_(element) &&\n      goog.dom.isTabIndexFocusable_(element);\n};\n\n\n/**\n * Enables or disables keyboard focus support on the element via its tab index.\n * Only elements for which {@link goog.dom.isFocusableTabIndex} returns true\n * (or elements that natively support keyboard focus, like form elements) can\n * receive keyboard focus.  See http://go/tabindex for more info.\n * @param {Element} element Element whose tab index is to be changed.\n * @param {boolean} enable Whether to set or remove a tab index on the element\n *     that supports keyboard focus.\n */\ngoog.dom.setFocusableTabIndex = function(element, enable) {\n  if (enable) {\n    element.tabIndex = 0;\n  } else {\n    // Set tabIndex to -1 first, then remove it. This is a workaround for\n    // Safari (confirmed in version 4 on Windows). When removing the attribute\n    // without setting it to -1 first, the element remains keyboard focusable\n    // despite not having a tabIndex attribute anymore.\n    element.tabIndex = -1;\n    element.removeAttribute('tabIndex');  // Must be camelCase!\n  }\n};\n\n\n/**\n * Returns true if the element can be focused, i.e. it has a tab index that\n * allows it to receive keyboard focus (tabIndex >= 0), or it is an element\n * that natively supports keyboard focus.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element allows keyboard focus.\n */\ngoog.dom.isFocusable = function(element) {\n  var focusable;\n  // Some elements can have unspecified tab index and still receive focus.\n  if (goog.dom.nativelySupportsFocus_(element)) {\n    // Make sure the element is not disabled ...\n    focusable = !element.disabled &&\n        // ... and if a tab index is specified, it allows focus.\n        (!goog.dom.hasSpecifiedTabIndex_(element) ||\n         goog.dom.isTabIndexFocusable_(element));\n  } else {\n    focusable = goog.dom.isFocusableTabIndex(element);\n  }\n\n  // IE requires elements to be visible in order to focus them.\n  return focusable && goog.userAgent.IE ?\n      goog.dom.hasNonZeroBoundingRect_(/** @type {!HTMLElement} */ (element)) :\n      focusable;\n};\n\n\n/**\n * Returns true if the element has a specified tab index.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element has a specified tab index.\n * @private\n */\ngoog.dom.hasSpecifiedTabIndex_ = function(element) {\n  // IE8 and below don't support hasAttribute(), instead check whether the\n  // 'tabindex' attributeNode is specified. Otherwise check hasAttribute().\n  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher('9')) {\n    var attrNode = element.getAttributeNode('tabindex');  // Must be lowercase!\n    return attrNode != null && attrNode.specified;\n  } else {\n    return element.hasAttribute('tabindex');\n  }\n};\n\n\n/**\n * Returns true if the element's tab index allows the element to be focused.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element's tab index allows focus.\n * @private\n */\ngoog.dom.isTabIndexFocusable_ = function(element) {\n  var index = /** @type {!HTMLElement} */ (element).tabIndex;\n  // NOTE: IE9 puts tabIndex in 16-bit int, e.g. -2 is 65534.\n  return typeof (index) === 'number' && index >= 0 && index < 32768;\n};\n\n\n/**\n * Returns true if the element is focusable even when tabIndex is not set.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element natively supports focus.\n * @private\n */\ngoog.dom.nativelySupportsFocus_ = function(element) {\n  return (\n      element.tagName == goog.dom.TagName.A && element.hasAttribute('href') ||\n      element.tagName == goog.dom.TagName.INPUT ||\n      element.tagName == goog.dom.TagName.TEXTAREA ||\n      element.tagName == goog.dom.TagName.SELECT ||\n      element.tagName == goog.dom.TagName.BUTTON);\n};\n\n\n/**\n * Returns true if the element has a bounding rectangle that would be visible\n * (i.e. its width and height are greater than zero).\n * @param {!HTMLElement} element Element to check.\n * @return {boolean} Whether the element has a non-zero bounding rectangle.\n * @private\n */\ngoog.dom.hasNonZeroBoundingRect_ = function(element) {\n  var rect;\n  if (!goog.isFunction(element['getBoundingClientRect']) ||\n      // In IE, getBoundingClientRect throws on detached nodes.\n      (goog.userAgent.IE && element.parentElement == null)) {\n    rect = {'height': element.offsetHeight, 'width': element.offsetWidth};\n  } else {\n    rect = element.getBoundingClientRect();\n  }\n  return rect != null && rect.height > 0 && rect.width > 0;\n};\n\n\n/**\n * Returns the text content of the current node, without markup and invisible\n * symbols. New lines are stripped and whitespace is collapsed,\n * such that each character would be visible.\n *\n * In browsers that support it, innerText is used.  Other browsers attempt to\n * simulate it via node traversal.  Line breaks are canonicalized in IE.\n *\n * @param {Node} node The node from which we are getting content.\n * @return {string} The text content.\n */\ngoog.dom.getTextContent = function(node) {\n  var textContent;\n  // Note(arv): IE9, Opera, and Safari 3 support innerText but they include\n  // text nodes in script tags. So we revert to use a user agent test here.\n  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && node !== null &&\n      ('innerText' in node)) {\n    textContent = goog.string.canonicalizeNewlines(node.innerText);\n    // Unfortunately .innerText() returns text with &shy; symbols\n    // We need to filter it out and then remove duplicate whitespaces\n  } else {\n    var buf = [];\n    goog.dom.getTextContent_(node, buf, true);\n    textContent = buf.join('');\n  }\n\n  // Strip &shy; entities. goog.format.insertWordBreaks inserts them in Opera.\n  textContent = textContent.replace(/ \\xAD /g, ' ').replace(/\\xAD/g, '');\n  // Strip &#8203; entities. goog.format.insertWordBreaks inserts them in IE8.\n  textContent = textContent.replace(/\\u200B/g, '');\n\n  // Skip this replacement on old browsers with working innerText, which\n  // automatically turns &nbsp; into ' ' and / +/ into ' ' when reading\n  // innerText.\n  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {\n    textContent = textContent.replace(/ +/g, ' ');\n  }\n  if (textContent != ' ') {\n    textContent = textContent.replace(/^\\s*/, '');\n  }\n\n  return textContent;\n};\n\n\n/**\n * Returns the text content of the current node, without markup.\n *\n * Unlike `getTextContent` this method does not collapse whitespaces\n * or normalize lines breaks.\n *\n * @param {Node} node The node from which we are getting content.\n * @return {string} The raw text content.\n */\ngoog.dom.getRawTextContent = function(node) {\n  var buf = [];\n  goog.dom.getTextContent_(node, buf, false);\n\n  return buf.join('');\n};\n\n\n/**\n * Recursive support function for text content retrieval.\n *\n * @param {Node} node The node from which we are getting content.\n * @param {Array<string>} buf string buffer.\n * @param {boolean} normalizeWhitespace Whether to normalize whitespace.\n * @private\n */\ngoog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {\n  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {\n    // ignore certain tags\n  } else if (node.nodeType == goog.dom.NodeType.TEXT) {\n    if (normalizeWhitespace) {\n      buf.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      buf.push(node.nodeValue);\n    }\n  } else if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {\n    buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);\n  } else {\n    var child = node.firstChild;\n    while (child) {\n      goog.dom.getTextContent_(child, buf, normalizeWhitespace);\n      child = child.nextSibling;\n    }\n  }\n};\n\n\n/**\n * Returns the text length of the text contained in a node, without markup. This\n * is equivalent to the selection length if the node was selected, or the number\n * of cursor movements to traverse the node. Images & BRs take one space.  New\n * lines are ignored.\n *\n * @param {Node} node The node whose text content length is being calculated.\n * @return {number} The length of `node`'s text content.\n */\ngoog.dom.getNodeTextLength = function(node) {\n  return goog.dom.getTextContent(node).length;\n};\n\n\n/**\n * Returns the text offset of a node relative to one of its ancestors. The text\n * length is the same as the length calculated by goog.dom.getNodeTextLength.\n *\n * @param {Node} node The node whose offset is being calculated.\n * @param {Node=} opt_offsetParent The node relative to which the offset will\n *     be calculated. Defaults to the node's owner document's body.\n * @return {number} The text offset.\n */\ngoog.dom.getNodeTextOffset = function(node, opt_offsetParent) {\n  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;\n  var buf = [];\n  while (node && node != root) {\n    var cur = node;\n    while ((cur = cur.previousSibling)) {\n      buf.unshift(goog.dom.getTextContent(cur));\n    }\n    node = node.parentNode;\n  }\n  // Trim left to deal with FF cases when there might be line breaks and empty\n  // nodes at the front of the text\n  return goog.string.trimLeft(buf.join('')).replace(/ +/g, ' ').length;\n};\n\n\n/**\n * Returns the node at a given offset in a parent node.  If an object is\n * provided for the optional third parameter, the node and the remainder of the\n * offset will stored as properties of this object.\n * @param {Node} parent The parent node.\n * @param {number} offset The offset into the parent node.\n * @param {Object=} opt_result Object to be used to store the return value. The\n *     return value will be stored in the form {node: Node, remainder: number}\n *     if this object is provided.\n * @return {Node} The node at the given offset.\n */\ngoog.dom.getNodeAtOffset = function(parent, offset, opt_result) {\n  var stack = [parent], pos = 0, cur = null;\n  while (stack.length > 0 && pos < offset) {\n    cur = stack.pop();\n    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {\n      // ignore certain tags\n    } else if (cur.nodeType == goog.dom.NodeType.TEXT) {\n      var text = cur.nodeValue.replace(/(\\r\\n|\\r|\\n)/g, '').replace(/ +/g, ' ');\n      pos += text.length;\n    } else if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {\n      pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;\n    } else {\n      for (var i = cur.childNodes.length - 1; i >= 0; i--) {\n        stack.push(cur.childNodes[i]);\n      }\n    }\n  }\n  if (goog.isObject(opt_result)) {\n    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;\n    opt_result.node = cur;\n  }\n\n  return cur;\n};\n\n\n/**\n * Returns true if the object is a `NodeList`.  To qualify as a NodeList,\n * the object must have a numeric length property and an item function (which\n * has type 'string' on IE for some reason).\n * @param {Object} val Object to test.\n * @return {boolean} Whether the object is a NodeList.\n */\ngoog.dom.isNodeList = function(val) {\n  // TODO(attila): Now the isNodeList is part of goog.dom we can use\n  // goog.userAgent to make this simpler.\n  // A NodeList must have a length property of type 'number' on all platforms.\n  if (val && typeof val.length == 'number') {\n    // A NodeList is an object everywhere except Safari, where it's a function.\n    if (goog.isObject(val)) {\n      // A NodeList must have an item function (on non-IE platforms) or an item\n      // property of type 'string' (on IE).\n      return typeof val.item == 'function' || typeof val.item == 'string';\n    } else if (goog.isFunction(val)) {\n      // On Safari, a NodeList is a function with an item property that is also\n      // a function.\n      return typeof /** @type {?} */ (val.item) == 'function';\n    }\n  }\n\n  // Not a NodeList.\n  return false;\n};\n\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that has the passed\n * tag name and/or class name. If the passed element matches the specified\n * criteria, the element itself is returned.\n * @param {Node} element The DOM node to start with.\n * @param {?(goog.dom.TagName<T>|string)=} opt_tag The tag name to match (or\n *     null/undefined to match only based on class name).\n * @param {?string=} opt_class The class name to match (or null/undefined to\n *     match only based on tag name).\n * @param {number=} opt_maxSearchSteps Maximum number of levels to search up the\n *     dom.\n * @return {?R} The first ancestor that matches the passed criteria, or\n *     null if no match is found. The return type is {?Element} if opt_tag is\n *     not a member of goog.dom.TagName or a more specific type if it is (e.g.\n *     {?HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.getAncestorByTagNameAndClass = function(\n    element, opt_tag, opt_class, opt_maxSearchSteps) {\n  if (!opt_tag && !opt_class) {\n    return null;\n  }\n  var tagName = opt_tag ? String(opt_tag).toUpperCase() : null;\n  return /** @type {Element} */ (goog.dom.getAncestor(element, function(node) {\n    return (!tagName || node.nodeName == tagName) &&\n        (!opt_class ||\n         typeof node.className === 'string' &&\n             goog.array.contains(node.className.split(/\\s+/), opt_class));\n  }, true, opt_maxSearchSteps));\n};\n\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that has the passed\n * class name. If the passed element matches the specified criteria, the\n * element itself is returned.\n * @param {Node} element The DOM node to start with.\n * @param {string} className The class name to match.\n * @param {number=} opt_maxSearchSteps Maximum number of levels to search up the\n *     dom.\n * @return {Element} The first ancestor that matches the passed criteria, or\n *     null if none match.\n */\ngoog.dom.getAncestorByClass = function(element, className, opt_maxSearchSteps) {\n  return goog.dom.getAncestorByTagNameAndClass(\n      element, null, className, opt_maxSearchSteps);\n};\n\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that passes the\n * matcher function.\n * @param {Node} element The DOM node to start with.\n * @param {function(Node) : boolean} matcher A function that returns true if the\n *     passed node matches the desired criteria.\n * @param {boolean=} opt_includeNode If true, the node itself is included in\n *     the search (the first call to the matcher will pass startElement as\n *     the node to test).\n * @param {number=} opt_maxSearchSteps Maximum number of levels to search up the\n *     dom.\n * @return {Node} DOM node that matched the matcher, or null if there was\n *     no match.\n */\ngoog.dom.getAncestor = function(\n    element, matcher, opt_includeNode, opt_maxSearchSteps) {\n  if (element && !opt_includeNode) {\n    element = element.parentNode;\n  }\n  var steps = 0;\n  while (element &&\n         (opt_maxSearchSteps == null || steps <= opt_maxSearchSteps)) {\n    goog.asserts.assert(element.name != 'parentNode');\n    if (matcher(element)) {\n      return element;\n    }\n    element = element.parentNode;\n    steps++;\n  }\n  // Reached the root of the DOM without a match\n  return null;\n};\n\n\n/**\n * Determines the active element in the given document.\n * @param {Document} doc The document to look in.\n * @return {Element} The active element.\n */\ngoog.dom.getActiveElement = function(doc) {\n  // While in an iframe, IE9 will throw \"Unspecified error\" when accessing\n  // activeElement.\n  try {\n    var activeElement = doc && doc.activeElement;\n    // While not in an iframe, IE9-11 sometimes gives null.\n    // While in an iframe, IE11 sometimes returns an empty object.\n    return activeElement && activeElement.nodeName ? activeElement : null;\n  } catch (e) {\n    return null;\n  }\n};\n\n\n/**\n * Gives the current devicePixelRatio.\n *\n * By default, this is the value of window.devicePixelRatio (which should be\n * preferred if present).\n *\n * If window.devicePixelRatio is not present, the ratio is calculated with\n * window.matchMedia, if present. Otherwise, gives 1.0.\n *\n * Some browsers (including Chrome) consider the browser zoom level in the pixel\n * ratio, so the value may change across multiple calls.\n *\n * @return {number} The number of actual pixels per virtual pixel.\n */\ngoog.dom.getPixelRatio = function() {\n  var win = goog.dom.getWindow();\n  if (win.devicePixelRatio !== undefined) {\n    return win.devicePixelRatio;\n  } else if (win.matchMedia) {\n    // Should be for IE10 and FF6-17 (this basically clamps to lower)\n    // Note that the order of these statements is important\n    return goog.dom.matchesPixelRatio_(3) || goog.dom.matchesPixelRatio_(2) ||\n           goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(1) ||\n           .75;\n  }\n  return 1;\n};\n\n\n/**\n * Calculates a mediaQuery to check if the current device supports the\n * given actual to virtual pixel ratio.\n * @param {number} pixelRatio The ratio of actual pixels to virtual pixels.\n * @return {number} pixelRatio if applicable, otherwise 0.\n * @private\n */\ngoog.dom.matchesPixelRatio_ = function(pixelRatio) {\n  var win = goog.dom.getWindow();\n  /**\n   * Due to the 1:96 fixed ratio of CSS in to CSS px, 1dppx is equivalent to\n   * 96dpi.\n   * @const {number}\n   */\n  var dpiPerDppx = 96;\n  var query =\n      // FF16-17\n      '(min-resolution: ' + pixelRatio + 'dppx),' +\n      // FF6-15\n      '(min--moz-device-pixel-ratio: ' + pixelRatio + '),' +\n      // IE10 (this works for the two browsers above too but I don't want to\n      // trust the 1:96 fixed ratio magic)\n      '(min-resolution: ' + (pixelRatio * dpiPerDppx) + 'dpi)';\n  return win.matchMedia(query).matches ? pixelRatio : 0;\n};\n\n\n/**\n * Gets '2d' context of a canvas. Shortcut for canvas.getContext('2d') with a\n * type information.\n * @param {!HTMLCanvasElement|!OffscreenCanvas} canvas\n * @return {!CanvasRenderingContext2D}\n */\ngoog.dom.getCanvasContext2D = function(canvas) {\n  return /** @type {!CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n};\n\n\n\n/**\n * Create an instance of a DOM helper with a new document object.\n * @param {Document=} opt_document Document object to associate with this\n *     DOM helper.\n * @constructor\n */\ngoog.dom.DomHelper = function(opt_document) {\n  /**\n   * Reference to the document object to use\n   * @type {!Document}\n   * @private\n   */\n  this.document_ = opt_document || goog.global.document || document;\n};\n\n\n/**\n * Gets the dom helper object for the document where the element resides.\n * @param {Node=} opt_node If present, gets the DomHelper for this node.\n * @return {!goog.dom.DomHelper} The DomHelper.\n */\ngoog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;\n\n\n/**\n * Sets the document object.\n * @param {!Document} document Document object.\n */\ngoog.dom.DomHelper.prototype.setDocument = function(document) {\n  this.document_ = document;\n};\n\n\n/**\n * Gets the document object being used by the dom library.\n * @return {!Document} Document object.\n */\ngoog.dom.DomHelper.prototype.getDocument = function() {\n  return this.document_;\n};\n\n\n/**\n * Alias for `getElementById`. If a DOM node is passed in then we just\n * return that.\n * @param {string|Element} element Element ID or a DOM node.\n * @return {Element} The element with the given ID, or the node passed in.\n */\ngoog.dom.DomHelper.prototype.getElement = function(element) {\n  return goog.dom.getElementHelper_(this.document_, element);\n};\n\n\n/**\n * Gets an element by id, asserting that the element is found.\n *\n * This is used when an element is expected to exist, and should fail with\n * an assertion error if it does not (if assertions are enabled).\n *\n * @param {string} id Element ID.\n * @return {!Element} The element with the given ID, if it exists.\n */\ngoog.dom.DomHelper.prototype.getRequiredElement = function(id) {\n  return goog.dom.getRequiredElementHelper_(this.document_, id);\n};\n\n\n/**\n * Alias for `getElement`.\n * @param {string|Element} element Element ID or a DOM node.\n * @return {Element} The element with the given ID, or the node passed in.\n * @deprecated Use {@link goog.dom.DomHelper.prototype.getElement} instead.\n */\ngoog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;\n\n\n/**\n * Gets elements by tag name.\n * @param {!goog.dom.TagName<T>} tagName\n * @param {(!Document|!Element)=} opt_parent Parent element or document where to\n *     look for elements. Defaults to document of this DomHelper.\n * @return {!NodeList<R>} List of elements. The members of the list are\n *     {!Element} if tagName is not a member of goog.dom.TagName or more\n *     specific types if it is (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.getElementsByTagName =\n    function(tagName, opt_parent) {\n  var parent = opt_parent || this.document_;\n  return parent.getElementsByTagName(String(tagName));\n};\n\n\n/**\n * Looks up elements by both tag and class name, using browser native functions\n * (`querySelectorAll`, `getElementsByTagName` or\n * `getElementsByClassName`) where possible. The returned array is a live\n * NodeList or a static list depending on the code path taken.\n *\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name or * for all\n *     tags.\n * @param {?string=} opt_class Optional class name.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {!IArrayLike<R>} Array-like list of elements (only a length property\n *     and numerical indices are guaranteed to exist). The members of the array\n *     are {!Element} if opt_tag is not a member of goog.dom.TagName or more\n *     specific types if it is (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(\n    opt_tag, opt_class, opt_el) {\n  return goog.dom.getElementsByTagNameAndClass_(\n      this.document_, opt_tag, opt_class, opt_el);\n};\n\n\n/**\n * Gets the first element matching the tag and the class.\n *\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {(Document|Element)=} opt_el Optional element to look in.\n * @return {?R} Reference to a DOM node. The return type is {?Element} if\n *     tagName is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {?HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.getElementByTagNameAndClass = function(\n    opt_tag, opt_class, opt_el) {\n  return goog.dom.getElementByTagNameAndClass_(\n      this.document_, opt_tag, opt_class, opt_el);\n};\n\n\n/**\n * Returns an array of all the elements with the provided className.\n * @param {string} className the name of the class to look for.\n * @param {Element|Document=} opt_el Optional element to look in.\n * @return {!IArrayLike<!Element>} The items found with the class name provided.\n */\ngoog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {\n  var doc = opt_el || this.document_;\n  return goog.dom.getElementsByClass(className, doc);\n};\n\n\n/**\n * Returns the first element we find matching the provided class name.\n * @param {string} className the name of the class to look for.\n * @param {(Element|Document)=} opt_el Optional element to look in.\n * @return {Element} The first item found with the class name provided.\n */\ngoog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {\n  var doc = opt_el || this.document_;\n  return goog.dom.getElementByClass(className, doc);\n};\n\n\n/**\n * Ensures an element with the given className exists, and then returns the\n * first element with the provided className.\n * @param {string} className the name of the class to look for.\n * @param {(!Element|!Document)=} opt_root Optional element or document to look\n *     in.\n * @return {!Element} The first item found with the class name provided.\n * @throws {goog.asserts.AssertionError} Thrown if no element is found.\n */\ngoog.dom.DomHelper.prototype.getRequiredElementByClass = function(\n    className, opt_root) {\n  var root = opt_root || this.document_;\n  return goog.dom.getRequiredElementByClass(className, root);\n};\n\n\n/**\n * Alias for `getElementsByTagNameAndClass`.\n * @deprecated Use DomHelper getElementsByTagNameAndClass.\n *\n * @param {(string|?goog.dom.TagName<T>)=} opt_tag Element tag name.\n * @param {?string=} opt_class Optional class name.\n * @param {Element=} opt_el Optional element to look in.\n * @return {!IArrayLike<R>} Array-like list of elements (only a length property\n *     and numerical indices are guaranteed to exist). The members of the array\n *     are {!Element} if opt_tag is a string or more specific types if it is\n *     a member of goog.dom.TagName (e.g. {!HTMLAnchorElement} for\n *     goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.$$ =\n    goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;\n\n\n/**\n * Sets a number of properties on a node.\n * @param {Element} element DOM node to set properties on.\n * @param {Object} properties Hash of property:value pairs.\n */\ngoog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;\n\n\n/**\n * Gets the dimensions of the viewport.\n * @param {Window=} opt_window Optional window element to test. Defaults to\n *     the window of the Dom Helper.\n * @return {!goog.math.Size} Object with values 'width' and 'height'.\n */\ngoog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {\n  // TODO(arv): This should not take an argument. That breaks the rule of a\n  // a DomHelper representing a single frame/window/document.\n  return goog.dom.getViewportSize(opt_window || this.getWindow());\n};\n\n\n/**\n * Calculates the height of the document.\n *\n * @return {number} The height of the document.\n */\ngoog.dom.DomHelper.prototype.getDocumentHeight = function() {\n  return goog.dom.getDocumentHeight_(this.getWindow());\n};\n\n\n/**\n * Typedef for use with goog.dom.createDom and goog.dom.append.\n * @typedef {Object|string|Array|NodeList}\n */\ngoog.dom.Appendable;\n\n\n/**\n * Returns a dom node with a set of attributes.  This function accepts varargs\n * for subsequent nodes to be added.  Subsequent nodes will be added to the\n * first node as childNodes.\n *\n * So:\n * <code>createDom(goog.dom.TagName.DIV, null, createDom(goog.dom.TagName.P),\n * createDom(goog.dom.TagName.P));</code> would return a div with two child\n * paragraphs\n *\n * An easy way to move all child nodes of an existing element to a new parent\n * element is:\n * <code>createDom(goog.dom.TagName.DIV, null, oldElement.childNodes);</code>\n * which will remove all child nodes from the old element and add them as\n * child nodes of the new DIV.\n *\n * @param {string|!goog.dom.TagName<T>} tagName Tag to create.\n * @param {?Object|?Array<string>|string=} opt_attributes If object, then a map\n *     of name-value pairs for attributes. If a string, then this is the\n *     className of the new element. If an array, the elements will be joined\n *     together as the className of the new element.\n * @param {...(goog.dom.Appendable|undefined)} var_args Further DOM nodes or\n *     strings for text nodes. If one of the var_args is an array or\n *     NodeList, its elements will be added as childNodes instead.\n * @return {R} Reference to a DOM node. The return type is {!Element} if tagName\n *     is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.createDom = function(\n    tagName, opt_attributes, var_args) {\n  return goog.dom.createDom_(this.document_, arguments);\n};\n\n\n/**\n * Alias for `createDom`.\n * @param {string|!goog.dom.TagName<T>} tagName Tag to create.\n * @param {?Object|?Array<string>|string=} opt_attributes If object, then a map\n *     of name-value pairs for attributes. If a string, then this is the\n *     className of the new element. If an array, the elements will be joined\n *     together as the className of the new element.\n * @param {...(goog.dom.Appendable|undefined)} var_args Further DOM nodes or\n *     strings for text nodes.  If one of the var_args is an array, its children\n *     will be added as childNodes instead.\n * @return {R} Reference to a DOM node. The return type is {!Element} if tagName\n *     is a string or a more specific type if it is a member of\n *     goog.dom.TagName (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n * @deprecated Use {@link goog.dom.DomHelper.prototype.createDom} instead.\n */\ngoog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;\n\n\n/**\n * Creates a new element.\n * @param {string|!goog.dom.TagName<T>} name Tag to create.\n * @return {R} The new element. The return type is {!Element} if name is\n *     a string or a more specific type if it is a member of goog.dom.TagName\n *     (e.g. {!HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.createElement = function(name) {\n  return goog.dom.createElement_(this.document_, name);\n};\n\n\n/**\n * Creates a new text node.\n * @param {number|string} content Content.\n * @return {!Text} The new text node.\n */\ngoog.dom.DomHelper.prototype.createTextNode = function(content) {\n  return this.document_.createTextNode(String(content));\n};\n\n\n/**\n * Create a table.\n * @param {number} rows The number of rows in the table.  Must be >= 1.\n * @param {number} columns The number of columns in the table.  Must be >= 1.\n * @param {boolean=} opt_fillWithNbsp If true, fills table entries with\n *     `goog.string.Unicode.NBSP` characters.\n * @return {!HTMLElement} The created table.\n */\ngoog.dom.DomHelper.prototype.createTable = function(\n    rows, columns, opt_fillWithNbsp) {\n  return goog.dom.createTable_(\n      this.document_, rows, columns, !!opt_fillWithNbsp);\n};\n\n\n/**\n * Converts an HTML into a node or a document fragment. A single Node is used if\n * `html` only generates a single node. If `html` generates multiple\n * nodes then these are put inside a `DocumentFragment`. This is a safe\n * version of `goog.dom.DomHelper#htmlToDocumentFragment` which is now\n * deleted.\n * @param {!goog.html.SafeHtml} html The HTML markup to convert.\n * @return {!Node} The resulting node.\n */\ngoog.dom.DomHelper.prototype.safeHtmlToNode = function(html) {\n  return goog.dom.safeHtmlToNode_(this.document_, html);\n};\n\n\n/**\n * Returns true if the browser is in \"CSS1-compatible\" (standards-compliant)\n * mode, false otherwise.\n * @return {boolean} True if in CSS1-compatible mode.\n */\ngoog.dom.DomHelper.prototype.isCss1CompatMode = function() {\n  return goog.dom.isCss1CompatMode_(this.document_);\n};\n\n\n/**\n * Gets the window object associated with the document.\n * @return {!Window} The window associated with the given document.\n */\ngoog.dom.DomHelper.prototype.getWindow = function() {\n  return goog.dom.getWindow_(this.document_);\n};\n\n\n/**\n * Gets the document scroll element.\n * @return {!Element} Scrolling element.\n */\ngoog.dom.DomHelper.prototype.getDocumentScrollElement = function() {\n  return goog.dom.getDocumentScrollElement_(this.document_);\n};\n\n\n/**\n * Gets the document scroll distance as a coordinate object.\n * @return {!goog.math.Coordinate} Object with properties 'x' and 'y'.\n */\ngoog.dom.DomHelper.prototype.getDocumentScroll = function() {\n  return goog.dom.getDocumentScroll_(this.document_);\n};\n\n\n/**\n * Determines the active element in the given document.\n * @param {Document=} opt_doc The document to look in.\n * @return {Element} The active element.\n */\ngoog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {\n  return goog.dom.getActiveElement(opt_doc || this.document_);\n};\n\n\n/**\n * Appends a child to a node.\n * @param {Node} parent Parent.\n * @param {Node} child Child.\n */\ngoog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;\n\n\n/**\n * Appends a node with text or other nodes.\n * @param {!Node} parent The node to append nodes to.\n * @param {...goog.dom.Appendable} var_args The things to append to the node.\n *     If this is a Node it is appended as is.\n *     If this is a string then a text node is appended.\n *     If this is an array like object then fields 0 to length - 1 are appended.\n */\ngoog.dom.DomHelper.prototype.append = goog.dom.append;\n\n\n/**\n * Determines if the given node can contain children, intended to be used for\n * HTML generation.\n *\n * @param {Node} node The node to check.\n * @return {boolean} Whether the node can contain children.\n */\ngoog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;\n\n\n/**\n * Removes all the child nodes on a DOM node.\n * @param {Node} node Node to remove children from.\n */\ngoog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;\n\n\n/**\n * Inserts a new node before an existing reference node (i.e., as the previous\n * sibling). If the reference node has no parent, then does nothing.\n * @param {Node} newNode Node to insert.\n * @param {Node} refNode Reference node to insert before.\n */\ngoog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;\n\n\n/**\n * Inserts a new node after an existing reference node (i.e., as the next\n * sibling). If the reference node has no parent, then does nothing.\n * @param {Node} newNode Node to insert.\n * @param {Node} refNode Reference node to insert after.\n */\ngoog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;\n\n\n/**\n * Insert a child at a given index. If index is larger than the number of child\n * nodes that the parent currently has, the node is inserted as the last child\n * node.\n * @param {Element} parent The element into which to insert the child.\n * @param {Node} child The element to insert.\n * @param {number} index The index at which to insert the new child node. Must\n *     not be negative.\n */\ngoog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;\n\n\n/**\n * Removes a node from its parent.\n * @param {Node} node The node to remove.\n * @return {Node} The node removed if removed; else, null.\n */\ngoog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;\n\n\n/**\n * Replaces a node in the DOM tree. Will do nothing if `oldNode` has no\n * parent.\n * @param {Node} newNode Node to insert.\n * @param {Node} oldNode Node to replace.\n */\ngoog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;\n\n\n/**\n * Flattens an element. That is, removes it and replace it with its children.\n * @param {Element} element The element to flatten.\n * @return {Element|undefined} The original element, detached from the document\n *     tree, sans children, or undefined if the element was already not in the\n *     document.\n */\ngoog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;\n\n\n/**\n * Returns an array containing just the element children of the given element.\n * @param {Element} element The element whose element children we want.\n * @return {!(Array<!Element>|NodeList<!Element>)} An array or array-like list\n *     of just the element children of the given element.\n */\ngoog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;\n\n\n/**\n * Returns the first child node that is an element.\n * @param {Node} node The node to get the first child element of.\n * @return {Element} The first child node of `node` that is an element.\n */\ngoog.dom.DomHelper.prototype.getFirstElementChild =\n    goog.dom.getFirstElementChild;\n\n\n/**\n * Returns the last child node that is an element.\n * @param {Node} node The node to get the last child element of.\n * @return {Element} The last child node of `node` that is an element.\n */\ngoog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;\n\n\n/**\n * Returns the first next sibling that is an element.\n * @param {Node} node The node to get the next sibling element of.\n * @return {Element} The next sibling of `node` that is an element.\n */\ngoog.dom.DomHelper.prototype.getNextElementSibling =\n    goog.dom.getNextElementSibling;\n\n\n/**\n * Returns the first previous sibling that is an element.\n * @param {Node} node The node to get the previous sibling element of.\n * @return {Element} The first previous sibling of `node` that is\n *     an element.\n */\ngoog.dom.DomHelper.prototype.getPreviousElementSibling =\n    goog.dom.getPreviousElementSibling;\n\n\n/**\n * Returns the next node in source order from the given node.\n * @param {Node} node The node.\n * @return {Node} The next node in the DOM tree, or null if this was the last\n *     node.\n */\ngoog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;\n\n\n/**\n * Returns the previous node in source order from the given node.\n * @param {Node} node The node.\n * @return {Node} The previous node in the DOM tree, or null if this was the\n *     first node.\n */\ngoog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;\n\n\n/**\n * Whether the object looks like a DOM node.\n * @param {?} obj The object being tested for node likeness.\n * @return {boolean} Whether the object looks like a DOM node.\n */\ngoog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;\n\n\n/**\n * Whether the object looks like an Element.\n * @param {?} obj The object being tested for Element likeness.\n * @return {boolean} Whether the object looks like an Element.\n */\ngoog.dom.DomHelper.prototype.isElement = goog.dom.isElement;\n\n\n/**\n * Returns true if the specified value is a Window object. This includes the\n * global window for HTML pages, and iframe windows.\n * @param {?} obj Variable to test.\n * @return {boolean} Whether the variable is a window.\n */\ngoog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;\n\n\n/**\n * Returns an element's parent, if it's an Element.\n * @param {Element} element The DOM element.\n * @return {Element} The parent, or null if not an Element.\n */\ngoog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;\n\n\n/**\n * Whether a node contains another node.\n * @param {Node} parent The node that should contain the other node.\n * @param {Node} descendant The node to test presence of.\n * @return {boolean} Whether the parent node contains the descendant node.\n */\ngoog.dom.DomHelper.prototype.contains = goog.dom.contains;\n\n\n/**\n * Compares the document order of two nodes, returning 0 if they are the same\n * node, a negative number if node1 is before node2, and a positive number if\n * node2 is before node1.  Note that we compare the order the tags appear in the\n * document so in the tree <b><i>text</i></b> the B node is considered to be\n * before the I node.\n *\n * @param {Node} node1 The first node to compare.\n * @param {Node} node2 The second node to compare.\n * @return {number} 0 if the nodes are the same node, a negative number if node1\n *     is before node2, and a positive number if node2 is before node1.\n */\ngoog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;\n\n\n/**\n * Find the deepest common ancestor of the given nodes.\n * @param {...Node} var_args The nodes to find a common ancestor of.\n * @return {Node} The common ancestor of the nodes, or null if there is none.\n *     null will only be returned if two or more of the nodes are from different\n *     documents.\n */\ngoog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;\n\n\n/**\n * Returns the owner document for a node.\n * @param {Node} node The node to get the document for.\n * @return {!Document} The document owning the node.\n */\ngoog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;\n\n\n/**\n * Cross browser function for getting the document element of an iframe.\n * @param {Element} iframe Iframe element.\n * @return {!Document} The frame content document.\n */\ngoog.dom.DomHelper.prototype.getFrameContentDocument =\n    goog.dom.getFrameContentDocument;\n\n\n/**\n * Cross browser function for getting the window of a frame or iframe.\n * @param {Element} frame Frame element.\n * @return {Window} The window associated with the given frame.\n */\ngoog.dom.DomHelper.prototype.getFrameContentWindow =\n    goog.dom.getFrameContentWindow;\n\n\n/**\n * Sets the text content of a node, with cross-browser support.\n * @param {Node} node The node to change the text content of.\n * @param {string|number} text The value that should replace the node's content.\n */\ngoog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;\n\n\n/**\n * Gets the outerHTML of a node, which islike innerHTML, except that it\n * actually contains the HTML of the node itself.\n * @param {Element} element The element to get the HTML of.\n * @return {string} The outerHTML of the given element.\n */\ngoog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;\n\n\n/**\n * Finds the first descendant node that matches the filter function. This does\n * a depth first search.\n * @param {Node} root The root of the tree to search.\n * @param {function(Node) : boolean} p The filter function.\n * @return {Node|undefined} The found node or undefined if none is found.\n */\ngoog.dom.DomHelper.prototype.findNode = goog.dom.findNode;\n\n\n/**\n * Finds all the descendant nodes that matches the filter function. This does a\n * depth first search.\n * @param {Node} root The root of the tree to search.\n * @param {function(Node) : boolean} p The filter function.\n * @return {Array<Node>} The found nodes or an empty array if none are found.\n */\ngoog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;\n\n\n/**\n * Returns true if the element has a tab index that allows it to receive\n * keyboard focus (tabIndex >= 0), false otherwise.  Note that some elements\n * natively support keyboard focus, even if they have no tab index.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element has a tab index that allows keyboard\n *     focus.\n */\ngoog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;\n\n\n/**\n * Enables or disables keyboard focus support on the element via its tab index.\n * Only elements for which {@link goog.dom.isFocusableTabIndex} returns true\n * (or elements that natively support keyboard focus, like form elements) can\n * receive keyboard focus.  See http://go/tabindex for more info.\n * @param {Element} element Element whose tab index is to be changed.\n * @param {boolean} enable Whether to set or remove a tab index on the element\n *     that supports keyboard focus.\n */\ngoog.dom.DomHelper.prototype.setFocusableTabIndex =\n    goog.dom.setFocusableTabIndex;\n\n\n/**\n * Returns true if the element can be focused, i.e. it has a tab index that\n * allows it to receive keyboard focus (tabIndex >= 0), or it is an element\n * that natively supports keyboard focus.\n * @param {!Element} element Element to check.\n * @return {boolean} Whether the element allows keyboard focus.\n */\ngoog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;\n\n\n/**\n * Returns the text contents of the current node, without markup. New lines are\n * stripped and whitespace is collapsed, such that each character would be\n * visible.\n *\n * In browsers that support it, innerText is used.  Other browsers attempt to\n * simulate it via node traversal.  Line breaks are canonicalized in IE.\n *\n * @param {Node} node The node from which we are getting content.\n * @return {string} The text content.\n */\ngoog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;\n\n\n/**\n * Returns the text length of the text contained in a node, without markup. This\n * is equivalent to the selection length if the node was selected, or the number\n * of cursor movements to traverse the node. Images & BRs take one space.  New\n * lines are ignored.\n *\n * @param {Node} node The node whose text content length is being calculated.\n * @return {number} The length of `node`'s text content.\n */\ngoog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;\n\n\n/**\n * Returns the text offset of a node relative to one of its ancestors. The text\n * length is the same as the length calculated by\n * `goog.dom.getNodeTextLength`.\n *\n * @param {Node} node The node whose offset is being calculated.\n * @param {Node=} opt_offsetParent Defaults to the node's owner document's body.\n * @return {number} The text offset.\n */\ngoog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;\n\n\n/**\n * Returns the node at a given offset in a parent node.  If an object is\n * provided for the optional third parameter, the node and the remainder of the\n * offset will stored as properties of this object.\n * @param {Node} parent The parent node.\n * @param {number} offset The offset into the parent node.\n * @param {Object=} opt_result Object to be used to store the return value. The\n *     return value will be stored in the form {node: Node, remainder: number}\n *     if this object is provided.\n * @return {Node} The node at the given offset.\n */\ngoog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;\n\n\n/**\n * Returns true if the object is a `NodeList`.  To qualify as a NodeList,\n * the object must have a numeric length property and an item function (which\n * has type 'string' on IE for some reason).\n * @param {Object} val Object to test.\n * @return {boolean} Whether the object is a NodeList.\n */\ngoog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;\n\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that has the passed\n * tag name and/or class name. If the passed element matches the specified\n * criteria, the element itself is returned.\n * @param {Node} element The DOM node to start with.\n * @param {?(goog.dom.TagName<T>|string)=} opt_tag The tag name to match (or\n *     null/undefined to match only based on class name).\n * @param {?string=} opt_class The class name to match (or null/undefined to\n *     match only based on tag name).\n * @param {number=} opt_maxSearchSteps Maximum number of levels to search up the\n *     dom.\n * @return {?R} The first ancestor that matches the passed criteria, or\n *     null if no match is found. The return type is {?Element} if opt_tag is\n *     not a member of goog.dom.TagName or a more specific type if it is (e.g.\n *     {?HTMLAnchorElement} for goog.dom.TagName.A).\n * @template T\n * @template R := cond(isUnknown(T), 'Element', T) =:\n */\ngoog.dom.DomHelper.prototype.getAncestorByTagNameAndClass =\n    goog.dom.getAncestorByTagNameAndClass;\n\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that has the passed\n * class name. If the passed element matches the specified criteria, the\n * element itself is returned.\n * @param {Node} element The DOM node to start with.\n * @param {string} class The class name to match.\n * @param {number=} opt_maxSearchSteps Maximum number of levels to search up the\n *     dom.\n * @return {Element} The first ancestor that matches the passed criteria, or\n *     null if none match.\n */\ngoog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;\n\n\n/**\n * Walks up the DOM hierarchy returning the first ancestor that passes the\n * matcher function.\n * @param {Node} element The DOM node to start with.\n * @param {function(Node) : boolean} matcher A function that returns true if the\n *     passed node matches the desired criteria.\n * @param {boolean=} opt_includeNode If true, the node itself is included in\n *     the search (the first call to the matcher will pass startElement as\n *     the node to test).\n * @param {number=} opt_maxSearchSteps Maximum number of levels to search up the\n *     dom.\n * @return {Node} DOM node that matched the matcher, or null if there was\n *     no match.\n */\ngoog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;\n\n\n/**\n * Gets '2d' context of a canvas. Shortcut for canvas.getContext('2d') with a\n * type information.\n * @param {!HTMLCanvasElement} canvas\n * @return {!CanvasRenderingContext2D}\n */\ngoog.dom.DomHelper.prototype.getCanvasContext2D = goog.dom.getCanvasContext2D;\n"],
"names":["goog","provide","require","dom","ASSUME_QUIRKS_MODE","define","ASSUME_STANDARDS_MODE","COMPAT_MODE_KNOWN_","getDomHelper","goog.dom.getDomHelper","opt_element","DomHelper","getOwnerDocument","defaultDomHelper_","getDocument","goog.dom.getDocument","document","getElement","goog.dom.getElement","element","getElementHelper_","goog.dom.getElementHelper_","doc","getElementById","getRequiredElement","goog.dom.getRequiredElement","id","getRequiredElementHelper_","goog.dom.getRequiredElementHelper_","asserts","assertString","assertElement","$","getElementsByTagName","goog.dom.getElementsByTagName","tagName","opt_parent","parent","String","getElementsByTagNameAndClass","goog.dom.getElementsByTagNameAndClass","opt_tag","opt_class","opt_el","getElementsByTagNameAndClass_","getElementByTagNameAndClass","goog.dom.getElementByTagNameAndClass","getElementByTagNameAndClass_","getElementsByClass","goog.dom.getElementsByClass","className","canUseQuerySelector_","querySelectorAll","getElementByClass","goog.dom.getElementByClass","retVal","getElementsByClassName","getRequiredElementByClass","goog.dom.getRequiredElementByClass","opt_root","retValue","assert","goog.dom.canUseQuerySelector_","querySelector","goog.dom.getElementsByTagNameAndClass_","toUpperCase","query","els","arrayLike","len","i","el","nodeName","length","split","array","contains","goog.dom.getElementByTagNameAndClass_","tag","elements","$$","setProperties","goog.dom.setProperties","properties","object","forEach","val","key","implementsGoogStringTypedString","getTypedStringValue","style","cssText","htmlFor","DIRECT_ATTRIBUTE_MAP_","hasOwnProperty","setAttribute","string","startsWith","getViewportSize","goog.dom.getViewportSize","opt_window","getViewportSize_","window","goog.dom.getViewportSize_","win","isCss1CompatMode_","documentElement","body","math","Size","clientWidth","clientHeight","getDocumentHeight","goog.dom.getDocumentHeight","getDocumentHeight_","getDocumentHeightForWindow","goog.dom.getDocumentHeightForWindow","goog.dom.getDocumentHeight_","height","docEl","vh","scrollHeight","offsetHeight","sh","oh","getPageScroll","goog.dom.getPageScroll","global","getDocumentScroll","goog.dom.getDocumentScroll","getDocumentScroll_","goog.dom.getDocumentScroll_","getDocumentScrollElement_","getWindow_","userAgent","IE","isVersionOrHigher","pageYOffset","scrollTop","Coordinate","scrollLeft","pageXOffset","getDocumentScrollElement","goog.dom.getDocumentScrollElement","goog.dom.getDocumentScrollElement_","scrollingElement","WEBKIT","getWindow","goog.dom.getWindow","opt_doc","goog.dom.getWindow_","parentWindow","defaultView","createDom","goog.dom.createDom","opt_attributes","var_args","createDom_","arguments","goog.dom.createDom_","args","attributes","BrowserFeature","CAN_ADD_NAME_OR_TYPE_ATTRIBUTES","name","type","tagNameArr","push","htmlEscape","clone","extend","join","createElement_","isArray","append_","goog.dom.append_","startIndex","childHandler","child","appendChild","createTextNode","arg","isArrayLike","isNodeLike","isNodeList","toArray","$dom","createElement","goog.dom.createElement","goog.dom.createElement_","contentType","toLowerCase","goog.dom.createTextNode","content","createTable","goog.dom.createTable","rows","columns","opt_fillWithNbsp","createTable_","goog.dom.createTable_","fillWithNbsp","table","TagName","TABLE","tbody","TBODY","tr","TR","j","td","TD","setTextContent","Unicode","NBSP","constHtmlToNode","goog.dom.constHtmlToNode","stringArray","map","Const","unwrap","safeHtml","html","uncheckedconversions","safeHtmlFromStringKnownToSatisfyTypeContract","from","safeHtmlToNode","goog.dom.safeHtmlToNode","safeHtmlToNode_","goog.dom.safeHtmlToNode_","tempDiv","DIV","INNER_HTML_NEEDS_SCOPED_ELEMENT","safe","setInnerHtml","SafeHtml","concat","BR","removeChild","firstChild","childrenToNode_","goog.dom.childrenToNode_","childNodes","fragment","createDocumentFragment","isCss1CompatMode","goog.dom.isCss1CompatMode","goog.dom.isCss1CompatMode_","compatMode","canHaveChildren","goog.dom.canHaveChildren","node","nodeType","NodeType","ELEMENT","APPLET","AREA","BASE","COL","COMMAND","EMBED","FRAME","HR","IMG","INPUT","IFRAME","ISINDEX","KEYGEN","LINK","NOFRAMES","NOSCRIPT","META","OBJECT","PARAM","SCRIPT","SOURCE","STYLE","TRACK","WBR","goog.dom.appendChild","append","goog.dom.append","removeChildren","goog.dom.removeChildren","insertSiblingBefore","goog.dom.insertSiblingBefore","newNode","refNode","parentNode","insertBefore","insertSiblingAfter","goog.dom.insertSiblingAfter","nextSibling","insertChildAt","goog.dom.insertChildAt","index","removeNode","goog.dom.removeNode","replaceNode","goog.dom.replaceNode","oldNode","replaceChild","flattenElement","goog.dom.flattenElement","DOCUMENT_FRAGMENT","getChildren","goog.dom.getChildren","CAN_USE_CHILDREN_ATTRIBUTE","children","undefined","filter","getFirstElementChild","goog.dom.getFirstElementChild","firstElementChild","getNextElementNode_","getLastElementChild","goog.dom.getLastElementChild","lastElementChild","lastChild","getNextElementSibling","goog.dom.getNextElementSibling","nextElementSibling","getPreviousElementSibling","goog.dom.getPreviousElementSibling","previousElementSibling","previousSibling","goog.dom.getNextElementNode_","forward","getNextNode","goog.dom.getNextNode","getPreviousNode","goog.dom.getPreviousNode","goog.dom.isNodeLike","obj","isObject","isElement","goog.dom.isElement","isWindow","goog.dom.isWindow","getParentElement","goog.dom.getParentElement","CAN_USE_PARENT_ELEMENT_PROPERTY","isIe9","parentElement","goog.dom.contains","descendant","compareDocumentPosition","Boolean","compareNodeOrder","goog.dom.compareNodeOrder","node1","node2","isDocumentModeOrHigher","DOCUMENT","isElement1","isElement2","sourceIndex","parent1","parent2","compareSiblingOrder_","compareParentsDescendantNodeIe_","range1","range2","createRange","selectNode","collapse","compareBoundaryPoints","START_TO_END","goog.dom.compareParentsDescendantNodeIe_","textNode","sibling","goog.dom.compareSiblingOrder_","s","findCommonAncestor","goog.dom.findCommonAncestor","count","paths","minLength","Infinity","ancestors","unshift","Math","min","output","first","isInDocument","goog.dom.isInDocument","ownerDocument","goog.dom.getOwnerDocument","getFrameContentDocument","goog.dom.getFrameContentDocument","frame","contentDocument","contentWindow","getFrameContentWindow","goog.dom.getFrameContentWindow","e","goog.dom.setTextContent","text","textContent","TEXT","data","getOuterHtml","goog.dom.getOuterHtml","outerHTML","div","cloneNode","innerHTML","findNode","goog.dom.findNode","root","p","rv","found","findNodes_","findNodes","goog.dom.findNodes","goog.dom.findNodes_","findOne","findElement","goog.dom.findElement","pred","stack","getChildrenReverse_","next","pop","c","findElements","goog.dom.findElements","result","goog.dom.getChildrenReverse_","TAGS_TO_IGNORE_","PREDEFINED_TAG_VALUES_","isFocusableTabIndex","goog.dom.isFocusableTabIndex","hasSpecifiedTabIndex_","isTabIndexFocusable_","setFocusableTabIndex","goog.dom.setFocusableTabIndex","enable","tabIndex","removeAttribute","isFocusable","goog.dom.isFocusable","focusable","nativelySupportsFocus_","disabled","hasNonZeroBoundingRect_","goog.dom.hasSpecifiedTabIndex_","attrNode","getAttributeNode","specified","hasAttribute","goog.dom.isTabIndexFocusable_","goog.dom.nativelySupportsFocus_","A","TEXTAREA","SELECT","BUTTON","goog.dom.hasNonZeroBoundingRect_","rect","isFunction","offsetWidth","getBoundingClientRect","width","getTextContent","goog.dom.getTextContent","CAN_USE_INNER_TEXT","canonicalizeNewlines","innerText","buf","getTextContent_","replace","getRawTextContent","goog.dom.getRawTextContent","goog.dom.getTextContent_","normalizeWhitespace","nodeValue","getNodeTextLength","goog.dom.getNodeTextLength","getNodeTextOffset","goog.dom.getNodeTextOffset","opt_offsetParent","cur","trimLeft","getNodeAtOffset","goog.dom.getNodeAtOffset","offset","opt_result","pos","remainder","goog.dom.isNodeList","item","getAncestorByTagNameAndClass","goog.dom.getAncestorByTagNameAndClass","opt_maxSearchSteps","getAncestor","getAncestorByClass","goog.dom.getAncestorByClass","goog.dom.getAncestor","matcher","opt_includeNode","steps","getActiveElement","goog.dom.getActiveElement","activeElement","getPixelRatio","goog.dom.getPixelRatio","devicePixelRatio","matchMedia","matchesPixelRatio_","goog.dom.matchesPixelRatio_","pixelRatio","dpiPerDppx","matches","getCanvasContext2D","goog.dom.getCanvasContext2D","canvas","getContext","goog.dom.DomHelper","opt_document","document_","prototype","setDocument","goog.dom.DomHelper.prototype.setDocument","goog.dom.DomHelper.prototype.getDocument","goog.dom.DomHelper.prototype.getElement","goog.dom.DomHelper.prototype.getRequiredElement","goog.dom.DomHelper.prototype.getElementsByTagName","goog.dom.DomHelper.prototype.getElementsByTagNameAndClass","goog.dom.DomHelper.prototype.getElementByTagNameAndClass","goog.dom.DomHelper.prototype.getElementsByClass","goog.dom.DomHelper.prototype.getElementByClass","goog.dom.DomHelper.prototype.getRequiredElementByClass","goog.dom.DomHelper.prototype.getViewportSize","goog.dom.DomHelper.prototype.getDocumentHeight","Appendable","goog.dom.DomHelper.prototype.createDom","goog.dom.DomHelper.prototype.createElement","goog.dom.DomHelper.prototype.createTextNode","goog.dom.DomHelper.prototype.createTable","goog.dom.DomHelper.prototype.safeHtmlToNode","goog.dom.DomHelper.prototype.isCss1CompatMode","goog.dom.DomHelper.prototype.getWindow","goog.dom.DomHelper.prototype.getDocumentScrollElement","goog.dom.DomHelper.prototype.getDocumentScroll","goog.dom.DomHelper.prototype.getActiveElement"]
}
