{"version":3,"sources":["dommy/utils.cljs"],"mappings":";;AAEA;;;;AAAA,AAAAA,AAAMO,AAGHC;AAHH,AAAA,AAAAP,AAAAD;AAAAE,AAAA,AAAAC,AAAAF;AAAAG,AAAA,AAAAC,AAAAH;AAAAA,AAAA,AAAAI,AAAAJ;AAAAE,AAGMK;AAHNP,AAGUQ;AAHV,AAIE,AAAMF;AAAN,AACE,AAAAG,AAAa,AAAAE,AAAKH;AAAL,AAAA,AAAAG;AAAQ,AAAAC,AAAW,AAACN,AAAAA,AAAAA,AAAEC,AAAAA;AAAdM,AAAiBL;AAAjB,AAAA,AAAAI,AAAAC,AAAAD,AAAAC,AAACR,AAAAA,AAAAA;;AAATM;;;AAAb,AAAA,AAAAF;AAAA,AAAAA,AAASC;AAAT,AACE,AAACI,AAAMR,AAAEC,AAAEG;;AACX,AAAMA,AAAI,AAACK,AAAOT,AAAEC;AAApB,AACE,AAAU,AAACS,AAAON;AAAlB;;AAAA,AACEA;;;;AALR;;;AAOF,AAAA,AAAMO,AAASC;AAAf,AACE,AAAOC,AAAyBD;;AAElC;;;;AAAA,AAAME,AAGHC;AAHH,AAIE,AAAI,AAAAC,AAAUD;AACZ,AAAK,AAAAE,AAAQ,AAACC,AAAUH;AAAnB,AAAA,AAAA,AAAAE,AAAA;AAAA;;AAAsB,AAAAA,AAAA;;AAAW,AAACE,AAAKJ;;AAC5CA;;;AAEJ;;;;AAAA,AAAeK,AAGZC,AAAWC,AAAMC;AAHpB,AAIE,AAEC,AAAI,AAAA,AAAOA,AAAK,AAAA,AAAmB,AAASF,AAAW,AAAA,AAAKE;AAE5D,AAAMC,AAAU,AAAUH;AACpBI,AAAK,AAAGF,AAAI,AAAUD;AAD5B,AAEE,AAAM,AAAIG,AAAKD;AAAf,AACE,AAAI,AAAYC,AAAKD,AACjB,AAAA,AAAmB,AAASH,AAAWI;;AAF7C;;;AANH;;;AAUF;;;;AAAA,AAAcC,AAGXL,AAAWC;AAHd,AAIE,AAAA,AAAOK;;AAAP,AACE,AAAMC,AAAE,AAAUP,AAAWC,AAAMK;AAAnC,AACE,AAAM,AAAA,AAAIC;AAAV,AACE,AAAI,AAACR,AAAaC,AAAWC,AAAMM;AACjCA;;AACA,AAAO,AAAGA,AAAE,AAAUN;;;;;AAH1B;;;;;AAKN,AAAA,AAAMO,AAAkBC,AAAgBR;AAAxC,AACE,AAAOD,AAAWS;;AAAlB,AACE,AAAMC,AAAU,AAAUV;AAA1B,AACE,AAAAlB,AAAW,AAACuB,AAAYL,AAAWC;AAAnC,AAAA,AAAAnB;AAAA,AAAAA,AAASyB;AAAT,AACE,AAAO,AAAMI,AAAI,AAAGJ,AAAE,AAAUN;AAAzB,AACE,AAAK,AAAI,AAAGU,AAAID,AACT,AAAK,AAAA,AAAYV,AAAaO,AACzB,AAASP,AAAW,AAAA,AAAKW,AAC9B,AAAA,AAAYX,AAAa,AAAA,AAAKO;;;;;AAC9CP","names":["p__35433","vec__35434","seq__35435","cljs.core/seq","first__35436","cljs.core/first","cljs.core/next","dommy.utils/dissoc-in","m","k","ks","temp__5733__auto__","res","and__4109__auto__","G__35439","G__35440","cljs.core.assoc","cljs.core.dissoc","cljs.core/empty?","dommy.utils/->Array","array-like","js/Array.prototype.slice","dommy.utils/as-str","s","cljs.core/Keyword","G__35442","cljs.core/namespace","cljs.core/name","dommy.utils/class-match?","class-name","class","idx","total-len","stop","dommy.utils/class-index","start-from","i","dommy.utils/remove-class-str","init-class-name","class-len","end"],"sourcesContent":["(ns dommy.utils)\n\n(defn dissoc-in\n  \"Dissociate this keyseq from m, removing any empty maps created as a result\n   (including at the top-level).\"\n  [m [k & ks]]\n  (when m\n    (if-let [res (and ks (dissoc-in (m k) ks))]\n      (assoc m k res)\n      (let [res (dissoc m k)]\n        (when-not (empty? res)\n          res)))))\n\n(defn ->Array [array-like]\n  (.call js/Array.prototype.slice array-like))\n\n(defn as-str\n  \"Coerces strings and keywords to strings, while preserving namespace of\n   namespaced keywords\"\n  [s]\n  (if (keyword? s)\n    (str (some-> (namespace s) (str \"/\")) (name s))\n    s))\n\n(defn ^boolean class-match?\n  \"Does `class-name` string have class starting at index idx.\n   only will be used when Element::classList doesn't exist\"\n  [class-name class idx]\n  (and\n   ;; start\n   (or (zero? idx) (identical? \\space (.charAt class-name (dec idx))))\n   ;; stop\n   (let [total-len (.-length class-name)\n         stop (+ idx (.-length class))]\n     (when (<= stop total-len)\n       (or (identical? stop total-len)\n           (identical? \\space (.charAt class-name stop)))))))\n\n(defn ^number class-index\n  \"Finds the index of class in a space-delimited class-name\n    only will be used when Element::classList doesn't exist\"\n  [class-name class]\n  (loop [start-from 0]\n    (let [i (.indexOf class-name class start-from)]\n      (when (>= i 0)\n        (if (class-match? class-name class i)\n          i\n          (recur (+ i (.-length class))))))))\n\n(defn remove-class-str [init-class-name class]\n  (loop [class-name init-class-name]\n    (let [class-len (.-length class-name)]\n      (if-let [i (class-index class-name class)]\n        (recur (let [end (+ i (.-length class))]\n                 (str (if (< end class-len)\n                        (str (.substring class-name 0 i)\n                             (.substr class-name (inc end)))\n                        (.substring class-name 0 (dec i))))))\n        class-name))))\n"]}