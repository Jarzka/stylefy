{
"version":3,
"file":"goog.net.errorcode.js",
"lineCount":33,
"mappings":"AAmBAA,IAAAC,QAAA,CAAa,oBAAb,CAAA;AAOA,sBAAAD,IAAAE,IAAAC,UAAA,GAAqB,CAKnBC,SAAU,CALS,EAcnBC,cAAe,CAdI,EAqBnBC,eAAgB,CArBG,EA4BnBC,gBAAiB,CA5BE,EAiCnBC,aAAc,CAjCK,EAsCnBC,UAAW,CAtCQ,EA2CnBC,WAAY,CA3CO,EAgDnBC,MAAO,CAhDY,EAqDnBC,QAAS,CArDU,EA0DnBC,QAAS,CA1DU,CAArB;AAoEA;;;;AAAAb,IAAAE,IAAAC,UAAAW,gBAAA,GAAqCC,QAAQ,CAACC,SAAD,CAAY;AACvD,SAAQA,SAAR;AACE,SAAKhB,IAAAE,IAAAC,UAAAC,SAAL;AACE,aAAO,UAAP;AAEF,SAAKJ,IAAAE,IAAAC,UAAAE,cAAL;AACE,aAAO,mCAAP;AAEF,SAAKL,IAAAE,IAAAC,UAAAG,eAAL;AACE,aAAO,gBAAP;AAEF,SAAKN,IAAAE,IAAAC,UAAAI,gBAAL;AACE,aAAO,0BAAP;AAEF,SAAKP,IAAAE,IAAAC,UAAAK,aAAL;AACE,aAAO,0BAAP;AAEF,SAAKR,IAAAE,IAAAC,UAAAM,UAAL;AACE,aAAO,uBAAP;AAEF,SAAKT,IAAAE,IAAAC,UAAAO,WAAL;AACE,aAAO,mCAAP;AAEF,SAAKV,IAAAE,IAAAC,UAAAQ,MAAL;AACE,aAAO,qBAAP;AAEF,SAAKX,IAAAE,IAAAC,UAAAS,QAAL;AACE,aAAO,mBAAP;AAEF,SAAKZ,IAAAE,IAAAC,UAAAU,QAAL;AACE,aAAO,uCAAP;AAEF;AACE,aAAO,yBAAP;AAhCJ;AADuD,CAAzD;;",
"sources":["goog/net/errorcode.js"],
"sourcesContent":["// Copyright 2007 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Error codes shared between goog.net.IframeIo and\n * goog.net.XhrIo.\n */\n\ngoog.provide('goog.net.ErrorCode');\n\n\n/**\n * Error codes\n * @enum {number}\n */\ngoog.net.ErrorCode = {\n\n  /**\n   * There is no error condition.\n   */\n  NO_ERROR: 0,\n\n  /**\n   * The most common error from iframeio, unfortunately, is that the browser\n   * responded with an error page that is classed as a different domain. The\n   * situations, are when a browser error page  is shown -- 404, access denied,\n   * DNS failure, connection reset etc.)\n   *\n   */\n  ACCESS_DENIED: 1,\n\n  /**\n   * Currently the only case where file not found will be caused is when the\n   * code is running on the local file system and a non-IE browser makes a\n   * request to a file that doesn't exist.\n   */\n  FILE_NOT_FOUND: 2,\n\n  /**\n   * If Firefox shows a browser error page, such as a connection reset by\n   * server or access denied, then it will fail silently without the error or\n   * load handlers firing.\n   */\n  FF_SILENT_ERROR: 3,\n\n  /**\n   * Custom error provided by the client through the error check hook.\n   */\n  CUSTOM_ERROR: 4,\n\n  /**\n   * Exception was thrown while processing the request.\n   */\n  EXCEPTION: 5,\n\n  /**\n   * The Http response returned a non-successful http status code.\n   */\n  HTTP_ERROR: 6,\n\n  /**\n   * The request was aborted.\n   */\n  ABORT: 7,\n\n  /**\n   * The request timed out.\n   */\n  TIMEOUT: 8,\n\n  /**\n   * The resource is not available offline.\n   */\n  OFFLINE: 9\n};\n\n\n/**\n * Returns a friendly error message for an error code. These messages are for\n * debugging and are not localized.\n * @param {goog.net.ErrorCode} errorCode An error code.\n * @return {string} A message for debugging.\n */\ngoog.net.ErrorCode.getDebugMessage = function(errorCode) {\n  switch (errorCode) {\n    case goog.net.ErrorCode.NO_ERROR:\n      return 'No Error';\n\n    case goog.net.ErrorCode.ACCESS_DENIED:\n      return 'Access denied to content document';\n\n    case goog.net.ErrorCode.FILE_NOT_FOUND:\n      return 'File not found';\n\n    case goog.net.ErrorCode.FF_SILENT_ERROR:\n      return 'Firefox silently errored';\n\n    case goog.net.ErrorCode.CUSTOM_ERROR:\n      return 'Application custom error';\n\n    case goog.net.ErrorCode.EXCEPTION:\n      return 'An exception occurred';\n\n    case goog.net.ErrorCode.HTTP_ERROR:\n      return 'Http response at 400 or 500 level';\n\n    case goog.net.ErrorCode.ABORT:\n      return 'Request was aborted';\n\n    case goog.net.ErrorCode.TIMEOUT:\n      return 'Request timed out';\n\n    case goog.net.ErrorCode.OFFLINE:\n      return 'The resource is not available offline';\n\n    default:\n      return 'Unrecognized error code';\n  }\n};\n"],
"names":["goog","provide","net","ErrorCode","NO_ERROR","ACCESS_DENIED","FILE_NOT_FOUND","FF_SILENT_ERROR","CUSTOM_ERROR","EXCEPTION","HTTP_ERROR","ABORT","TIMEOUT","OFFLINE","getDebugMessage","goog.net.ErrorCode.getDebugMessage","errorCode"]
}
