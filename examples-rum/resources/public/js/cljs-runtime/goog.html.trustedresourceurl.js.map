{
"version":3,
"file":"goog.html.trustedresourceurl.js",
"lineCount":163,
"mappings":"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",
"sources":["goog/html/trustedresourceurl.js"],
"sourcesContent":["// Copyright 2013 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview The TrustedResourceUrl type and its builders.\n *\n * TODO(xtof): Link to document stating type contract.\n */\n\ngoog.provide('goog.html.TrustedResourceUrl');\n\ngoog.require('goog.asserts');\ngoog.require('goog.html.trustedtypes');\ngoog.require('goog.i18n.bidi.Dir');\ngoog.require('goog.i18n.bidi.DirectionalString');\ngoog.require('goog.string.Const');\ngoog.require('goog.string.TypedString');\n\n\n\n/**\n * A URL which is under application control and from which script, CSS, and\n * other resources that represent executable code, can be fetched.\n *\n * Given that the URL can only be constructed from strings under application\n * control and is used to load resources, bugs resulting in a malformed URL\n * should not have a security impact and are likely to be easily detectable\n * during testing. Given the wide number of non-RFC compliant URLs in use,\n * stricter validation could prevent some applications from being able to use\n * this type.\n *\n * Instances of this type must be created via the factory method,\n * (`fromConstant`, `fromConstants`, `format` or\n * `formatWithParams`), and not by invoking its constructor. The constructor\n * is organized in a way that only methods from that file can call it and\n * initialize with non-empty values. Anyone else calling constructor will\n * get default instance with empty value.\n *\n * @see goog.html.TrustedResourceUrl#fromConstant\n * @constructor\n * @final\n * @struct\n * @implements {goog.i18n.bidi.DirectionalString}\n * @implements {goog.string.TypedString}\n * @param {!Object=} opt_token package-internal implementation detail.\n * @param {!TrustedScriptURL|string=} opt_content package-internal\n *     implementation detail.\n */\ngoog.html.TrustedResourceUrl = function(opt_token, opt_content) {\n  /**\n   * The contained value of this TrustedResourceUrl.  The field has a purposely\n   * ugly name to make (non-compiled) code that attempts to directly access this\n   * field stand out.\n   * @const\n   * @private {!TrustedScriptURL|string}\n   */\n  this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ =\n      ((opt_token ===\n        goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_) &&\n       opt_content) ||\n      '';\n\n  /**\n   * A type marker used to implement additional run-time type checking.\n   * @see goog.html.TrustedResourceUrl#unwrap\n   * @const {!Object}\n   * @private\n   */\n  this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ =\n      goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;\n};\n\n\n/**\n * @override\n * @const\n */\ngoog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = true;\n\n\n/**\n * Returns this TrustedResourceUrl's value as a string.\n *\n * IMPORTANT: In code where it is security relevant that an object's type is\n * indeed `TrustedResourceUrl`, use\n * `goog.html.TrustedResourceUrl.unwrap` instead of this method. If in\n * doubt, assume that it's security relevant. In particular, note that\n * goog.html functions which return a goog.html type do not guarantee that\n * the returned instance is of the right type. For example:\n *\n * <pre>\n * var fakeSafeHtml = new String('fake');\n * fakeSafeHtml.__proto__ = goog.html.SafeHtml.prototype;\n * var newSafeHtml = goog.html.SafeHtml.htmlEscape(fakeSafeHtml);\n * // newSafeHtml is just an alias for fakeSafeHtml, it's passed through by\n * // goog.html.SafeHtml.htmlEscape() as fakeSafeHtml instanceof\n * // goog.html.SafeHtml.\n * </pre>\n *\n * @see goog.html.TrustedResourceUrl#unwrap\n * @override\n */\ngoog.html.TrustedResourceUrl.prototype.getTypedStringValue = function() {\n  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_\n      .toString();\n};\n\n\n/**\n * @override\n * @const\n */\ngoog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString =\n    true;\n\n\n/**\n * Returns this URLs directionality, which is always `LTR`.\n * @override\n */\ngoog.html.TrustedResourceUrl.prototype.getDirection = function() {\n  return goog.i18n.bidi.Dir.LTR;\n};\n\n\n/**\n * Creates a new TrustedResourceUrl with params added to URL. Both search and\n * hash params can be specified.\n *\n * @param {string|?Object<string, *>|undefined} searchParams Search parameters\n *     to add to URL. See goog.html.TrustedResourceUrl.stringifyParams_ for\n *     exact format definition.\n * @param {(string|?Object<string, *>)=} opt_hashParams Hash parameters to add\n *     to URL. See goog.html.TrustedResourceUrl.stringifyParams_ for exact\n *     format definition.\n * @return {!goog.html.TrustedResourceUrl} New TrustedResourceUrl with params.\n */\ngoog.html.TrustedResourceUrl.prototype.cloneWithParams = function(\n    searchParams, opt_hashParams) {\n  var url = goog.html.TrustedResourceUrl.unwrap(this);\n  var parts = goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(url);\n  var urlBase = parts[1];\n  var urlSearch = parts[2] || '';\n  var urlHash = parts[3] || '';\n\n  return goog.html.TrustedResourceUrl\n      .createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(\n          urlBase +\n          goog.html.TrustedResourceUrl.stringifyParams_(\n              '?', urlSearch, searchParams) +\n          goog.html.TrustedResourceUrl.stringifyParams_(\n              '#', urlHash, opt_hashParams));\n};\n\n\nif (goog.DEBUG) {\n  /**\n   * Returns a debug string-representation of this value.\n   *\n   * To obtain the actual string value wrapped in a TrustedResourceUrl, use\n   * `goog.html.TrustedResourceUrl.unwrap`.\n   *\n   * @see goog.html.TrustedResourceUrl#unwrap\n   * @override\n   */\n  goog.html.TrustedResourceUrl.prototype.toString = function() {\n    return 'TrustedResourceUrl{' +\n        this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + '}';\n  };\n}\n\n\n/**\n * Performs a runtime check that the provided object is indeed a\n * TrustedResourceUrl object, and returns its value.\n *\n * @param {!goog.html.TrustedResourceUrl} trustedResourceUrl The object to\n *     extract from.\n * @return {string} The trustedResourceUrl object's contained string, unless\n *     the run-time type check fails. In that case, `unwrap` returns an\n *     innocuous string, or, if assertions are enabled, throws\n *     `goog.asserts.AssertionError`.\n */\ngoog.html.TrustedResourceUrl.unwrap = function(trustedResourceUrl) {\n  return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(trustedResourceUrl)\n      .toString();\n};\n\n\n/**\n * Unwraps value as TrustedScriptURL if supported or as a string if not.\n * @param {!goog.html.TrustedResourceUrl} trustedResourceUrl\n * @return {!TrustedScriptURL|string}\n * @see goog.html.TrustedResourceUrl.unwrap\n */\ngoog.html.TrustedResourceUrl.unwrapTrustedScriptURL = function(\n    trustedResourceUrl) {\n  // Perform additional Run-time type-checking to ensure that\n  // trustedResourceUrl is indeed an instance of the expected type.  This\n  // provides some additional protection against security bugs due to\n  // application code that disables type checks.\n  // Specifically, the following checks are performed:\n  // 1. The object is an instance of the expected type.\n  // 2. The object is not an instance of a subclass.\n  // 3. The object carries a type marker for the expected type. \"Faking\" an\n  // object requires a reference to the type marker, which has names intended\n  // to stand out in code reviews.\n  if (trustedResourceUrl instanceof goog.html.TrustedResourceUrl &&\n      trustedResourceUrl.constructor === goog.html.TrustedResourceUrl &&\n      trustedResourceUrl\n              .TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ ===\n          goog.html.TrustedResourceUrl\n              .TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {\n    return trustedResourceUrl\n        .privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;\n  } else {\n    goog.asserts.fail('expected object of type TrustedResourceUrl, got \\'' +\n        trustedResourceUrl + '\\' of type ' + goog.typeOf(trustedResourceUrl));\n    return 'type_error:TrustedResourceUrl';\n  }\n};\n\n\n/**\n * Creates a TrustedResourceUrl from a format string and arguments.\n *\n * The arguments for interpolation into the format string map labels to values.\n * Values of type `goog.string.Const` are interpolated without modifcation.\n * Values of other types are cast to string and encoded with\n * encodeURIComponent.\n *\n * `%{<label>}` markers are used in the format string to indicate locations\n * to be interpolated with the valued mapped to the given label. `<label>`\n * must contain only alphanumeric and `_` characters.\n *\n * The format string must match goog.html.TrustedResourceUrl.BASE_URL_.\n *\n * Example usage:\n *\n *    var url = goog.html.TrustedResourceUrl.format(goog.string.Const.from(\n *        'https://www.google.com/search?q=%{query}'), {'query': searchTerm});\n *\n *    var url = goog.html.TrustedResourceUrl.format(goog.string.Const.from(\n *        '//www.youtube.com/v/%{videoId}?hl=en&fs=1%{autoplay}'), {\n *        'videoId': videoId,\n *        'autoplay': opt_autoplay ?\n *            goog.string.Const.from('&autoplay=1') : goog.string.Const.EMPTY\n *    });\n *\n * While this function can be used to create a TrustedResourceUrl from only\n * constants, fromConstant() and fromConstants() are generally preferable for\n * that purpose.\n *\n * @param {!goog.string.Const} format The format string.\n * @param {!Object<string, (string|number|!goog.string.Const)>} args Mapping\n *     of labels to values to be interpolated into the format string.\n *     goog.string.Const values are interpolated without encoding.\n * @return {!goog.html.TrustedResourceUrl}\n * @throws {!Error} On an invalid format string or if a label used in the\n *     the format string is not present in args.\n */\ngoog.html.TrustedResourceUrl.format = function(format, args) {\n  var formatStr = goog.string.Const.unwrap(format);\n  if (!goog.html.TrustedResourceUrl.BASE_URL_.test(formatStr)) {\n    throw new Error('Invalid TrustedResourceUrl format: ' + formatStr);\n  }\n  var result = formatStr.replace(\n      goog.html.TrustedResourceUrl.FORMAT_MARKER_, function(match, id) {\n        if (!Object.prototype.hasOwnProperty.call(args, id)) {\n          throw new Error(\n              'Found marker, \"' + id + '\", in format string, \"' + formatStr +\n              '\", but no valid label mapping found ' +\n              'in args: ' + JSON.stringify(args));\n        }\n        var arg = args[id];\n        if (arg instanceof goog.string.Const) {\n          return goog.string.Const.unwrap(arg);\n        } else {\n          return encodeURIComponent(String(arg));\n        }\n      });\n  return goog.html.TrustedResourceUrl\n      .createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(result);\n};\n\n\n/**\n * @private @const {!RegExp}\n */\ngoog.html.TrustedResourceUrl.FORMAT_MARKER_ = /%{(\\w+)}/g;\n\n\n/**\n * The URL must be absolute, scheme-relative or path-absolute. So it must\n * start with:\n * - https:// followed by allowed origin characters.\n * - // followed by allowed origin characters.\n * - Any absolute or relative path.\n *\n * Based on\n * https://url.spec.whatwg.org/commit-snapshots/56b74ce7cca8883eab62e9a12666e2fac665d03d/#url-parsing\n * an initial / which is not followed by another / or \\ will end up in the \"path\n * state\" and from there it can only go to \"fragment state\" and \"query state\".\n *\n * We don't enforce a well-formed domain name. So '.' or '1.2' are valid.\n * That's ok because the origin comes from a compile-time constant.\n *\n * A regular expression is used instead of goog.uri for several reasons:\n * - Strictness. E.g. we don't want any userinfo component and we don't\n *   want '/./, nor \\' in the first path component.\n * - Small trusted base. goog.uri is generic and might need to change,\n *   reasoning about all the ways it can parse a URL now and in the future\n *   is error-prone.\n * - Code size. We expect many calls to .format(), many of which might\n *   not be using goog.uri.\n * - Simplicity. Using goog.uri would likely not result in simpler nor shorter\n *   code.\n * @private @const {!RegExp}\n */\ngoog.html.TrustedResourceUrl.BASE_URL_ = new RegExp(\n    '^((https:)?//[0-9a-z.:[\\\\]-]+/'  // Origin.\n        + '|/[^/\\\\\\\\]'                // Absolute path.\n        + '|[^:/\\\\\\\\%]+/'             // Relative path.\n        + '|[^:/\\\\\\\\%]*[?#]'          // Query string or fragment.\n        + '|about:blank#'             // about:blank with fragment.\n        + ')',\n    'i');\n\n/**\n * RegExp for splitting a URL into the base, search field, and hash field.\n *\n * @private @const {!RegExp}\n */\ngoog.html.TrustedResourceUrl.URL_PARAM_PARSER_ =\n    /^([^?#]*)(\\?[^#]*)?(#[\\s\\S]*)?/;\n\n\n/**\n * Formats the URL same as TrustedResourceUrl.format and then adds extra URL\n * parameters.\n *\n * Example usage:\n *\n *     // Creates '//www.youtube.com/v/abc?autoplay=1' for videoId='abc' and\n *     // opt_autoplay=1. Creates '//www.youtube.com/v/abc' for videoId='abc'\n *     // and opt_autoplay=undefined.\n *     var url = goog.html.TrustedResourceUrl.formatWithParams(\n *         goog.string.Const.from('//www.youtube.com/v/%{videoId}'),\n *         {'videoId': videoId},\n *         {'autoplay': opt_autoplay});\n *\n * @param {!goog.string.Const} format The format string.\n * @param {!Object<string, (string|number|!goog.string.Const)>} args Mapping\n *     of labels to values to be interpolated into the format string.\n *     goog.string.Const values are interpolated without encoding.\n * @param {string|?Object<string, *>|undefined} searchParams Parameters to add\n *     to URL. See goog.html.TrustedResourceUrl.stringifyParams_ for exact\n *     format definition.\n * @param {(string|?Object<string, *>)=} opt_hashParams Hash parameters to add\n *     to URL. See goog.html.TrustedResourceUrl.stringifyParams_ for exact\n *     format definition.\n * @return {!goog.html.TrustedResourceUrl}\n * @throws {!Error} On an invalid format string or if a label used in the\n *     the format string is not present in args.\n */\ngoog.html.TrustedResourceUrl.formatWithParams = function(\n    format, args, searchParams, opt_hashParams) {\n  var url = goog.html.TrustedResourceUrl.format(format, args);\n  return url.cloneWithParams(searchParams, opt_hashParams);\n};\n\n\n/**\n * Creates a TrustedResourceUrl object from a compile-time constant string.\n *\n * Compile-time constant strings are inherently program-controlled and hence\n * trusted.\n *\n * @param {!goog.string.Const} url A compile-time-constant string from which to\n *     create a TrustedResourceUrl.\n * @return {!goog.html.TrustedResourceUrl} A TrustedResourceUrl object\n *     initialized to `url`.\n */\ngoog.html.TrustedResourceUrl.fromConstant = function(url) {\n  return goog.html.TrustedResourceUrl\n      .createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(\n          goog.string.Const.unwrap(url));\n};\n\n\n/**\n * Creates a TrustedResourceUrl object from a compile-time constant strings.\n *\n * Compile-time constant strings are inherently program-controlled and hence\n * trusted.\n *\n * @param {!Array<!goog.string.Const>} parts Compile-time-constant strings from\n *     which to create a TrustedResourceUrl.\n * @return {!goog.html.TrustedResourceUrl} A TrustedResourceUrl object\n *     initialized to concatenation of `parts`.\n */\ngoog.html.TrustedResourceUrl.fromConstants = function(parts) {\n  var unwrapped = '';\n  for (var i = 0; i < parts.length; i++) {\n    unwrapped += goog.string.Const.unwrap(parts[i]);\n  }\n  return goog.html.TrustedResourceUrl\n      .createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(unwrapped);\n};\n\n\n/**\n * Type marker for the TrustedResourceUrl type, used to implement additional\n * run-time type checking.\n * @const {!Object}\n * @private\n */\ngoog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};\n\n\n/**\n * Package-internal utility method to create TrustedResourceUrl instances.\n *\n * @param {string} url The string to initialize the TrustedResourceUrl object\n *     with.\n * @return {!goog.html.TrustedResourceUrl} The initialized TrustedResourceUrl\n *     object.\n * @package\n */\ngoog.html.TrustedResourceUrl\n    .createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(url) {\n  var value = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ?\n      goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY\n          .createScriptURL(url) :\n      url;\n  return new goog.html.TrustedResourceUrl(\n      goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_, value);\n};\n\n\n/**\n * Stringifies the passed params to be used as either a search or hash field of\n * a URL.\n *\n * @param {string} prefix The prefix character for the given field ('?' or '#').\n * @param {string} currentString The existing field value (including the prefix\n *     character, if the field is present).\n * @param {string|?Object<string, *>|undefined} params The params to set or\n *     append to the field.\n * - If `undefined` or `null`, the field remains unchanged.\n * - If a string, then the string will be escaped and the field will be\n *   overwritten with that value.\n * - If an Object, that object is treated as a set of key-value pairs to be\n *   appended to the current field. Note that JavaScript doesn't guarantee the\n *   order of values in an object which might result in non-deterministic order\n *   of the parameters. However, browsers currently preserve the order. The\n *   rules for each entry:\n *   - If an array, it will be processed as if each entry were an additional\n *     parameter with exactly the same key, following the same logic below.\n *   - If `undefined` or `null`, it will be skipped.\n *   - Otherwise, it will be turned into a string, escaped, and appended.\n * @return {string}\n * @private\n */\ngoog.html.TrustedResourceUrl.stringifyParams_ = function(\n    prefix, currentString, params) {\n  if (params == null) {\n    // Do not modify the field.\n    return currentString;\n  }\n  if (typeof params === 'string') {\n    // Set field to the passed string.\n    return params ? prefix + encodeURIComponent(params) : '';\n  }\n  // Add on parameters to field from key-value object.\n  for (var key in params) {\n    var value = params[key];\n    var outputValues = goog.isArray(value) ? value : [value];\n    for (var i = 0; i < outputValues.length; i++) {\n      var outputValue = outputValues[i];\n      if (outputValue != null) {\n        if (!currentString) {\n          currentString = prefix;\n        }\n        currentString += (currentString.length > prefix.length ? '&' : '') +\n            encodeURIComponent(key) + '=' +\n            encodeURIComponent(String(outputValue));\n      }\n    }\n  }\n  return currentString;\n};\n\n/**\n * Token used to ensure that object is created only from this file. No code\n * outside of this file can access this token.\n * @private {!Object}\n * @const\n */\ngoog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ = {};\n"],
"names":["goog","provide","require","html","TrustedResourceUrl","goog.html.TrustedResourceUrl","opt_token","opt_content","privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_","CONSTRUCTOR_TOKEN_PRIVATE_","TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_","TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_","prototype","implementsGoogStringTypedString","getTypedStringValue","goog.html.TrustedResourceUrl.prototype.getTypedStringValue","toString","implementsGoogI18nBidiDirectionalString","getDirection","goog.html.TrustedResourceUrl.prototype.getDirection","i18n","bidi","Dir","LTR","cloneWithParams","goog.html.TrustedResourceUrl.prototype.cloneWithParams","searchParams","opt_hashParams","url","unwrap","parts","URL_PARAM_PARSER_","exec","urlBase","urlSearch","urlHash","createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse","stringifyParams_","DEBUG","goog.html.TrustedResourceUrl.prototype.toString","goog.html.TrustedResourceUrl.unwrap","trustedResourceUrl","unwrapTrustedScriptURL","goog.html.TrustedResourceUrl.unwrapTrustedScriptURL","constructor","asserts","fail","typeOf","format","goog.html.TrustedResourceUrl.format","args","formatStr","string","Const","BASE_URL_","test","Error","result","replace","FORMAT_MARKER_","match","id","Object","hasOwnProperty","call","JSON","stringify","arg","encodeURIComponent","String","RegExp","formatWithParams","goog.html.TrustedResourceUrl.formatWithParams","fromConstant","goog.html.TrustedResourceUrl.fromConstant","fromConstants","goog.html.TrustedResourceUrl.fromConstants","unwrapped","i","length","goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse","value","trustedtypes","PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY","createScriptURL","goog.html.TrustedResourceUrl.stringifyParams_","prefix","currentString","params","key","outputValues","isArray","outputValue"]
}
