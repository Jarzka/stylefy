{"version":3,"sources":["stylefy/examples/grid.cljs"],"mappings":";;;;;AAKA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKA,AAIyCC,AASqBA;AAGnE,AAAA,AAAMC,AAAkBC;AAAxB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACqBA,AAGWF;;AAMhC,AAAA,AAAMG;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACQ,AAACC,AAAUL,AACV,AAACK,AAAU,AAAA,AAACH,AACZ,AAACG,AAAU,AAAA,AAACH,AACZ,AAACG,AAAU,AAAA,AAACH,AACZ,AAACG,AAAU,AAAA,AAACH,AACZ,AAACG,AAAU,AAAA,AAACH,AACZ,AAACG,AAAU,AAAA,AAACH,AACZ,AAACG,AAAU,AAAA,AAACH","names":["stylefy.examples.grid/grid-style","stylefy.examples.styles/phone-width","stylefy.examples.grid/create-box-style","color","stylefy.examples.grid/grid","stylefy.core.use_style"],"sourcesContent":["(ns stylefy.examples.grid\n  (:require [reagent.core :as r]\n            [stylefy.core :as stylefy :refer [use-style use-sub-style]]\n            [stylefy.examples.styles :as styles]))\n\n(def grid-style {; Default style uses Flexbox as fallback\n                 :display \"flex\"\n                 :flex-direction \"row\"\n                 :flex-wrap \"wrap\"\n                 ::stylefy/media {{:max-width styles/phone-width}\n                                  {:display \"block\"}}\n                 ; Use CSS Grid style if it is supported by the browser.\n                 ; If the browser does not support CSS Grid or feature queries at all, this\n                 ; block is simply ignored.\n                 ::stylefy/supports {\"display: grid\"\n                                     {:display \"grid\"\n                                      :grid-template-columns \"1fr 1fr 1fr\"\n                                      ; Make CSS Grid responsive\n                                      ::stylefy/media {{:max-width styles/phone-width}\n                                                       {:grid-template-columns \"1fr\"}}}}})\n\n(defn create-box-style [color]\n  {:background-color color\n   :width \"33.333%\"\n   :height \"200px\"\n   ::stylefy/media {{:max-width styles/phone-width}\n                    {:width \"100%\"}}\n   ::stylefy/supports {\"display: grid\"\n                       ; Element width is always well managed by grid.\n                       {:width \"auto\"}}})\n\n(defn grid []\n  [:div (use-style grid-style)\n   [:div (use-style (create-box-style \"#000000\"))]\n   [:div (use-style (create-box-style \"#AA0000\"))]\n   [:div (use-style (create-box-style \"#00AA00\"))]\n   [:div (use-style (create-box-style \"#0000AA\"))]\n   [:div (use-style (create-box-style \"#00AAAA\"))]\n   [:div (use-style (create-box-style \"#AAAA00\"))]\n   [:div (use-style (create-box-style \"#AA00AA\"))]])"]}