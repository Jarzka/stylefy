{
"version":3,
"file":"goog.events.eventtarget.js",
"lineCount":177,
"mappings":"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",
"sources":["goog/events/eventtarget.js"],
"sourcesContent":["// Copyright 2005 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview A disposable implementation of a custom\n * listenable/event target. See also: documentation for\n * `goog.events.Listenable`.\n *\n * @author arv@google.com (Erik Arvidsson) [Original implementation]\n * @see ../demos/eventtarget.html\n * @see goog.events.Listenable\n */\n\ngoog.provide('goog.events.EventTarget');\n\ngoog.require('goog.Disposable');\ngoog.require('goog.asserts');\ngoog.require('goog.events');\ngoog.require('goog.events.Event');\ngoog.require('goog.events.Listenable');\ngoog.require('goog.events.ListenerMap');\ngoog.require('goog.object');\n\n\n\n/**\n * An implementation of `goog.events.Listenable` with full W3C\n * EventTarget-like support (capture/bubble mechanism, stopping event\n * propagation, preventing default actions).\n *\n * You may subclass this class to turn your class into a Listenable.\n *\n * Unless propagation is stopped, an event dispatched by an\n * EventTarget will bubble to the parent returned by\n * `getParentEventTarget`. To set the parent, call\n * `setParentEventTarget`. Subclasses that don't support\n * changing the parent can override the setter to throw an error.\n *\n * Example usage:\n * <pre>\n *   var source = new goog.events.EventTarget();\n *   function handleEvent(e) {\n *     alert('Type: ' + e.type + '; Target: ' + e.target);\n *   }\n *   source.listen('foo', handleEvent);\n *   // Or: goog.events.listen(source, 'foo', handleEvent);\n *   ...\n *   source.dispatchEvent('foo');  // will call handleEvent\n *   ...\n *   source.unlisten('foo', handleEvent);\n *   // Or: goog.events.unlisten(source, 'foo', handleEvent);\n * </pre>\n *\n * @constructor\n * @extends {goog.Disposable}\n * @implements {goog.events.Listenable}\n */\ngoog.events.EventTarget = function() {\n  goog.Disposable.call(this);\n\n  /**\n   * Maps of event type to an array of listeners.\n   * @private {!goog.events.ListenerMap}\n   */\n  this.eventTargetListeners_ = new goog.events.ListenerMap(this);\n\n  /**\n   * The object to use for event.target. Useful when mixing in an\n   * EventTarget to another object.\n   * @private {!Object}\n   */\n  this.actualEventTarget_ = this;\n\n  /**\n   * Parent event target, used during event bubbling.\n   *\n   * TODO(chrishenry): Change this to goog.events.Listenable. This\n   * currently breaks people who expect getParentEventTarget to return\n   * goog.events.EventTarget.\n   *\n   * @private {?goog.events.EventTarget}\n   */\n  this.parentEventTarget_ = null;\n};\ngoog.inherits(goog.events.EventTarget, goog.Disposable);\ngoog.events.Listenable.addImplementation(goog.events.EventTarget);\n\n\n/**\n * An artificial cap on the number of ancestors you can have. This is mainly\n * for loop detection.\n * @const {number}\n * @private\n */\ngoog.events.EventTarget.MAX_ANCESTORS_ = 1000;\n\n\n/**\n * Returns the parent of this event target to use for bubbling.\n *\n * @return {goog.events.EventTarget} The parent EventTarget or null if\n *     there is no parent.\n * @override\n */\ngoog.events.EventTarget.prototype.getParentEventTarget = function() {\n  return this.parentEventTarget_;\n};\n\n\n/**\n * Sets the parent of this event target to use for capture/bubble\n * mechanism.\n * @param {goog.events.EventTarget} parent Parent listenable (null if none).\n */\ngoog.events.EventTarget.prototype.setParentEventTarget = function(parent) {\n  this.parentEventTarget_ = parent;\n};\n\n\n/**\n * Adds an event listener to the event target. The same handler can only be\n * added once per the type. Even if you add the same handler multiple times\n * using the same type then it will only be called once when the event is\n * dispatched.\n *\n * @param {string|!goog.events.EventId} type The type of the event to listen for\n * @param {function(?):?|{handleEvent:function(?):?}|null} handler The function\n *     to handle the event. The handler can also be an object that implements\n *     the handleEvent method which takes the event object as argument.\n * @param {boolean=} opt_capture In DOM-compliant browsers, this determines\n *     whether the listener is fired during the capture or bubble phase\n *     of the event.\n * @param {Object=} opt_handlerScope Object in whose scope to call\n *     the listener.\n * @deprecated Use `#listen` instead, when possible. Otherwise, use\n *     `goog.events.listen` if you are passing Object\n *     (instead of Function) as handler.\n */\ngoog.events.EventTarget.prototype.addEventListener = function(\n    type, handler, opt_capture, opt_handlerScope) {\n  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);\n};\n\n\n/**\n * Removes an event listener from the event target. The handler must be the\n * same object as the one added. If the handler has not been added then\n * nothing is done.\n *\n * @param {string} type The type of the event to listen for.\n * @param {function(?):?|{handleEvent:function(?):?}|null} handler The function\n *     to handle the event. The handler can also be an object that implements\n *     the handleEvent method which takes the event object as argument.\n * @param {boolean=} opt_capture In DOM-compliant browsers, this determines\n *     whether the listener is fired during the capture or bubble phase\n *     of the event.\n * @param {Object=} opt_handlerScope Object in whose scope to call\n *     the listener.\n * @deprecated Use `#unlisten` instead, when possible. Otherwise, use\n *     `goog.events.unlisten` if you are passing Object\n *     (instead of Function) as handler.\n */\ngoog.events.EventTarget.prototype.removeEventListener = function(\n    type, handler, opt_capture, opt_handlerScope) {\n  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.dispatchEvent = function(e) {\n  this.assertInitialized_();\n\n  var ancestorsTree, ancestor = this.getParentEventTarget();\n  if (ancestor) {\n    ancestorsTree = [];\n    var ancestorCount = 1;\n    for (; ancestor; ancestor = ancestor.getParentEventTarget()) {\n      ancestorsTree.push(ancestor);\n      goog.asserts.assert(\n          (++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_),\n          'infinite loop');\n    }\n  }\n\n  return goog.events.EventTarget.dispatchEventInternal_(\n      this.actualEventTarget_, e, ancestorsTree);\n};\n\n\n/**\n * Removes listeners from this object.  Classes that extend EventTarget may\n * need to override this method in order to remove references to DOM Elements\n * and additional listeners.\n * @override\n * @protected\n */\ngoog.events.EventTarget.prototype.disposeInternal = function() {\n  goog.events.EventTarget.superClass_.disposeInternal.call(this);\n\n  this.removeAllListeners();\n  this.parentEventTarget_ = null;\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.listen = function(\n    type, listener, opt_useCapture, opt_listenerScope) {\n  this.assertInitialized_();\n  return this.eventTargetListeners_.add(\n      String(type), listener, false /* callOnce */, opt_useCapture,\n      opt_listenerScope);\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.listenOnce = function(\n    type, listener, opt_useCapture, opt_listenerScope) {\n  return this.eventTargetListeners_.add(\n      String(type), listener, true /* callOnce */, opt_useCapture,\n      opt_listenerScope);\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.unlisten = function(\n    type, listener, opt_useCapture, opt_listenerScope) {\n  return this.eventTargetListeners_.remove(\n      String(type), listener, opt_useCapture, opt_listenerScope);\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.unlistenByKey = function(key) {\n  return this.eventTargetListeners_.removeByKey(key);\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {\n  // TODO(chrishenry): Previously, removeAllListeners can be called on\n  // uninitialized EventTarget, so we preserve that behavior. We\n  // should remove this when usages that rely on that fact are purged.\n  if (!this.eventTargetListeners_) {\n    return 0;\n  }\n  return this.eventTargetListeners_.removeAll(opt_type);\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.fireListeners = function(\n    type, capture, eventObject) {\n  // TODO(chrishenry): Original code avoids array creation when there\n  // is no listener, so we do the same. If this optimization turns\n  // out to be not required, we can replace this with\n  // getListeners(type, capture) instead, which is simpler.\n  var listenerArray = this.eventTargetListeners_.listeners[String(type)];\n  if (!listenerArray) {\n    return true;\n  }\n  listenerArray = listenerArray.concat();\n\n  var rv = true;\n  for (var i = 0; i < listenerArray.length; ++i) {\n    var listener = listenerArray[i];\n    // We might not have a listener if the listener was removed.\n    if (listener && !listener.removed && listener.capture == capture) {\n      var listenerFn = listener.listener;\n      var listenerHandler = listener.handler || listener.src;\n\n      if (listener.callOnce) {\n        this.unlistenByKey(listener);\n      }\n      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;\n    }\n  }\n\n  return rv && eventObject.returnValue_ != false;\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.getListeners = function(type, capture) {\n  return this.eventTargetListeners_.getListeners(String(type), capture);\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.getListener = function(\n    type, listener, capture, opt_listenerScope) {\n  return this.eventTargetListeners_.getListener(\n      String(type), listener, capture, opt_listenerScope);\n};\n\n\n/** @override */\ngoog.events.EventTarget.prototype.hasListener = function(\n    opt_type, opt_capture) {\n  var id = (opt_type !== undefined) ? String(opt_type) : undefined;\n  return this.eventTargetListeners_.hasListener(id, opt_capture);\n};\n\n\n/**\n * Sets the target to be used for `event.target` when firing\n * event. Mainly used for testing. For example, see\n * `goog.testing.events.mixinListenable`.\n * @param {!Object} target The target.\n */\ngoog.events.EventTarget.prototype.setTargetForTesting = function(target) {\n  this.actualEventTarget_ = target;\n};\n\n\n/**\n * Asserts that the event target instance is initialized properly.\n * @private\n */\ngoog.events.EventTarget.prototype.assertInitialized_ = function() {\n  goog.asserts.assert(\n      this.eventTargetListeners_,\n      'Event target is not initialized. Did you call the superclass ' +\n          '(goog.events.EventTarget) constructor?');\n};\n\n\n/**\n * Dispatches the given event on the ancestorsTree.\n *\n * @param {!Object} target The target to dispatch on.\n * @param {goog.events.Event|Object|string} e The event object.\n * @param {Array<goog.events.Listenable>=} opt_ancestorsTree The ancestors\n *     tree of the target, in reverse order from the closest ancestor\n *     to the root event target. May be null if the target has no ancestor.\n * @return {boolean} If anyone called preventDefault on the event object (or\n *     if any of the listeners returns false) this will also return false.\n * @private\n */\ngoog.events.EventTarget.dispatchEventInternal_ = function(\n    target, e, opt_ancestorsTree) {\n  /** @suppress {missingProperties} */\n  var type = e.type || /** @type {string} */ (e);\n\n  // If accepting a string or object, create a custom event object so that\n  // preventDefault and stopPropagation work with the event.\n  if (typeof e === 'string') {\n    e = new goog.events.Event(e, target);\n  } else if (!(e instanceof goog.events.Event)) {\n    var oldEvent = e;\n    e = new goog.events.Event(type, target);\n    goog.object.extend(e, oldEvent);\n  } else {\n    e.target = e.target || target;\n  }\n\n  var rv = true, currentTarget;\n\n  // Executes all capture listeners on the ancestors, if any.\n  if (opt_ancestorsTree) {\n    for (var i = opt_ancestorsTree.length - 1; !e.propagationStopped_ && i >= 0;\n         i--) {\n      currentTarget = e.currentTarget = opt_ancestorsTree[i];\n      rv = currentTarget.fireListeners(type, true, e) && rv;\n    }\n  }\n\n  // Executes capture and bubble listeners on the target.\n  if (!e.propagationStopped_) {\n    currentTarget = /** @type {?} */ (e.currentTarget = target);\n    rv = currentTarget.fireListeners(type, true, e) && rv;\n    if (!e.propagationStopped_) {\n      rv = currentTarget.fireListeners(type, false, e) && rv;\n    }\n  }\n\n  // Executes all bubble listeners on the ancestors, if any.\n  if (opt_ancestorsTree) {\n    for (i = 0; !e.propagationStopped_ && i < opt_ancestorsTree.length; i++) {\n      currentTarget = e.currentTarget = opt_ancestorsTree[i];\n      rv = currentTarget.fireListeners(type, false, e) && rv;\n    }\n  }\n\n  return rv;\n};\n"],
"names":["goog","provide","require","events","EventTarget","goog.events.EventTarget","Disposable","call","eventTargetListeners_","ListenerMap","actualEventTarget_","parentEventTarget_","inherits","Listenable","addImplementation","MAX_ANCESTORS_","prototype","getParentEventTarget","goog.events.EventTarget.prototype.getParentEventTarget","setParentEventTarget","goog.events.EventTarget.prototype.setParentEventTarget","parent","addEventListener","goog.events.EventTarget.prototype.addEventListener","type","handler","opt_capture","opt_handlerScope","listen","removeEventListener","goog.events.EventTarget.prototype.removeEventListener","unlisten","dispatchEvent","goog.events.EventTarget.prototype.dispatchEvent","e","assertInitialized_","ancestorsTree","ancestor","ancestorCount","push","asserts","assert","dispatchEventInternal_","disposeInternal","goog.events.EventTarget.prototype.disposeInternal","superClass_","removeAllListeners","goog.events.EventTarget.prototype.listen","listener","opt_useCapture","opt_listenerScope","add","String","listenOnce","goog.events.EventTarget.prototype.listenOnce","goog.events.EventTarget.prototype.unlisten","remove","unlistenByKey","goog.events.EventTarget.prototype.unlistenByKey","key","removeByKey","goog.events.EventTarget.prototype.removeAllListeners","opt_type","removeAll","fireListeners","goog.events.EventTarget.prototype.fireListeners","capture","eventObject","listenerArray","listeners","concat","rv","i","length","removed","listenerFn","listenerHandler","src","callOnce","returnValue_","getListeners","goog.events.EventTarget.prototype.getListeners","getListener","goog.events.EventTarget.prototype.getListener","hasListener","goog.events.EventTarget.prototype.hasListener","id","undefined","setTargetForTesting","goog.events.EventTarget.prototype.setTargetForTesting","target","goog.events.EventTarget.prototype.assertInitialized_","goog.events.EventTarget.dispatchEventInternal_","opt_ancestorsTree","Event","oldEvent","object","extend","currentTarget","propagationStopped_"]
}
