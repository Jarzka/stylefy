{
"version":3,
"file":"goog.useragent.useragent.js",
"lineCount":194,
"mappings":"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",
"sources":["goog/useragent/useragent.js"],
"sourcesContent":["// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Rendering engine detection.\n * @see <a href=\"http://www.useragentstring.com/\">User agent strings</a>\n * For information on the browser brand (such as Safari versus Chrome), see\n * goog.userAgent.product.\n * @author arv@google.com (Erik Arvidsson)\n * @see ../demos/useragent.html\n */\n\ngoog.provide('goog.userAgent');\n\ngoog.require('goog.labs.userAgent.browser');\ngoog.require('goog.labs.userAgent.engine');\ngoog.require('goog.labs.userAgent.platform');\ngoog.require('goog.labs.userAgent.util');\ngoog.require('goog.reflect');\ngoog.require('goog.string');\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is IE.\n */\ngoog.userAgent.ASSUME_IE = goog.define('goog.userAgent.ASSUME_IE', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is EDGE,\n * referring to EdgeHTML based Edge.\n */\ngoog.userAgent.ASSUME_EDGE = goog.define('goog.userAgent.ASSUME_EDGE', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is GECKO.\n */\ngoog.userAgent.ASSUME_GECKO = goog.define('goog.userAgent.ASSUME_GECKO', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is WEBKIT.\n */\ngoog.userAgent.ASSUME_WEBKIT =\n    goog.define('goog.userAgent.ASSUME_WEBKIT', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is a\n *     mobile device running WebKit e.g. iPhone or Android.\n */\ngoog.userAgent.ASSUME_MOBILE_WEBKIT =\n    goog.define('goog.userAgent.ASSUME_MOBILE_WEBKIT', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is OPERA,\n * referring to Presto-based Opera.\n */\ngoog.userAgent.ASSUME_OPERA = goog.define('goog.userAgent.ASSUME_OPERA', false);\n\n\n/**\n * @define {boolean} Whether the\n *     `goog.userAgent.isVersionOrHigher`\n *     function will return true for any version.\n */\ngoog.userAgent.ASSUME_ANY_VERSION =\n    goog.define('goog.userAgent.ASSUME_ANY_VERSION', false);\n\n\n/**\n * Whether we know the browser engine at compile-time.\n * @type {boolean}\n * @private\n */\ngoog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE ||\n    goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO ||\n    goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT ||\n    goog.userAgent.ASSUME_OPERA;\n\n\n/**\n * Returns the userAgent string for the current browser.\n *\n * @return {string} The userAgent string.\n */\ngoog.userAgent.getUserAgentString = function() {\n  return goog.labs.userAgent.util.getUserAgent();\n};\n\n\n/**\n * @return {?Navigator} The native navigator object.\n */\ngoog.userAgent.getNavigatorTyped = function() {\n  // Need a local navigator reference instead of using the global one,\n  // to avoid the rare case where they reference different objects.\n  // (in a WorkerPool, for example).\n  return goog.global['navigator'] || null;\n};\n\n\n/**\n * TODO(nnaze): Change type to \"Navigator\" and update compilation targets.\n * @return {?Object} The native navigator object.\n */\ngoog.userAgent.getNavigator = function() {\n  return goog.userAgent.getNavigatorTyped();\n};\n\n\n/**\n * Whether the user agent is Presto-based Opera.\n * @type {boolean}\n */\ngoog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_OPERA :\n    goog.labs.userAgent.browser.isOpera();\n\n\n/**\n * Whether the user agent is Internet Explorer.\n * @type {boolean}\n */\ngoog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_IE :\n    goog.labs.userAgent.browser.isIE();\n\n\n/**\n * Whether the user agent is Microsoft Edge (EdgeHTML based).\n * @type {boolean}\n */\ngoog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_EDGE :\n    goog.labs.userAgent.engine.isEdge();\n\n\n/**\n * Whether the user agent is MS Internet Explorer or MS Edge (EdgeHTML based).\n * @type {boolean}\n */\ngoog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;\n\n\n/**\n * Whether the user agent is Gecko. Gecko is the rendering engine used by\n * Mozilla, Firefox, and others.\n * @type {boolean}\n */\ngoog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_GECKO :\n    goog.labs.userAgent.engine.isGecko();\n\n\n/**\n * Whether the user agent is WebKit. WebKit is the rendering engine that\n * Safari, Edge Chromium, Opera Chromium, Android and others use.\n * @type {boolean}\n */\ngoog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT :\n    goog.labs.userAgent.engine.isWebKit();\n\n\n/**\n * Whether the user agent is running on a mobile device.\n *\n * This is a separate function so that the logic can be tested.\n *\n * TODO(nnaze): Investigate swapping in goog.labs.userAgent.device.isMobile().\n *\n * @return {boolean} Whether the user agent is running on a mobile device.\n * @private\n */\ngoog.userAgent.isMobile_ = function() {\n  return goog.userAgent.WEBKIT &&\n      goog.labs.userAgent.util.matchUserAgent('Mobile');\n};\n\n\n/**\n * Whether the user agent is running on a mobile device.\n *\n * TODO(nnaze): Consider deprecating MOBILE when labs.userAgent\n *   is promoted as the gecko/webkit logic is likely inaccurate.\n *\n * @type {boolean}\n */\ngoog.userAgent.MOBILE =\n    goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();\n\n\n/**\n * Used while transitioning code to use WEBKIT instead.\n * @type {boolean}\n * @deprecated Use {@link goog.userAgent.product.SAFARI} instead.\n * TODO(nicksantos): Delete this from goog.userAgent.\n */\ngoog.userAgent.SAFARI = goog.userAgent.WEBKIT;\n\n\n/**\n * @return {string} the platform (operating system) the user agent is running\n *     on. Default to empty string because navigator.platform may not be defined\n *     (on Rhino, for example).\n * @private\n */\ngoog.userAgent.determinePlatform_ = function() {\n  var navigator = goog.userAgent.getNavigatorTyped();\n  return navigator && navigator.platform || '';\n};\n\n\n/**\n * The platform (operating system) the user agent is running on. Default to\n * empty string because navigator.platform may not be defined (on Rhino, for\n * example).\n * @type {string}\n */\ngoog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();\n\n\n/**\n * @define {boolean} Whether the user agent is running on a Macintosh operating\n *     system.\n */\ngoog.userAgent.ASSUME_MAC = goog.define('goog.userAgent.ASSUME_MAC', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on a Windows operating\n *     system.\n */\ngoog.userAgent.ASSUME_WINDOWS =\n    goog.define('goog.userAgent.ASSUME_WINDOWS', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on a Linux operating\n *     system.\n */\ngoog.userAgent.ASSUME_LINUX = goog.define('goog.userAgent.ASSUME_LINUX', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on a X11 windowing\n *     system.\n */\ngoog.userAgent.ASSUME_X11 = goog.define('goog.userAgent.ASSUME_X11', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on Android.\n */\ngoog.userAgent.ASSUME_ANDROID =\n    goog.define('goog.userAgent.ASSUME_ANDROID', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on an iPhone.\n */\ngoog.userAgent.ASSUME_IPHONE =\n    goog.define('goog.userAgent.ASSUME_IPHONE', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on an iPad.\n */\ngoog.userAgent.ASSUME_IPAD = goog.define('goog.userAgent.ASSUME_IPAD', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on an iPod.\n */\ngoog.userAgent.ASSUME_IPOD = goog.define('goog.userAgent.ASSUME_IPOD', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on KaiOS.\n */\ngoog.userAgent.ASSUME_KAIOS = goog.define('goog.userAgent.ASSUME_KAIOS', false);\n\n/**\n * @define {boolean} Whether the user agent is running on Go2Phone.\n */\ngoog.userAgent.ASSUME_GO2PHONE =\n    goog.define('goog.userAgent.ASSUME_GO2PHONE', false);\n\n\n/**\n * @type {boolean}\n * @private\n */\ngoog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC ||\n    goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX ||\n    goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID ||\n    goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD ||\n    goog.userAgent.ASSUME_IPOD;\n\n\n/**\n * Whether the user agent is running on a Macintosh operating system.\n * @type {boolean}\n */\ngoog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_MAC :\n    goog.labs.userAgent.platform.isMacintosh();\n\n\n/**\n * Whether the user agent is running on a Windows operating system.\n * @type {boolean}\n */\ngoog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_WINDOWS :\n    goog.labs.userAgent.platform.isWindows();\n\n\n/**\n * Whether the user agent is Linux per the legacy behavior of\n * goog.userAgent.LINUX, which considered ChromeOS to also be\n * Linux.\n * @return {boolean}\n * @private\n */\ngoog.userAgent.isLegacyLinux_ = function() {\n  return goog.labs.userAgent.platform.isLinux() ||\n      goog.labs.userAgent.platform.isChromeOS();\n};\n\n\n/**\n * Whether the user agent is running on a Linux operating system.\n *\n * Note that goog.userAgent.LINUX considers ChromeOS to be Linux,\n * while goog.labs.userAgent.platform considers ChromeOS and\n * Linux to be different OSes.\n *\n * @type {boolean}\n */\ngoog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_LINUX :\n    goog.userAgent.isLegacyLinux_();\n\n\n/**\n * @return {boolean} Whether the user agent is an X11 windowing system.\n * @private\n */\ngoog.userAgent.isX11_ = function() {\n  var navigator = goog.userAgent.getNavigatorTyped();\n  return !!navigator &&\n      goog.string.contains(navigator['appVersion'] || '', 'X11');\n};\n\n\n/**\n * Whether the user agent is running on a X11 windowing system.\n * @type {boolean}\n */\ngoog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_X11 :\n    goog.userAgent.isX11_();\n\n\n/**\n * Whether the user agent is running on Android.\n * @type {boolean}\n */\ngoog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_ANDROID :\n    goog.labs.userAgent.platform.isAndroid();\n\n\n/**\n * Whether the user agent is running on an iPhone.\n * @type {boolean}\n */\ngoog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_IPHONE :\n    goog.labs.userAgent.platform.isIphone();\n\n\n/**\n * Whether the user agent is running on an iPad.\n * @type {boolean}\n */\ngoog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_IPAD :\n    goog.labs.userAgent.platform.isIpad();\n\n\n/**\n * Whether the user agent is running on an iPod.\n * @type {boolean}\n */\ngoog.userAgent.IPOD = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_IPOD :\n    goog.labs.userAgent.platform.isIpod();\n\n\n/**\n * Whether the user agent is running on iOS.\n * @type {boolean}\n */\ngoog.userAgent.IOS = goog.userAgent.PLATFORM_KNOWN_ ?\n    (goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD ||\n     goog.userAgent.ASSUME_IPOD) :\n    goog.labs.userAgent.platform.isIos();\n\n/**\n * Whether the user agent is running on KaiOS.\n * @type {boolean}\n */\ngoog.userAgent.KAIOS = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_KAIOS :\n    goog.labs.userAgent.platform.isKaiOS();\n\n/**\n * Whether the user agent is running on Go2Phone.\n * @type {boolean}\n */\ngoog.userAgent.GO2PHONE = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_GO2PHONE :\n    goog.labs.userAgent.platform.isGo2Phone();\n\n\n/**\n * @return {string} The string that describes the version number of the user\n *     agent.\n * @private\n */\ngoog.userAgent.determineVersion_ = function() {\n  // All browsers have different ways to detect the version and they all have\n  // different naming schemes.\n  // version is a string rather than a number because it may contain 'b', 'a',\n  // and so on.\n  var version = '';\n  var arr = goog.userAgent.getVersionRegexResult_();\n  if (arr) {\n    version = arr ? arr[1] : '';\n  }\n\n  if (goog.userAgent.IE) {\n    // IE9 can be in document mode 9 but be reporting an inconsistent user agent\n    // version.  If it is identifying as a version lower than 9 we take the\n    // documentMode as the version instead.  IE8 has similar behavior.\n    // It is recommended to set the X-UA-Compatible header to ensure that IE9\n    // uses documentMode 9.\n    var docMode = goog.userAgent.getDocumentMode_();\n    if (docMode != null && docMode > parseFloat(version)) {\n      return String(docMode);\n    }\n  }\n\n  return version;\n};\n\n\n/**\n * @return {?IArrayLike<string>|undefined} The version regex matches from\n *     parsing the user\n *     agent string. These regex statements must be executed inline so they can\n *     be compiled out by the closure compiler with the rest of the useragent\n *     detection logic when ASSUME_* is specified.\n * @private\n */\ngoog.userAgent.getVersionRegexResult_ = function() {\n  var userAgent = goog.userAgent.getUserAgentString();\n  if (goog.userAgent.GECKO) {\n    return /rv\\:([^\\);]+)(\\)|;)/.exec(userAgent);\n  }\n  if (goog.userAgent.EDGE) {\n    return /Edge\\/([\\d\\.]+)/.exec(userAgent);\n  }\n  if (goog.userAgent.IE) {\n    return /\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(userAgent);\n  }\n  if (goog.userAgent.WEBKIT) {\n    // WebKit/125.4\n    return /WebKit\\/(\\S+)/.exec(userAgent);\n  }\n  if (goog.userAgent.OPERA) {\n    // If none of the above browsers were detected but the browser is Opera, the\n    // only string that is of interest is 'Version/<number>'.\n    return /(?:Version)[ \\/]?(\\S+)/.exec(userAgent);\n  }\n  return undefined;\n};\n\n\n/**\n * @return {number|undefined} Returns the document mode (for testing).\n * @private\n */\ngoog.userAgent.getDocumentMode_ = function() {\n  // NOTE(user): goog.userAgent may be used in context where there is no DOM.\n  var doc = goog.global['document'];\n  return doc ? doc['documentMode'] : undefined;\n};\n\n\n/**\n * The version of the user agent. This is a string because it might contain\n * 'b' (as in beta) as well as multiple dots.\n * @type {string}\n */\ngoog.userAgent.VERSION = goog.userAgent.determineVersion_();\n\n\n/**\n * Compares two version numbers.\n *\n * @param {string} v1 Version of first item.\n * @param {string} v2 Version of second item.\n *\n * @return {number}  1 if first argument is higher\n *                   0 if arguments are equal\n *                  -1 if second argument is higher.\n * @deprecated Use goog.string.compareVersions.\n */\ngoog.userAgent.compare = function(v1, v2) {\n  return goog.string.compareVersions(v1, v2);\n};\n\n\n/**\n * Cache for {@link goog.userAgent.isVersionOrHigher}.\n * Calls to compareVersions are surprisingly expensive and, as a browser's\n * version number is unlikely to change during a session, we cache the results.\n * @const\n * @private\n */\ngoog.userAgent.isVersionOrHigherCache_ = {};\n\n\n/**\n * Whether the user agent version is higher or the same as the given version.\n * NOTE: When checking the version numbers for Firefox and Safari, be sure to\n * use the engine's version, not the browser's version number.  For example,\n * Firefox 3.0 corresponds to Gecko 1.9 and Safari 3.0 to Webkit 522.11.\n * Opera and Internet Explorer versions match the product release number.<br>\n * @see <a href=\"http://en.wikipedia.org/wiki/Safari_version_history\">\n *     Webkit</a>\n * @see <a href=\"http://en.wikipedia.org/wiki/Gecko_engine\">Gecko</a>\n *\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the user agent version is higher or the same as\n *     the given version.\n */\ngoog.userAgent.isVersionOrHigher = function(version) {\n  return goog.userAgent.ASSUME_ANY_VERSION ||\n      goog.reflect.cache(\n          goog.userAgent.isVersionOrHigherCache_, version, function() {\n            return goog.string.compareVersions(\n                       goog.userAgent.VERSION, version) >= 0;\n          });\n};\n\n\n/**\n * Deprecated alias to `goog.userAgent.isVersionOrHigher`.\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the user agent version is higher or the same as\n *     the given version.\n * @deprecated Use goog.userAgent.isVersionOrHigher().\n */\ngoog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;\n\n\n/**\n * Whether the IE effective document mode is higher or the same as the given\n * document mode version.\n * NOTE: Only for IE, return false for another browser.\n *\n * @param {number} documentMode The document mode version to check.\n * @return {boolean} Whether the IE effective document mode is higher or the\n *     same as the given version.\n */\ngoog.userAgent.isDocumentModeOrHigher = function(documentMode) {\n  return Number(goog.userAgent.DOCUMENT_MODE) >= documentMode;\n};\n\n\n/**\n * Deprecated alias to `goog.userAgent.isDocumentModeOrHigher`.\n * @param {number} version The version to check.\n * @return {boolean} Whether the IE effective document mode is higher or the\n *      same as the given version.\n * @deprecated Use goog.userAgent.isDocumentModeOrHigher().\n */\ngoog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;\n\n\n/**\n * For IE version < 7, documentMode is undefined, so attempt to use the\n * CSS1Compat property to see if we are in standards mode. If we are in\n * standards mode, treat the browser version as the document mode. Otherwise,\n * IE is emulating version 5.\n *\n * NOTE(2019/05/31): Support for IE < 7 is long gone, so this is now simplified.\n * It returns document.documentMode for IE and undefined for everything else.\n *\n * @type {number|undefined}\n * @const\n */\ngoog.userAgent.DOCUMENT_MODE = (function() {\n  var doc = goog.global['document'];\n  if (!doc || !goog.userAgent.IE) {\n    return undefined;\n  }\n  return goog.userAgent.getDocumentMode_();\n})();\n"],
"names":["goog","provide","require","userAgent","ASSUME_IE","define","ASSUME_EDGE","ASSUME_GECKO","ASSUME_WEBKIT","ASSUME_MOBILE_WEBKIT","ASSUME_OPERA","ASSUME_ANY_VERSION","BROWSER_KNOWN_","getUserAgentString","goog.userAgent.getUserAgentString","labs","util","getUserAgent","getNavigatorTyped","goog.userAgent.getNavigatorTyped","global","getNavigator","goog.userAgent.getNavigator","OPERA","browser","isOpera","IE","isIE","EDGE","engine","isEdge","EDGE_OR_IE","GECKO","isGecko","WEBKIT","isWebKit","isMobile_","goog.userAgent.isMobile_","matchUserAgent","MOBILE","SAFARI","determinePlatform_","goog.userAgent.determinePlatform_","navigator","platform","PLATFORM","ASSUME_MAC","ASSUME_WINDOWS","ASSUME_LINUX","ASSUME_X11","ASSUME_ANDROID","ASSUME_IPHONE","ASSUME_IPAD","ASSUME_IPOD","ASSUME_KAIOS","ASSUME_GO2PHONE","PLATFORM_KNOWN_","MAC","isMacintosh","WINDOWS","isWindows","isLegacyLinux_","goog.userAgent.isLegacyLinux_","isLinux","isChromeOS","LINUX","isX11_","goog.userAgent.isX11_","string","contains","X11","ANDROID","isAndroid","IPHONE","isIphone","IPAD","isIpad","IPOD","isIpod","IOS","isIos","KAIOS","isKaiOS","GO2PHONE","isGo2Phone","determineVersion_","goog.userAgent.determineVersion_","version","arr","getVersionRegexResult_","docMode","getDocumentMode_","parseFloat","String","goog.userAgent.getVersionRegexResult_","exec","undefined","goog.userAgent.getDocumentMode_","doc","VERSION","compare","goog.userAgent.compare","v1","v2","compareVersions","isVersionOrHigherCache_","isVersionOrHigher","goog.userAgent.isVersionOrHigher","reflect","cache","isVersion","isDocumentModeOrHigher","goog.userAgent.isDocumentModeOrHigher","documentMode","Number","DOCUMENT_MODE","isDocumentMode"]
}
