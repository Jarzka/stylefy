{"version":3,"sources":["stylefy/examples/main.cljs"],"mappings":";;;;;;;;;AAYA,AAAA,AAAAA,AAAAC,AAAA,AAAUM;AAAV,AAAA,AAAA,AAAAL,AACQ,AAAA,AAAA,AAAA,AAACO;AADT,AAAA,AAAAN,AAAA,AAAA,AAAA,AAAAC,AAAAF,AAAA,AAAAG,AAAAH,AAAA,AAAA,AAAA,AAAAE,AAAAF,AAAA,AAAA,AAAA,AAAA,AAAAI,AAAAJ,AAAA;AAAA,AAAA,AAAiBM;AAIjB,AAAA,AAAeE;AAAf,AACE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AACmB,AAACC,AAImB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAGxC,AAACC,AAAU,AAACN,AAAM,AAAA,AAAiBO","names":["rum.core/lazy-build","rum.core/build-defc","attrs28942","daiquiri.core/create-element","cljs.core/map?","daiquiri.interpreter/element-attributes","daiquiri.interpreter/interpret","stylefy.examples.main/main","rum.core/reactive","stylefy.core.use_style","stylefy.examples.main/start","stylefy.core.init","stylefy.rum.dom/->RumDom","rum.core/mount","js/document"],"sourcesContent":["(ns stylefy.examples.main\n  (:require\n    [garden.units :as gu]\n    [garden.color :as gc]\n    [rum.core :as rum]\n    [cljs.core.async :refer [<! timeout]]\n    [stylefy.core :as stylefy :refer [use-style sub-style use-sub-style]]\n    [stylefy.cache :as stylefy-cache]\n    [stylefy.rum.dom :as stylefy-rum-dom])\n  (:require-macros [cljs.core.async.macros :refer [go]]\n                   [garden.def :refer [defcssfn]]))\n\n(rum/defc main < rum/reactive []\n  [:div (use-style {:color \"green\"})\n   \"Rum is running!\"])\n\n(defn ^:export start []\n  (stylefy/init {:use-caching? false  ; TODO For testing...\n                 :dom (stylefy-rum-dom/->RumDom)\n                 ;:multi-instance {:base-node nil\n                 ;                 :instance-id \"example\"}\n                 :use-custom-class-prefix? true\n                 :cache-options {:expires (* 1 60 60 24 7)}\n                 :global-vendor-prefixes {::stylefy/vendors [\"webkit\" \"moz\" \"o\"]\n                                          ::stylefy/auto-prefix #{:border-radius}}})\n  (rum/mount (main) (.getElementById js/document \"app\")))\n"]}