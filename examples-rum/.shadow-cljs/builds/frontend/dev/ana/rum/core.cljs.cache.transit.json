["^ ","~:output",["^ ","~:js","goog.provide('rum.core');\ngoog.require('cljs.core');\ngoog.require('cljsjs.react');\ngoog.require('cljsjs.react.dom');\ngoog.require('goog.object');\ngoog.require('goog.functions');\ngoog.require('clojure.set');\ngoog.require('rum.specs');\ngoog.require('daiquiri.core');\ngoog.require('rum.cursor');\ngoog.require('rum.util');\ngoog.require('rum.derived_atom');\n/**\n * Given React component, returns Rum state associated with it.\n */\nrum.core.state = (function rum$core$state(comp){\nreturn goog.object.get(comp.state,\":rum/state\");\n});\nrum.core.extend_BANG_ = (function rum$core$extend_BANG_(obj,props){\nvar seq__28884 = cljs.core.seq(props);\nvar chunk__28886 = null;\nvar count__28887 = (0);\nvar i__28888 = (0);\nwhile(true){\nif((i__28888 < count__28887)){\nvar vec__28896 = chunk__28886.cljs$core$IIndexed$_nth$arity$2(null,i__28888);\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28896,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28896,(1),null);\nif((!((v == null)))){\ngoog.object.set(obj,cljs.core.name(k),cljs.core.clj__GT_js(v));\n\n\nvar G__29053 = seq__28884;\nvar G__29054 = chunk__28886;\nvar G__29055 = count__28887;\nvar G__29056 = (i__28888 + (1));\nseq__28884 = G__29053;\nchunk__28886 = G__29054;\ncount__28887 = G__29055;\ni__28888 = G__29056;\ncontinue;\n} else {\nvar G__29057 = seq__28884;\nvar G__29058 = chunk__28886;\nvar G__29059 = count__28887;\nvar G__29060 = (i__28888 + (1));\nseq__28884 = G__29057;\nchunk__28886 = G__29058;\ncount__28887 = G__29059;\ni__28888 = G__29060;\ncontinue;\n}\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__28884);\nif(temp__5735__auto__){\nvar seq__28884__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__28884__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__28884__$1);\nvar G__29061 = cljs.core.chunk_rest(seq__28884__$1);\nvar G__29062 = c__4550__auto__;\nvar G__29063 = cljs.core.count(c__4550__auto__);\nvar G__29064 = (0);\nseq__28884 = G__29061;\nchunk__28886 = G__29062;\ncount__28887 = G__29063;\ni__28888 = G__29064;\ncontinue;\n} else {\nvar vec__28899 = cljs.core.first(seq__28884__$1);\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28899,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28899,(1),null);\nif((!((v == null)))){\ngoog.object.set(obj,cljs.core.name(k),cljs.core.clj__GT_js(v));\n\n\nvar G__29065 = cljs.core.next(seq__28884__$1);\nvar G__29066 = null;\nvar G__29067 = (0);\nvar G__29068 = (0);\nseq__28884 = G__29065;\nchunk__28886 = G__29066;\ncount__28887 = G__29067;\ni__28888 = G__29068;\ncontinue;\n} else {\nvar G__29069 = cljs.core.next(seq__28884__$1);\nvar G__29070 = null;\nvar G__29071 = (0);\nvar G__29072 = (0);\nseq__28884 = G__29069;\nchunk__28886 = G__29070;\ncount__28887 = G__29071;\ni__28888 = G__29072;\ncontinue;\n}\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\nrum.core.build_class = (function rum$core$build_class(render,mixins,display_name){\nif(goog.DEBUG){\nvar mixins_29073__$1 = cljs.core.set(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.keys,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([mixins], 0)));\nif(clojure.set.subset_QMARK_(mixins_29073__$1,rum.specs.mixins)){\n} else {\nthrow (new Error([\"Assert failed: \",[cljs.core.str.cljs$core$IFn$_invoke$arity$1(display_name),\" declares invalid mixin keys \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(mixins_29073__$1,rum.specs.mixins)),\", \",\"did you mean one of \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(rum.specs.mixins)].join(''),\"\\n\",\"(set/subset? mixins rum.specs/mixins)\"].join('')));\n}\n\ncljs.core.run_BANG_((function (p1__28902_SHARP_){\nreturn console.warn(p1__28902_SHARP_);\n}),cljs.core.vals(cljs.core.select_keys(rum.specs.deprecated_mixins,mixins_29073__$1)));\n} else {\n}\n\nvar init = rum.util.collect(new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),mixins);\nvar before_render = rum.util.collect_STAR_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"will-mount\",\"will-mount\",-434633071),new cljs.core.Keyword(\"unsafe\",\"will-mount\",\"unsafe/will-mount\",265089051),new cljs.core.Keyword(null,\"before-render\",\"before-render\",71256781)], null),mixins);\nvar render__$1 = render;\nvar wrap_render = rum.util.collect(new cljs.core.Keyword(null,\"wrap-render\",\"wrap-render\",1782000986),mixins);\nvar wrapped_render = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__28904_SHARP_,p2__28903_SHARP_){\nreturn (p2__28903_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__28903_SHARP_.cljs$core$IFn$_invoke$arity$1(p1__28904_SHARP_) : p2__28903_SHARP_.call(null,p1__28904_SHARP_));\n}),render__$1,wrap_render);\nvar did_mount = rum.util.collect_STAR_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"did-mount\",\"did-mount\",918232960),new cljs.core.Keyword(null,\"after-render\",\"after-render\",1997533433)], null),mixins);\nvar will_remount = rum.util.collect_STAR_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"did-remount\",\"did-remount\",1362550500),new cljs.core.Keyword(null,\"will-remount\",\"will-remount\",-141604325)], null),mixins);\nvar should_update = rum.util.collect(new cljs.core.Keyword(null,\"should-update\",\"should-update\",-1292781795),mixins);\nvar before_update = rum.util.collect_STAR_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"unsafe\",\"will-update\",\"unsafe/will-update\",1505013232),new cljs.core.Keyword(\"unsafe\",\"will-update\",\"unsafe/will-update\",1505013232),new cljs.core.Keyword(null,\"before-render\",\"before-render\",71256781)], null),mixins);\nvar did_update = rum.util.collect_STAR_(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"did-update\",\"did-update\",-2143702256),new cljs.core.Keyword(null,\"after-render\",\"after-render\",1997533433)], null),mixins);\nvar did_catch = rum.util.collect(new cljs.core.Keyword(null,\"did-catch\",\"did-catch\",2139522313),mixins);\nvar will_unmount = rum.util.collect(new cljs.core.Keyword(null,\"will-unmount\",\"will-unmount\",-808051550),mixins);\nvar child_context = rum.util.collect(new cljs.core.Keyword(null,\"child-context\",\"child-context\",-1375270295),mixins);\nvar class_props = cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(cljs.core.merge,rum.util.collect(new cljs.core.Keyword(null,\"class-properties\",\"class-properties\",1351279702),mixins));\nvar static_props = cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(cljs.core.merge,rum.util.collect(new cljs.core.Keyword(null,\"static-properties\",\"static-properties\",-577838503),mixins));\nvar ctor = (function (props){\nvar this$ = this;\ngoog.object.set(this$,\"state\",({\":rum/state\": cljs.core.volatile_BANG_(rum.util.call_all.cljs$core$IFn$_invoke$arity$variadic(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(goog.object.get(props,\":rum/initial-state\"),new cljs.core.Keyword(\"rum\",\"react-component\",\"rum/react-component\",-1879897248),this$),init,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([props], 0)))}));\n\nreturn React.Component.call(this$,props);\n});\nvar _ = goog.inherits(ctor,React.Component);\nvar prototype = goog.object.get(ctor,\"prototype\");\nif(cljs.core.empty_QMARK_(before_render)){\n} else {\ngoog.object.set(prototype,\"UNSAFE_componentWillMount\",(function (){\nvar this$ = this;\nreturn cljs.core._vreset_BANG_(rum.core.state(this$),rum.util.call_all(cljs.core._deref(rum.core.state(this$)),before_render));\n}));\n}\n\nif(cljs.core.empty_QMARK_(did_mount)){\n} else {\ngoog.object.set(prototype,\"componentDidMount\",(function (){\nvar this$ = this;\nreturn cljs.core._vreset_BANG_(rum.core.state(this$),rum.util.call_all(cljs.core._deref(rum.core.state(this$)),did_mount));\n}));\n}\n\ngoog.object.set(prototype,\"UNSAFE_componentWillReceiveProps\",(function (next_props){\nvar this$ = this;\nvar old_state = cljs.core.deref(rum.core.state(this$));\nvar state = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([old_state,goog.object.get(next_props,\":rum/initial-state\")], 0));\nvar next_state = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__28906_SHARP_,p2__28905_SHARP_){\nreturn (p2__28905_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__28905_SHARP_.cljs$core$IFn$_invoke$arity$2(old_state,p1__28906_SHARP_) : p2__28905_SHARP_.call(null,old_state,p1__28906_SHARP_));\n}),state,will_remount);\nreturn this$.setState(({\":rum/state\": cljs.core.volatile_BANG_(next_state)}));\n}));\n\nif(cljs.core.empty_QMARK_(should_update)){\n} else {\ngoog.object.set(prototype,\"shouldComponentUpdate\",(function (next_props,next_state){\nvar this$ = this;\nvar old_state = cljs.core.deref(rum.core.state(this$));\nvar new_state = cljs.core.deref(goog.object.get(next_state,\":rum/state\"));\nvar or__4120__auto__ = cljs.core.some((function (p1__28907_SHARP_){\nreturn (p1__28907_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p1__28907_SHARP_.cljs$core$IFn$_invoke$arity$2(old_state,new_state) : p1__28907_SHARP_.call(null,old_state,new_state));\n}),should_update);\nif(cljs.core.truth_(or__4120__auto__)){\nreturn or__4120__auto__;\n} else {\nreturn false;\n}\n}));\n}\n\nif(cljs.core.empty_QMARK_(before_update)){\n} else {\ngoog.object.set(prototype,\"UNSAFE_componentWillUpdate\",(function (___$1,next_state){\nvar this$ = this;\nvar new_state = goog.object.get(next_state,\":rum/state\");\nreturn cljs.core._vreset_BANG_(new_state,rum.util.call_all(cljs.core._deref(new_state),before_update));\n}));\n}\n\ngoog.object.set(prototype,\"render\",(function (){\nvar this$ = this;\nvar state = rum.core.state(this$);\nvar vec__28927 = (function (){var G__28930 = cljs.core.deref(state);\nreturn (wrapped_render.cljs$core$IFn$_invoke$arity$1 ? wrapped_render.cljs$core$IFn$_invoke$arity$1(G__28930) : wrapped_render.call(null,G__28930));\n})();\nvar dom = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28927,(0),null);\nvar next_state = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28927,(1),null);\ncljs.core.vreset_BANG_(state,next_state);\n\nreturn dom;\n}));\n\nif(cljs.core.empty_QMARK_(did_update)){\n} else {\ngoog.object.set(prototype,\"componentDidUpdate\",(function (___$1,___$2){\nvar this$ = this;\nreturn cljs.core._vreset_BANG_(rum.core.state(this$),rum.util.call_all(cljs.core._deref(rum.core.state(this$)),did_update));\n}));\n}\n\nif(cljs.core.empty_QMARK_(did_catch)){\n} else {\ngoog.object.set(prototype,\"componentDidCatch\",(function (error,info){\nvar this$ = this;\ncljs.core._vreset_BANG_(rum.core.state(this$),rum.util.call_all.cljs$core$IFn$_invoke$arity$variadic(cljs.core._deref(rum.core.state(this$)),did_catch,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([error,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"rum\",\"component-stack\",\"rum/component-stack\",2037541138),goog.object.get(info,\"componentStack\")], null)], 0)));\n\nreturn this$.forceUpdate();\n}));\n}\n\ngoog.object.set(prototype,\"componentWillUnmount\",(function (){\nvar this$ = this;\nif(cljs.core.empty_QMARK_(will_unmount)){\n} else {\ncljs.core._vreset_BANG_(rum.core.state(this$),rum.util.call_all(cljs.core._deref(rum.core.state(this$)),will_unmount));\n}\n\nreturn goog.object.set(this$,\":rum/unmounted?\",true);\n}));\n\nif(cljs.core.empty_QMARK_(child_context)){\n} else {\ngoog.object.set(prototype,\"getChildContext\",(function (){\nvar this$ = this;\nvar state = cljs.core.deref(rum.core.state(this$));\nreturn cljs.core.clj__GT_js(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__28908_SHARP_){\nreturn (p1__28908_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__28908_SHARP_.cljs$core$IFn$_invoke$arity$1(state) : p1__28908_SHARP_.call(null,state));\n})),cljs.core.merge,cljs.core.PersistentArrayMap.EMPTY,child_context));\n}));\n}\n\nrum.core.extend_BANG_(prototype,class_props);\n\ngoog.object.set(ctor,\"displayName\",display_name);\n\nrum.core.extend_BANG_(ctor,static_props);\n\nreturn ctor;\n});\nrum.core.set_meta_BANG_ = (function rum$core$set_meta_BANG_(c){\nvar f = (function (){\nvar ctr = (c.cljs$core$IFn$_invoke$arity$0 ? c.cljs$core$IFn$_invoke$arity$0() : c.call(null));\nreturn ctr.apply(ctr,arguments);\n});\nvar x28931_29097 = f;\n(x28931_29097.cljs$core$IMeta$ = cljs.core.PROTOCOL_SENTINEL);\n\n(x28931_29097.cljs$core$IMeta$_meta$arity$1 = (function (_){\nvar ___$1 = this;\nreturn cljs.core.meta((c.cljs$core$IFn$_invoke$arity$0 ? c.cljs$core$IFn$_invoke$arity$0() : c.call(null)));\n}));\n\n\nreturn f;\n});\n/**\n * Wraps component construction in a way so that Google Closure Compiler\n * can properly recognize and elide unused components. The extra `set-meta`\n * fn is needed so that the compiler can properly detect that all functions\n * are side effect free.\n */\nrum.core.lazy_build = (function rum$core$lazy_build(ctor,render,mixins,display_name){\nvar bf = (function (){\nreturn (ctor.cljs$core$IFn$_invoke$arity$3 ? ctor.cljs$core$IFn$_invoke$arity$3(render,mixins,display_name) : ctor.call(null,render,mixins,display_name));\n});\nvar c = goog.functions.cacheReturnValue(bf);\nreturn rum.core.set_meta_BANG_(c);\n});\nrum.core.build_ctor = (function rum$core$build_ctor(render,mixins,display_name){\nvar class$ = rum.core.build_class(render,mixins,display_name);\nvar key_fn = cljs.core.first(rum.util.collect(new cljs.core.Keyword(null,\"key-fn\",\"key-fn\",-636154479),mixins));\nvar ctor = (((!((key_fn == null))))?(function() { \nvar G__29104__delegate = function (args){\nvar props = ({\":rum/initial-state\": new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"rum\",\"args\",\"rum/args\",1315791754),args], null), \"key\": cljs.core.apply.cljs$core$IFn$_invoke$arity$2(key_fn,args)});\nreturn React.createElement(class$,props);\n};\nvar G__29104 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__29110__i = 0, G__29110__a = new Array(arguments.length -  0);\nwhile (G__29110__i < G__29110__a.length) {G__29110__a[G__29110__i] = arguments[G__29110__i + 0]; ++G__29110__i;}\n  args = new cljs.core.IndexedSeq(G__29110__a,0,null);\n} \nreturn G__29104__delegate.call(this,args);};\nG__29104.cljs$lang$maxFixedArity = 0;\nG__29104.cljs$lang$applyTo = (function (arglist__29111){\nvar args = cljs.core.seq(arglist__29111);\nreturn G__29104__delegate(args);\n});\nG__29104.cljs$core$IFn$_invoke$arity$variadic = G__29104__delegate;\nreturn G__29104;\n})()\n:(function() { \nvar G__29115__delegate = function (args){\nvar props = ({\":rum/initial-state\": new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"rum\",\"args\",\"rum/args\",1315791754),args], null)});\nreturn React.createElement(class$,props);\n};\nvar G__29115 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__29117__i = 0, G__29117__a = new Array(arguments.length -  0);\nwhile (G__29117__i < G__29117__a.length) {G__29117__a[G__29117__i] = arguments[G__29117__i + 0]; ++G__29117__i;}\n  args = new cljs.core.IndexedSeq(G__29117__a,0,null);\n} \nreturn G__29115__delegate.call(this,args);};\nG__29115.cljs$lang$maxFixedArity = 0;\nG__29115.cljs$lang$applyTo = (function (arglist__29119){\nvar args = cljs.core.seq(arglist__29119);\nreturn G__29115__delegate(args);\n});\nG__29115.cljs$core$IFn$_invoke$arity$variadic = G__29115__delegate;\nreturn G__29115;\n})()\n);\nreturn cljs.core.with_meta(ctor,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"rum\",\"class\",\"rum/class\",-2030775258),class$], null));\n});\nrum.core.memo_compare_props = (function rum$core$memo_compare_props(prev_props,next_props){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((prev_props[\":rum/args\"]),(next_props[\":rum/args\"]));\n});\nrum.core.react_memo = (function rum$core$react_memo(f){\nvar temp__5737__auto__ = React.memo;\nif((temp__5737__auto__ == null)){\nreturn f;\n} else {\nvar memo = temp__5737__auto__;\nreturn memo(f,rum.core.memo_compare_props);\n}\n});\nrum.core.build_defc = (function rum$core$build_defc(render_body,mixins,display_name){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(mixins,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [rum.core.static$], null))){\nvar class$ = (function (props){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(render_body,(props[\":rum/args\"]));\n});\nvar _ = (class$[\"displayName\"] = display_name);\nvar memo_class = rum.core.react_memo(class$);\nvar ctor = (function() { \nvar G__29134__delegate = function (args){\nreturn React.createElement(memo_class,({\":rum/args\": args}));\n};\nvar G__29134 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__29135__i = 0, G__29135__a = new Array(arguments.length -  0);\nwhile (G__29135__i < G__29135__a.length) {G__29135__a[G__29135__i] = arguments[G__29135__i + 0]; ++G__29135__i;}\n  args = new cljs.core.IndexedSeq(G__29135__a,0,null);\n} \nreturn G__29134__delegate.call(this,args);};\nG__29134.cljs$lang$maxFixedArity = 0;\nG__29134.cljs$lang$applyTo = (function (arglist__29136){\nvar args = cljs.core.seq(arglist__29136);\nreturn G__29134__delegate(args);\n});\nG__29134.cljs$core$IFn$_invoke$arity$variadic = G__29134__delegate;\nreturn G__29134;\n})()\n;\nreturn cljs.core.with_meta(ctor,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"rum\",\"class\",\"rum/class\",-2030775258),memo_class], null));\n} else {\nif(cljs.core.empty_QMARK_(mixins)){\nvar class$ = (function (props){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(render_body,(props[\":rum/args\"]));\n});\nvar _ = (class$[\"displayName\"] = display_name);\nvar ctor = (function() { \nvar G__29141__delegate = function (args){\nreturn React.createElement(class$,({\":rum/args\": args}));\n};\nvar G__29141 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__29142__i = 0, G__29142__a = new Array(arguments.length -  0);\nwhile (G__29142__i < G__29142__a.length) {G__29142__a[G__29142__i] = arguments[G__29142__i + 0]; ++G__29142__i;}\n  args = new cljs.core.IndexedSeq(G__29142__a,0,null);\n} \nreturn G__29141__delegate.call(this,args);};\nG__29141.cljs$lang$maxFixedArity = 0;\nG__29141.cljs$lang$applyTo = (function (arglist__29143){\nvar args = cljs.core.seq(arglist__29143);\nreturn G__29141__delegate(args);\n});\nG__29141.cljs$core$IFn$_invoke$arity$variadic = G__29141__delegate;\nreturn G__29141;\n})()\n;\nreturn cljs.core.with_meta(ctor,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"rum\",\"class\",\"rum/class\",-2030775258),class$], null));\n} else {\nvar render = (function (state){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$2(render_body,new cljs.core.Keyword(\"rum\",\"args\",\"rum/args\",1315791754).cljs$core$IFn$_invoke$arity$1(state)),state], null);\n});\nreturn rum.core.build_ctor(render,mixins,display_name);\n\n}\n}\n});\nrum.core.build_defcs = (function rum$core$build_defcs(render_body,mixins,display_name){\nvar render = (function (state){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$3(render_body,state,new cljs.core.Keyword(\"rum\",\"args\",\"rum/args\",1315791754).cljs$core$IFn$_invoke$arity$1(state)),state], null);\n});\nreturn rum.core.build_ctor(render,mixins,display_name);\n});\nrum.core.build_defcc = (function rum$core$build_defcc(render_body,mixins,display_name){\nvar render = (function (state){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$3(render_body,new cljs.core.Keyword(\"rum\",\"react-component\",\"rum/react-component\",-1879897248).cljs$core$IFn$_invoke$arity$1(state),new cljs.core.Keyword(\"rum\",\"args\",\"rum/args\",1315791754).cljs$core$IFn$_invoke$arity$1(state)),state], null);\n});\nreturn rum.core.build_ctor(render,mixins,display_name);\n});\nrum.core.request_render = (function rum$core$request_render(comp){\nreturn comp.forceUpdate();\n});\n/**\n * Add element to the DOM tree. Idempotent. Subsequent mounts will just update element.\n */\nrum.core.mount = (function rum$core$mount(element,node){\nReactDOM.render(element,node);\n\nreturn null;\n});\n/**\n * Removes component from the DOM tree.\n */\nrum.core.unmount = (function rum$core$unmount(node){\nreturn ReactDOM.unmountComponentAtNode(node);\n});\n/**\n * Same as [[mount]] but must be called on DOM tree already rendered by a server via [[render-html]].\n */\nrum.core.hydrate = (function rum$core$hydrate(element,node){\nreturn ReactDOM.hydrate(element,node);\n});\n/**\n * Render `element` in a DOM `node` that is ouside of current DOM hierarchy.\n */\nrum.core.portal = (function rum$core$portal(element,node){\nreturn ReactDOM.createPortal(element,node);\n});\nrum.core.create_context = (function rum$core$create_context(default_value){\nreturn React.createContext(default_value);\n});\n/**\n * Adds React key to element.\n * \n * ```\n * (rum/defc label [text] [:div text])\n * \n * (-> (label)\n *     (rum/with-key \"abc\")\n *     (rum/mount js/document.body))\n * ```\n */\nrum.core.with_key = (function rum$core$with_key(element,key){\nreturn React.cloneElement(element,({\"key\": key}),null);\n});\n/**\n * Adds React ref (string or callback) to element.\n * \n * ```\n * (rum/defc label [text] [:div text])\n * \n * (-> (label)\n *     (rum/with-ref \"abc\")\n *     (rum/mount js/document.body))\n * ```\n */\nrum.core.with_ref = (function rum$core$with_ref(element,ref){\nreturn React.cloneElement(element,({\"ref\": ref}),null);\n});\n/**\n * Usage of this function is discouraged. Use :ref callback instead.\n *   Given state, returns top-level DOM node of component. Call it during lifecycle callbacks. Can’t be called during render.\n */\nrum.core.dom_node = (function rum$core$dom_node(state){\nreturn ReactDOM.findDOMNode(new cljs.core.Keyword(\"rum\",\"react-component\",\"rum/react-component\",-1879897248).cljs$core$IFn$_invoke$arity$1(state));\n});\n/**\n * DEPRECATED: Use :ref (fn [dom-or-nil]) callback instead. See rum issue #124\n *   Given state and ref handle, returns React component.\n */\nrum.core.ref = (function rum$core$ref(state,key){\nreturn ((new cljs.core.Keyword(\"rum\",\"react-component\",\"rum/react-component\",-1879897248).cljs$core$IFn$_invoke$arity$1(state)[\"refs\"])[cljs.core.name(key)]);\n});\n/**\n * DEPRECATED: Use :ref (fn [dom-or-nil]) callback instead. See rum issue #124\n *   Given state and ref handle, returns DOM node associated with ref.\n */\nrum.core.ref_node = (function rum$core$ref_node(state,key){\nreturn ReactDOM.findDOMNode(rum.core.ref(state,cljs.core.name(key)));\n});\n/**\n * Mixin. Will avoid re-render if none of component’s arguments have changed. Does equality check (`=`) on all arguments.\n *   \n * ```\n * (rum/defc label < rum/static\n *   [text]\n *   [:div text])\n *   \n * (rum/mount (label \"abc\") js/document.body)\n * \n * ;; def != abc, will re-render\n * (rum/mount (label \"def\") js/document.body)\n * \n * ;; def == def, won’t re-render\n * (rum/mount (label \"def\") js/document.body)\n * ```\n */\nrum.core.static$ = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"should-update\",\"should-update\",-1292781795),(function (old_state,new_state){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"rum\",\"args\",\"rum/args\",1315791754).cljs$core$IFn$_invoke$arity$1(old_state),new cljs.core.Keyword(\"rum\",\"args\",\"rum/args\",1315791754).cljs$core$IFn$_invoke$arity$1(new_state));\n})], null);\n/**\n * Mixin constructor. Adds an atom to component’s state that can be used to keep stuff during component’s lifecycle. Component will be re-rendered if atom’s value changes. Atom is stored under user-provided key or under `:rum/local` by default.\n *   \n * ```\n * (rum/defcs counter < (rum/local 0 :cnt)\n *   [state label]\n *   (let [*cnt (:cnt state)]\n *     [:div {:on-click (fn [_] (swap! *cnt inc))}\n *       label @*cnt]))\n * \n * (rum/mount (counter \"Click count: \"))\n * ```\n */\nrum.core.local = (function rum$core$local(var_args){\nvar G__28946 = arguments.length;\nswitch (G__28946) {\ncase 1:\nreturn rum.core.local.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rum.core.local.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rum.core.local.cljs$core$IFn$_invoke$arity$1 = (function (initial){\nreturn rum.core.local.cljs$core$IFn$_invoke$arity$2(initial,new cljs.core.Keyword(\"rum\",\"local\",\"rum/local\",-1497916586));\n}));\n\n(rum.core.local.cljs$core$IFn$_invoke$arity$2 = (function (initial,key){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"will-mount\",\"will-mount\",-434633071),(function (state){\nvar local_state = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(initial);\nvar component = new cljs.core.Keyword(\"rum\",\"react-component\",\"rum/react-component\",-1879897248).cljs$core$IFn$_invoke$arity$1(state);\ncljs.core.add_watch(local_state,key,(function (_,___$1,p,n){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(p,n)){\nreturn component.forceUpdate();\n} else {\nreturn null;\n}\n}));\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(state,key,local_state);\n})], null);\n}));\n\n(rum.core.local.cljs$lang$maxFixedArity = 2);\n\n/**\n * Mixin. Works in conjunction with [[react]].\n *   \n * ```\n * (rum/defc comp < rum/reactive\n *   [*counter]\n *   [:div (rum/react counter)])\n * \n * (def *counter (atom 0))\n * (rum/mount (comp *counter) js/document.body)\n * (swap! *counter inc) ;; will force comp to re-render\n * ```\n */\nrum.core.reactive = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),(function (state,props){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(state,new cljs.core.Keyword(\"rum.reactive\",\"key\",\"rum.reactive/key\",-803425142),cljs.core.random_uuid());\n}),new cljs.core.Keyword(null,\"wrap-render\",\"wrap-render\",1782000986),(function (render_fn){\nreturn (function (state){\nvar _STAR_reactions_STAR__orig_val__28964 = rum.core._STAR_reactions_STAR_;\nvar _STAR_reactions_STAR__temp_val__28965 = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);\n(rum.core._STAR_reactions_STAR_ = _STAR_reactions_STAR__temp_val__28965);\n\ntry{var comp = new cljs.core.Keyword(\"rum\",\"react-component\",\"rum/react-component\",-1879897248).cljs$core$IFn$_invoke$arity$1(state);\nvar old_reactions = new cljs.core.Keyword(\"rum.reactive\",\"refs\",\"rum.reactive/refs\",-814076325).cljs$core$IFn$_invoke$arity$2(state,cljs.core.PersistentHashSet.EMPTY);\nvar vec__28968 = (render_fn.cljs$core$IFn$_invoke$arity$1 ? render_fn.cljs$core$IFn$_invoke$arity$1(state) : render_fn.call(null,state));\nvar dom = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28968,(0),null);\nvar next_state = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28968,(1),null);\nvar new_reactions = cljs.core.deref(rum.core._STAR_reactions_STAR_);\nvar key = new cljs.core.Keyword(\"rum.reactive\",\"key\",\"rum.reactive/key\",-803425142).cljs$core$IFn$_invoke$arity$1(state);\nvar seq__28971_29150 = cljs.core.seq(old_reactions);\nvar chunk__28972_29151 = null;\nvar count__28973_29152 = (0);\nvar i__28974_29153 = (0);\nwhile(true){\nif((i__28974_29153 < count__28973_29152)){\nvar ref_29154 = chunk__28972_29151.cljs$core$IIndexed$_nth$arity$2(null,i__28974_29153);\nif(cljs.core.contains_QMARK_(new_reactions,ref_29154)){\n} else {\ncljs.core.remove_watch(ref_29154,key);\n}\n\n\nvar G__29155 = seq__28971_29150;\nvar G__29156 = chunk__28972_29151;\nvar G__29157 = count__28973_29152;\nvar G__29158 = (i__28974_29153 + (1));\nseq__28971_29150 = G__29155;\nchunk__28972_29151 = G__29156;\ncount__28973_29152 = G__29157;\ni__28974_29153 = G__29158;\ncontinue;\n} else {\nvar temp__5735__auto___29159 = cljs.core.seq(seq__28971_29150);\nif(temp__5735__auto___29159){\nvar seq__28971_29160__$1 = temp__5735__auto___29159;\nif(cljs.core.chunked_seq_QMARK_(seq__28971_29160__$1)){\nvar c__4550__auto___29161 = cljs.core.chunk_first(seq__28971_29160__$1);\nvar G__29162 = cljs.core.chunk_rest(seq__28971_29160__$1);\nvar G__29163 = c__4550__auto___29161;\nvar G__29164 = cljs.core.count(c__4550__auto___29161);\nvar G__29165 = (0);\nseq__28971_29150 = G__29162;\nchunk__28972_29151 = G__29163;\ncount__28973_29152 = G__29164;\ni__28974_29153 = G__29165;\ncontinue;\n} else {\nvar ref_29166 = cljs.core.first(seq__28971_29160__$1);\nif(cljs.core.contains_QMARK_(new_reactions,ref_29166)){\n} else {\ncljs.core.remove_watch(ref_29166,key);\n}\n\n\nvar G__29167 = cljs.core.next(seq__28971_29160__$1);\nvar G__29168 = null;\nvar G__29169 = (0);\nvar G__29170 = (0);\nseq__28971_29150 = G__29167;\nchunk__28972_29151 = G__29168;\ncount__28973_29152 = G__29169;\ni__28974_29153 = G__29170;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__28980_29171 = cljs.core.seq(new_reactions);\nvar chunk__28981_29172 = null;\nvar count__28982_29173 = (0);\nvar i__28983_29174 = (0);\nwhile(true){\nif((i__28983_29174 < count__28982_29173)){\nvar ref_29175 = chunk__28981_29172.cljs$core$IIndexed$_nth$arity$2(null,i__28983_29174);\nif(cljs.core.contains_QMARK_(old_reactions,ref_29175)){\n} else {\ncljs.core.add_watch(ref_29175,key,((function (seq__28980_29171,chunk__28981_29172,count__28982_29173,i__28983_29174,ref_29175,comp,old_reactions,vec__28968,dom,next_state,new_reactions,key,_STAR_reactions_STAR__orig_val__28964,_STAR_reactions_STAR__temp_val__28965){\nreturn (function (_,___$1,p,n){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(p,n)){\nreturn comp.forceUpdate();\n} else {\nreturn null;\n}\n});})(seq__28980_29171,chunk__28981_29172,count__28982_29173,i__28983_29174,ref_29175,comp,old_reactions,vec__28968,dom,next_state,new_reactions,key,_STAR_reactions_STAR__orig_val__28964,_STAR_reactions_STAR__temp_val__28965))\n);\n}\n\n\nvar G__29176 = seq__28980_29171;\nvar G__29177 = chunk__28981_29172;\nvar G__29178 = count__28982_29173;\nvar G__29179 = (i__28983_29174 + (1));\nseq__28980_29171 = G__29176;\nchunk__28981_29172 = G__29177;\ncount__28982_29173 = G__29178;\ni__28983_29174 = G__29179;\ncontinue;\n} else {\nvar temp__5735__auto___29180 = cljs.core.seq(seq__28980_29171);\nif(temp__5735__auto___29180){\nvar seq__28980_29181__$1 = temp__5735__auto___29180;\nif(cljs.core.chunked_seq_QMARK_(seq__28980_29181__$1)){\nvar c__4550__auto___29182 = cljs.core.chunk_first(seq__28980_29181__$1);\nvar G__29183 = cljs.core.chunk_rest(seq__28980_29181__$1);\nvar G__29184 = c__4550__auto___29182;\nvar G__29185 = cljs.core.count(c__4550__auto___29182);\nvar G__29186 = (0);\nseq__28980_29171 = G__29183;\nchunk__28981_29172 = G__29184;\ncount__28982_29173 = G__29185;\ni__28983_29174 = G__29186;\ncontinue;\n} else {\nvar ref_29187 = cljs.core.first(seq__28980_29181__$1);\nif(cljs.core.contains_QMARK_(old_reactions,ref_29187)){\n} else {\ncljs.core.add_watch(ref_29187,key,((function (seq__28980_29171,chunk__28981_29172,count__28982_29173,i__28983_29174,ref_29187,seq__28980_29181__$1,temp__5735__auto___29180,comp,old_reactions,vec__28968,dom,next_state,new_reactions,key,_STAR_reactions_STAR__orig_val__28964,_STAR_reactions_STAR__temp_val__28965){\nreturn (function (_,___$1,p,n){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(p,n)){\nreturn comp.forceUpdate();\n} else {\nreturn null;\n}\n});})(seq__28980_29171,chunk__28981_29172,count__28982_29173,i__28983_29174,ref_29187,seq__28980_29181__$1,temp__5735__auto___29180,comp,old_reactions,vec__28968,dom,next_state,new_reactions,key,_STAR_reactions_STAR__orig_val__28964,_STAR_reactions_STAR__temp_val__28965))\n);\n}\n\n\nvar G__29188 = cljs.core.next(seq__28980_29181__$1);\nvar G__29189 = null;\nvar G__29190 = (0);\nvar G__29191 = (0);\nseq__28980_29171 = G__29188;\nchunk__28981_29172 = G__29189;\ncount__28982_29173 = G__29190;\ni__28983_29174 = G__29191;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [dom,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(next_state,new cljs.core.Keyword(\"rum.reactive\",\"refs\",\"rum.reactive/refs\",-814076325),new_reactions)], null);\n}finally {(rum.core._STAR_reactions_STAR_ = _STAR_reactions_STAR__orig_val__28964);\n}});\n}),new cljs.core.Keyword(null,\"will-unmount\",\"will-unmount\",-808051550),(function (state){\nvar key_29192 = new cljs.core.Keyword(\"rum.reactive\",\"key\",\"rum.reactive/key\",-803425142).cljs$core$IFn$_invoke$arity$1(state);\nvar seq__29015_29193 = cljs.core.seq(new cljs.core.Keyword(\"rum.reactive\",\"refs\",\"rum.reactive/refs\",-814076325).cljs$core$IFn$_invoke$arity$1(state));\nvar chunk__29016_29194 = null;\nvar count__29017_29195 = (0);\nvar i__29018_29196 = (0);\nwhile(true){\nif((i__29018_29196 < count__29017_29195)){\nvar ref_29197 = chunk__29016_29194.cljs$core$IIndexed$_nth$arity$2(null,i__29018_29196);\ncljs.core.remove_watch(ref_29197,key_29192);\n\n\nvar G__29198 = seq__29015_29193;\nvar G__29199 = chunk__29016_29194;\nvar G__29200 = count__29017_29195;\nvar G__29201 = (i__29018_29196 + (1));\nseq__29015_29193 = G__29198;\nchunk__29016_29194 = G__29199;\ncount__29017_29195 = G__29200;\ni__29018_29196 = G__29201;\ncontinue;\n} else {\nvar temp__5735__auto___29202 = cljs.core.seq(seq__29015_29193);\nif(temp__5735__auto___29202){\nvar seq__29015_29203__$1 = temp__5735__auto___29202;\nif(cljs.core.chunked_seq_QMARK_(seq__29015_29203__$1)){\nvar c__4550__auto___29204 = cljs.core.chunk_first(seq__29015_29203__$1);\nvar G__29205 = cljs.core.chunk_rest(seq__29015_29203__$1);\nvar G__29206 = c__4550__auto___29204;\nvar G__29207 = cljs.core.count(c__4550__auto___29204);\nvar G__29208 = (0);\nseq__29015_29193 = G__29205;\nchunk__29016_29194 = G__29206;\ncount__29017_29195 = G__29207;\ni__29018_29196 = G__29208;\ncontinue;\n} else {\nvar ref_29209 = cljs.core.first(seq__29015_29203__$1);\ncljs.core.remove_watch(ref_29209,key_29192);\n\n\nvar G__29210 = cljs.core.next(seq__29015_29203__$1);\nvar G__29211 = null;\nvar G__29212 = (0);\nvar G__29213 = (0);\nseq__29015_29193 = G__29210;\nchunk__29016_29194 = G__29211;\ncount__29017_29195 = G__29212;\ni__29018_29196 = G__29213;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(state,new cljs.core.Keyword(\"rum.reactive\",\"refs\",\"rum.reactive/refs\",-814076325),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(\"rum.reactive\",\"key\",\"rum.reactive/key\",-803425142)], 0));\n})], null);\n/**\n * Works in conjunction with [[reactive]] mixin. Use this function instead of `deref` inside render, and your component will subscribe to changes happening to the derefed atom.\n */\nrum.core.react = (function rum$core$react(ref){\nif(cljs.core.truth_(rum.core._STAR_reactions_STAR_)){\n} else {\nthrow (new Error([\"Assert failed: \",\"rum.core/react is only supported in conjunction with rum.core/reactive\",\"\\n\",\"*reactions*\"].join('')));\n}\n\ncljs.core._vreset_BANG_(rum.core._STAR_reactions_STAR_,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(rum.core._STAR_reactions_STAR_),ref));\n\nreturn cljs.core.deref(ref);\n});\n/**\n * Use this to create “chains” and acyclic graphs of dependent atoms.\n * \n *           [[derived-atom]] will:\n *        \n *           - Take N “source” refs.\n *           - Set up a watch on each of them.\n *           - Create “sink” atom.\n *           - When any of source refs changes:\n *              - re-run function `f`, passing N dereferenced values of source refs.\n *              - `reset!` result of `f` to the sink atom.\n *           - Return sink atom.\n * \n *           Example:\n * \n *           ```\n *           (def *a (atom 0))\n *           (def *b (atom 1))\n *           (def *x (derived-atom [*a *b] ::key\n *                     (fn [a b]\n *                       (str a \":\" b))))\n *           \n *           (type *x)  ;; => clojure.lang.Atom\n *           (deref *x) ;; => \"0:1\"\n *           \n *           (swap! *a inc)\n *           (deref *x) ;; => \"1:1\"\n *           \n *           (reset! *b 7)\n *           (deref *x) ;; => \"1:7\"\n *           ```\n * \n *           Arguments:\n *        \n *           - `refs` - sequence of source refs,\n *           - `key`  - unique key to register watcher, same as in `clojure.core/add-watch`,\n *           - `f`    - function that must accept N arguments (same as number of source refs) and return a value to be written to the sink ref. Note: `f` will be called with already dereferenced values,\n *           - `opts` - optional. Map of:\n *             - `:ref` - use this as sink ref. By default creates new atom,\n *             - `:check-equals?` - Defaults to `true`. If equality check should be run on each source update: `(= @sink (f new-vals))`. When result of recalculating `f` equals to the old value, `reset!` won’t be called. Set to `false` if checking for equality can be expensive.\n */\nrum.core.derived_atom = rum.derived_atom.derived_atom;\n/**\n * Given atom with deep nested value and path inside it, creates an atom-like structure\n * that can be used separately from main atom, but will sync changes both ways:\n *   \n * ```\n * (def db (atom { :users { \"Ivan\" { :age 30 }}}))\n * \n * (def ivan (rum/cursor db [:users \"Ivan\"]))\n * (deref ivan) ;; => { :age 30 }\n * \n * (swap! ivan update :age inc) ;; => { :age 31 }\n * (deref db) ;; => { :users { \"Ivan\" { :age 31 }}}\n * \n * (swap! db update-in [:users \"Ivan\" :age] inc)\n * ;; => { :users { \"Ivan\" { :age 32 }}}\n * \n * (deref ivan) ;; => { :age 32 }\n * ```\n *   \n * Returned value supports `deref`, `swap!`, `reset!`, watches and metadata.\n *   \n * The only supported option is `:meta`\n */\nrum.core.cursor_in = (function rum$core$cursor_in(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___29214 = arguments.length;\nvar i__4731__auto___29215 = (0);\nwhile(true){\nif((i__4731__auto___29215 < len__4730__auto___29214)){\nargs__4736__auto__.push((arguments[i__4731__auto___29215]));\n\nvar G__29216 = (i__4731__auto___29215 + (1));\ni__4731__auto___29215 = G__29216;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\nreturn rum.core.cursor_in.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\n});\n\n(rum.core.cursor_in.cljs$core$IFn$_invoke$arity$variadic = (function (ref,path,p__29026){\nvar map__29027 = p__29026;\nvar map__29027__$1 = (((((!((map__29027 == null))))?(((((map__29027.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29027.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29027):map__29027);\nvar options = map__29027__$1;\nif((ref instanceof rum.cursor.Cursor)){\nreturn (new rum.cursor.Cursor(ref.ref,cljs.core.into.cljs$core$IFn$_invoke$arity$2(ref.path,path),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964).cljs$core$IFn$_invoke$arity$1(options)));\n} else {\nreturn (new rum.cursor.Cursor(ref,path,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964).cljs$core$IFn$_invoke$arity$1(options)));\n}\n}));\n\n(rum.core.cursor_in.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(rum.core.cursor_in.cljs$lang$applyTo = (function (seq29023){\nvar G__29024 = cljs.core.first(seq29023);\nvar seq29023__$1 = cljs.core.next(seq29023);\nvar G__29025 = cljs.core.first(seq29023__$1);\nvar seq29023__$2 = cljs.core.next(seq29023__$1);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__29024,G__29025,seq29023__$2);\n}));\n\n/**\n * Same as [[cursor-in]] but accepts single key instead of path vector.\n */\nrum.core.cursor = (function rum$core$cursor(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___29217 = arguments.length;\nvar i__4731__auto___29218 = (0);\nwhile(true){\nif((i__4731__auto___29218 < len__4730__auto___29217)){\nargs__4736__auto__.push((arguments[i__4731__auto___29218]));\n\nvar G__29219 = (i__4731__auto___29218 + (1));\ni__4731__auto___29218 = G__29219;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\nreturn rum.core.cursor.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\n});\n\n(rum.core.cursor.cljs$core$IFn$_invoke$arity$variadic = (function (ref,key,options){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(rum.core.cursor_in,ref,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [key], null),options);\n}));\n\n(rum.core.cursor.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(rum.core.cursor.cljs$lang$applyTo = (function (seq29029){\nvar G__29030 = cljs.core.first(seq29029);\nvar seq29029__$1 = cljs.core.next(seq29029);\nvar G__29031 = cljs.core.first(seq29029__$1);\nvar seq29029__$2 = cljs.core.next(seq29029__$1);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__29030,G__29031,seq29029__$2);\n}));\n\n/**\n * Takes initial value or value returning fn and returns a tuple of [value set-value!],\n *   where `value` is current state value and `set-value!` is a function that schedules re-render.\n * \n *   (let [[value set-state!] (rum/use-state 0)]\n *  [:button {:on-click #(set-state! (inc value))}\n *    value])\n */\nrum.core.use_state = (function rum$core$use_state(value_or_fn){\nreturn React.useState(value_or_fn);\n});\n/**\n * Takes reducing function and initial state value.\n *   Returns a tuple of [value dispatch!], where `value` is current state value and `dispatch` is a function that schedules re-render.\n * \n *   (defmulti value-reducer (fn [value event] event))\n * \n *   (defmethod value-reducer :inc [value _]\n *  (inc value))\n * \n *   (let [[value dispatch!] (rum/use-reducer value-reducer 0)]\n *  [:button {:on-click #(dispatch! :inc)}\n *    value])\n * \n *   Read more at https://reactjs.org/docs/hooks-reference.html#usereducer\n */\nrum.core.use_reducer = (function rum$core$use_reducer(reducer_fn,initial_value){\nreturn React.useReducer((function (p1__29032_SHARP_,p2__29033_SHARP_){\nreturn (reducer_fn.cljs$core$IFn$_invoke$arity$2 ? reducer_fn.cljs$core$IFn$_invoke$arity$2(p1__29032_SHARP_,p2__29033_SHARP_) : reducer_fn.call(null,p1__29032_SHARP_,p2__29033_SHARP_));\n}),initial_value,cljs.core.identity);\n});\n/**\n * Takes setup-fn that executes either on the first render or after every update.\n *   The function may return cleanup-fn to cleanup the effect, either before unmount or before every next update.\n *   Calling behavior is controlled by deps argument.\n * \n *   (rum/use-effect!\n *  (fn []\n *    (.addEventListener js/window \"load\" handler)\n *    #(.removeEventListener js/window \"load\" handler))\n *  []) ;; empty deps collection instructs React to run setup-fn only once on initial render\n *      ;; and cleanup-fn only once before unmounting\n * \n *   Read more at https://reactjs.org/docs/hooks-effect.html\n */\nrum.core.use_effect_BANG_ = (function rum$core$use_effect_BANG_(var_args){\nvar G__29035 = arguments.length;\nswitch (G__29035) {\ncase 1:\nreturn rum.core.use_effect_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rum.core.use_effect_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rum.core.use_effect_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (setup_fn){\nreturn React.useEffect((function (){\nvar or__4120__auto__ = (setup_fn.cljs$core$IFn$_invoke$arity$0 ? setup_fn.cljs$core$IFn$_invoke$arity$0() : setup_fn.call(null));\nif(cljs.core.truth_(or__4120__auto__)){\nreturn or__4120__auto__;\n} else {\nreturn undefined;\n}\n}));\n}));\n\n(rum.core.use_effect_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (setup_fn,deps){\nreturn React.useEffect((function (){\nvar or__4120__auto__ = (setup_fn.cljs$core$IFn$_invoke$arity$0 ? setup_fn.cljs$core$IFn$_invoke$arity$0() : setup_fn.call(null));\nif(cljs.core.truth_(or__4120__auto__)){\nreturn or__4120__auto__;\n} else {\nreturn undefined;\n}\n}),((cljs.core.array_QMARK_(deps))?deps:cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(deps)));\n}));\n\n(rum.core.use_effect_BANG_.cljs$lang$maxFixedArity = 2);\n\n/**\n * (rum/use-layout-effect!\n *  (fn []\n *    (.addEventListener js/window \"load\" handler)\n *    #(.removeEventListener js/window \"load\" handler))\n *  []) ;; empty deps collection instructs React to run setup-fn only once on initial render\n *      ;; and cleanup-fn only once before unmounting\n * \n *   Read more at https://reactjs.org/docs/hooks-effect.html\n */\nrum.core.use_layout_effect_BANG_ = (function rum$core$use_layout_effect_BANG_(var_args){\nvar G__29037 = arguments.length;\nswitch (G__29037) {\ncase 1:\nreturn rum.core.use_layout_effect_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rum.core.use_layout_effect_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rum.core.use_layout_effect_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (setup_fn){\nreturn React.useLayoutEffect((function (){\nvar or__4120__auto__ = (setup_fn.cljs$core$IFn$_invoke$arity$0 ? setup_fn.cljs$core$IFn$_invoke$arity$0() : setup_fn.call(null));\nif(cljs.core.truth_(or__4120__auto__)){\nreturn or__4120__auto__;\n} else {\nreturn undefined;\n}\n}));\n}));\n\n(rum.core.use_layout_effect_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (setup_fn,deps){\nreturn React.useLayoutEffect((function (){\nvar or__4120__auto__ = (setup_fn.cljs$core$IFn$_invoke$arity$0 ? setup_fn.cljs$core$IFn$_invoke$arity$0() : setup_fn.call(null));\nif(cljs.core.truth_(or__4120__auto__)){\nreturn or__4120__auto__;\n} else {\nreturn undefined;\n}\n}),((cljs.core.array_QMARK_(deps))?deps:cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(deps)));\n}));\n\n(rum.core.use_layout_effect_BANG_.cljs$lang$maxFixedArity = 2);\n\n/**\n * Takes callback function and returns memoized variant, memoization is done based on provided deps collection.\n * \n *   (rum/defc button < rum/static\n *  [{:keys [on-click]} text]\n *  [:button {:on-click on-click}\n *    text])\n * \n *   (rum/defc app [v]\n *  (let [on-click (rum/use-callback #(do-stuff v) [v])]\n *    ;; because on-click callback is memoized here based on v argument\n *    ;; the callback won't be re-created on every render, unless v changes\n *    ;; which means that underlying `button` component won't re-render wastefully\n *    [button {:on-click on-click}\n *      \"press me\"]))\n * \n *   Read more at https://reactjs.org/docs/hooks-reference.html#usecallback\n */\nrum.core.use_callback = (function rum$core$use_callback(var_args){\nvar G__29041 = arguments.length;\nswitch (G__29041) {\ncase 1:\nreturn rum.core.use_callback.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rum.core.use_callback.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rum.core.use_callback.cljs$core$IFn$_invoke$arity$1 = (function (callback){\nreturn React.useCallback(callback);\n}));\n\n(rum.core.use_callback.cljs$core$IFn$_invoke$arity$2 = (function (callback,deps){\nreturn React.useCallback(callback,((cljs.core.array_QMARK_(deps))?deps:cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(deps)));\n}));\n\n(rum.core.use_callback.cljs$lang$maxFixedArity = 2);\n\n/**\n * Takes a function, memoizes it based on provided deps collection and executes immediately returning a result.\n *   Read more at https://reactjs.org/docs/hooks-reference.html#usememo\n */\nrum.core.use_memo = (function rum$core$use_memo(var_args){\nvar G__29046 = arguments.length;\nswitch (G__29046) {\ncase 1:\nreturn rum.core.use_memo.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rum.core.use_memo.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rum.core.use_memo.cljs$core$IFn$_invoke$arity$1 = (function (f){\nreturn React.useMemo(f);\n}));\n\n(rum.core.use_memo.cljs$core$IFn$_invoke$arity$2 = (function (f,deps){\nreturn React.useMemo(f,((cljs.core.array_QMARK_(deps))?deps:cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(deps)));\n}));\n\n(rum.core.use_memo.cljs$lang$maxFixedArity = 2);\n\n/**\n * Takes a value and puts it into a mutable container which is persisted for the full lifetime of the component.\n *   https://reactjs.org/docs/hooks-reference.html#useref\n */\nrum.core.use_ref = (function rum$core$use_ref(initial_value){\nreturn React.useRef(initial_value);\n});\nrum.core.create_ref = (function rum$core$create_ref(){\nreturn React.createRef();\n});\n/**\n * Takes a ref returned from use-ref and returns its current value.\n */\nrum.core.deref = (function rum$core$deref(ref){\nreturn ref.current;\n});\nrum.core.set_ref_BANG_ = (function rum$core$set_ref_BANG_(ref,value){\nreturn (ref.current = value);\n});\n/**\n * Main server-side rendering method. Given component, returns HTML string with static markup of that component.\n *   Serve that string to the browser and [[hydrate]] same Rum component over it. React will be able to reuse already existing DOM and will initialize much faster.\n *   No opts are supported at the moment.\n */\nrum.core.render_html = (function rum$core$render_html(var_args){\nvar G__29052 = arguments.length;\nswitch (G__29052) {\ncase 1:\nreturn rum.core.render_html.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn rum.core.render_html.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(rum.core.render_html.cljs$core$IFn$_invoke$arity$1 = (function (element){\nreturn rum.core.render_html.cljs$core$IFn$_invoke$arity$2(element,null);\n}));\n\n(rum.core.render_html.cljs$core$IFn$_invoke$arity$2 = (function (element,opts){\nif((!((cljs.core._STAR_target_STAR_ === \"nodejs\")))){\nreturn ReactDOMServer.renderToString(element);\n} else {\nvar react_dom_server = require(\"react-dom/server\");\nreturn react_dom_server.renderToString(element);\n}\n}));\n\n(rum.core.render_html.cljs$lang$maxFixedArity = 2);\n\n/**\n * Same as [[render-html]] but returned string has nothing React-specific.\n *   This allows Rum to be used as traditional server-side templating engine.\n */\nrum.core.render_static_markup = (function rum$core$render_static_markup(src){\nif((!((cljs.core._STAR_target_STAR_ === \"nodejs\")))){\nreturn ReactDOMServer.renderToStaticMarkup(src);\n} else {\nvar react_dom_server = require(\"react-dom/server\");\nreturn react_dom_server.renderToStaticMarkup(src);\n}\n});\nrum.core.adapt_class_helper = (function rum$core$adapt_class_helper(type,attrs,children){\nvar args = [type,attrs].concat(children);\nreturn React.createElement.apply(React,args);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","rum/core.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",13],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader"],"~:use-macros",null,"~:excludes",["~#set",["~$ref","~$deref"]],"~:macros",["^ ","~$defcontext",["^ ","~:arglists",["~#list",[["~$name"],["^G","~$value"]]],"~:doc","cljs: Creates React context with initial value set to `value`.\n  clj: Create dynamic var bound to `value`.","^7",336,"^8",1,"^6","rum/core.clj","~:name","~$rum.core/defcontext","~:ns","~$rum.core","~:macro",true],"~$defc",["^ ","^E",["^F",[["~$&","~$body"]]],"^I","~```\n   (defc name doc-string? (< mixins+)? [ params* ] render-body+)\n   ```\n  \n   Defc does couple of things:\n   \n     1. Wraps body into daiquiri/compile-html\n     2. Generates render function from that\n     3. Takes render function and mixins, builds React class from them\n     4. Using that class, generates constructor fn [args]->ReactElement\n     5. Defines top-level var with provided name and assigns ctor to it\n  \n   Usage:\n   \n   ```\n   (rum/defc label < rum/static [t]\n     [:div t])\n  \n   ;; creates React class\n   ;; adds mixin rum/static\n   ;; defines ctor fn (defn label [t] ...) => element\n  \n   (label \"text\") ;; => returns React element built with label class\n   ```","^7",71,"^8",1,"^6","rum/core.clj","^J","~$rum.core/defc","^L","^M","^N",true],"~$fragment",["^ ","^E",["^F",[["~$attrs","~$&","~$children"]]],"^I","(rum/fragment [button] [input] ...)","^7",432,"^8",1,"^6","rum/core.clj","^J","~$rum.core/fragment","^L","^M","^N",true],"~$defcs",["^ ","^E",["^F",[["~$&","^P"]]],"^I","~```\n   (defcs name doc-string? (< mixins+)? [ state-arg params* ] render-body+)\n   ```\n   \n   Same as [[defc]], but render will take additional first argument: component state.","^7",99,"^8",1,"^6","rum/core.clj","^J","~$rum.core/defcs","^L","^M","^N",true],"~$adapt-class",["^ ","^E",["^F",[["~$type","^S","~$&","^T"]]],"^I","Adapts JavaScript React component for usage in Rum components.\n\n  [:div\n    (rum/adapt-class js/Button {:on-click f} \"press me\")]\n\n  When using in Clojure JVM calls *render-js-component* to render a fallback.\n  See example in rum.examples.js-components ns","^7",451,"^8",1,"^6","rum/core.clj","^J","~$rum.core/adapt-class","^L","^M","^N",true],"~$suspense",["^ ","^E",["^F",[[["^ ","~:keys",["~$fallback"]],"~$child"]]],"^I","(rum/require-lazy '[app.components :refer [alert]])\n\n  (rum/defc root []\n    (suspense {:fallback \"Hello!\"}\n      (alert \"ARGUMENT\")))\n\n  See a complete example here https://github.com/roman01la/rum-code-splitting","^7",414,"^8",1,"^6","rum/core.clj","^J","~$rum.core/suspense","^L","^M","^N",true],"~$set-warn-on-interpretation!",["^ ","^E",["^F",[["~$v"]]],"^7",15,"^8",1,"^6","rum/core.clj","^J","~$rum.core/set-warn-on-interpretation!","^L","^M","^N",true],"~$with-context",["^ ","^E",["^F",[[["~$sym","~$context"],"~$&","^P"]]],"^I","(with-context [value ctx]\n     [:div value])","^7",352,"^8",1,"^6","rum/core.clj","^J","~$rum.core/with-context","^L","^M","^N",true],"~$bind-context",["^ ","^E",["^F",[[["^18","^H"],"~$&","^P"]]],"^I","(bind-context [context value]\n    ...)","^7",361,"^8",1,"^6","rum/core.clj","^J","~$rum.core/bind-context","^L","^M","^N",true],"~$defcc",["^ ","^E",["^F",[["~$&","^P"]]],"^I","~```\n   (defcc name doc-string? (< mixins+)? [ comp-arg params* ] render-body+)\n   ```\n\n   Same as [[defc]], but render will take additional first argument: react component.","^7",108,"^8",1,"^6","rum/core.clj","^J","~$rum.core/defcc","^L","^M","^N",true]],"^J","^M","~:op","^L","~:imports",null,"~:requires",["^ ","~$set","~$clojure.set","~$goog.functions","^1C","~$rum.cursor","^1D","~$fns","^1C","~$cljs.core","^1F","~$gobj","~$goog.object","~$goog","^1I","^1H","^1H","~$cljsjs.react","^1J","~$rum.derived-atom","^1K","^1B","^1B","~$cljsjs.react.dom","^1L","~$util","~$rum.util","^1N","^1N","~$cursor","^1D","~$daiquiri.core","^1P","~$rum.specs","^1Q","~$derived-atom","^1K"],"~:seen",["^@",["~:require","~:require-macros"]],"~:uses",["^ ","~$collect","^1N","~$collect*","^1N","~$call-all","^1N"],"^1U",["^ ","^M","^M","^1F","^1F"],"~:form",["^F",["~$ns","^M",["^F",["~:refer-clojure","~:exclude",["^A","^B"]]],["^F",["^1U","^M"]],["^F",["^1T",["^1J"],["^1L"],["^1H","~:as","^1G"],["^1C","^22","^1E"],["^1B","^22","^1A"],["^1Q"],["^1P"],["^1D","^22","^1O"],["^1N","^22","^1M","~:refer",["^1W","^1X","^1Y"]],["^1K","^22","^1R"]]]]],"~:flags",["^ ","^1U",["^@",[]],"^1T",["^@",[]]],"~:js-deps",["^ "],"~:deps",["^1I","^1F","^1J","^1L","^1H","^1C","^1B","^1Q","^1P","^1D","^1N","^1K"]],"^L","^M","~:resource-id",["~:shadow.build.classpath/resource","rum/core.cljs"],"~:compiled-at",1616837742807,"~:resource-name","rum/core.cljs","~:warnings",[],"~:source","(ns rum.core\n  (:refer-clojure :exclude [ref deref])\n  (:require-macros rum.core)\n  (:require\n   [cljsjs.react]\n   [cljsjs.react.dom]\n   [goog.object :as gobj]\n   [goog.functions :as fns]\n   [clojure.set :as set]\n   [rum.specs]\n   [daiquiri.core]\n   [rum.cursor :as cursor]\n   [rum.util :as util :refer [collect collect* call-all]]\n   [rum.derived-atom :as derived-atom]))\n\n(defn state\n  \"Given React component, returns Rum state associated with it.\"\n  [comp]\n  (gobj/get (.-state comp) \":rum/state\"))\n\n(defn- extend! [obj props]\n  (doseq [[k v] props\n          :when (some? v)]\n    (gobj/set obj (name k) (clj->js v))))\n\n(defn- build-class [render mixins display-name]\n  (when ^boolean goog.DEBUG\n    (let [mixins (->> mixins (mapcat keys) set)]\n      (assert (set/subset? mixins rum.specs/mixins)\n              (str display-name \" declares invalid mixin keys \"\n                   (set/difference mixins rum.specs/mixins) \", \"\n                   \"did you mean one of \" rum.specs/mixins))\n      (->> (select-keys rum.specs/deprecated-mixins mixins)\n           vals\n           (run! #(.warn js/console %)))))\n  (let [init           (collect   :init mixins)             ;; state props -> state\n        before-render  (collect* [:will-mount\n                                  :unsafe/will-mount\n                                  :before-render] mixins)   ;; state -> state\n        render         render                               ;; state -> [dom state]\n        wrap-render    (collect   :wrap-render mixins)      ;; render-fn -> render-fn\n        wrapped-render (reduce #(%2 %1) render wrap-render)\n        did-mount      (collect* [:did-mount                ;; state -> state\n                                  :after-render] mixins)    ;; state -> state\n        will-remount    (collect* [:did-remount             ;; state -> state\n                                   :will-remount] mixins)   ;; old-state state -> state\n        should-update  (collect   :should-update mixins)    ;; old-state state -> boolean\n        before-update  (collect* [:unsafe/will-update\n                                  :unsafe/will-update\n                                  :before-render] mixins)   ;; state -> state\n        did-update     (collect* [:did-update               ;; state -> state\n                                  :after-render] mixins)    ;; state -> state\n        did-catch      (collect   :did-catch mixins)        ;; state error info -> state\n        will-unmount   (collect   :will-unmount mixins)     ;; state -> state\n        child-context  (collect   :child-context mixins)    ;; state -> child-context\n        class-props    (reduce merge (collect :class-properties mixins))  ;; custom prototype properties and methods\n        static-props   (reduce merge (collect :static-properties mixins)) ;; custom static properties and methods\n\n        ctor           (fn [props]\n                         (this-as this\n                                  (gobj/set this \"state\"\n                                            #js {\":rum/state\"\n                                                 (-> (gobj/get props \":rum/initial-state\")\n                                                     (assoc :rum/react-component this)\n                                                     (call-all init props)\n                                                     volatile!)})\n                                  (.call js/React.Component this props)))\n        _              (goog/inherits ctor js/React.Component)\n        prototype      (gobj/get ctor \"prototype\")]\n\n    (when-not (empty? before-render)\n      (gobj/set prototype \"UNSAFE_componentWillMount\"\n                (fn []\n                  (this-as this\n                    (vswap! (state this) call-all before-render)))))\n\n    (when-not (empty? did-mount)\n      (gobj/set prototype \"componentDidMount\"\n                (fn []\n                  (this-as this\n                           (vswap! (state this) call-all did-mount)))))\n\n    (gobj/set prototype \"UNSAFE_componentWillReceiveProps\"\n              (fn [next-props]\n                (this-as this\n                         (let [old-state  @(state this)\n                               state      (merge old-state\n                                                 (gobj/get next-props \":rum/initial-state\"))\n                               next-state (reduce #(%2 old-state %1) state will-remount)]\n            ;; allocate new volatile so that we can access both old and new states in shouldComponentUpdate\n                           (.setState this #js {\":rum/state\" (volatile! next-state)})))))\n\n    (when-not (empty? should-update)\n      (gobj/set prototype \"shouldComponentUpdate\"\n                (fn [next-props next-state]\n                  (this-as this\n                           (let [old-state @(state this)\n                                 new-state @(gobj/get next-state \":rum/state\")]\n                             (or (some #(% old-state new-state) should-update) false))))))\n\n    (when-not (empty? before-update)\n      (gobj/set prototype \"UNSAFE_componentWillUpdate\"\n                (fn [_ next-state]\n                  (this-as this\n                    (let [new-state (gobj/get next-state \":rum/state\")]\n                      (vswap! new-state call-all before-update))))))\n\n    (gobj/set prototype \"render\"\n              (fn []\n                (this-as this\n                         (let [state (state this)\n                               [dom next-state] (wrapped-render @state)]\n                           (vreset! state next-state)\n                           dom))))\n\n    (when-not (empty? did-update)\n      (gobj/set prototype \"componentDidUpdate\"\n                (fn [_ _]\n                  (this-as this\n                           (vswap! (state this) call-all did-update)))))\n\n    (when-not (empty? did-catch)\n      (gobj/set prototype \"componentDidCatch\"\n                (fn [error info]\n                  (this-as this\n                           (vswap! (state this) call-all did-catch error {:rum/component-stack (gobj/get info \"componentStack\")})\n                           (.forceUpdate this)))))\n\n    (gobj/set prototype \"componentWillUnmount\"\n              (fn []\n                (this-as this\n                         (when-not (empty? will-unmount)\n                           (vswap! (state this) call-all will-unmount))\n                         (gobj/set this \":rum/unmounted?\" true))))\n\n    (when-not (empty? child-context)\n      (gobj/set prototype \"getChildContext\"\n                (fn []\n                  (this-as this\n                           (let [state @(state this)]\n                             (clj->js (transduce (map #(% state)) merge {} child-context)))))))\n\n    (extend! prototype class-props)\n    (gobj/set ctor \"displayName\" display-name)\n    (extend! ctor static-props)\n    ctor))\n\n(defn- set-meta! [c]\n  (let [f #(let [ctr (c)]\n             (.apply ctr ctr (js-arguments)))]\n    (specify! f IMeta (-meta [_] (meta (c))))\n    f))\n\n(defn lazy-build\n  \"Wraps component construction in a way so that Google Closure Compiler\n   can properly recognize and elide unused components. The extra `set-meta`\n   fn is needed so that the compiler can properly detect that all functions\n   are side effect free.\"\n  [ctor render mixins display-name]\n  (let [bf #(ctor render mixins display-name) ;; Avoid IIFE\n        c  (fns/cacheReturnValue bf)]\n    (set-meta! c)))\n\n(defn- build-ctor [render mixins display-name]\n  (let [class  (build-class render mixins display-name)\n        key-fn (first (collect :key-fn mixins))\n        ctor   (if (some? key-fn)\n                 (fn [& args]\n                   (let [props #js {\":rum/initial-state\" {:rum/args args}\n                                    \"key\" (apply key-fn args)}]\n                     (js/React.createElement class props)))\n                 (fn [& args]\n                   (let [props #js {\":rum/initial-state\" {:rum/args args}}]\n                     (js/React.createElement class props))))]\n    (with-meta ctor {:rum/class class})))\n\n(declare static)\n\n(defn- memo-compare-props [prev-props next-props]\n  (= (aget prev-props \":rum/args\")\n     (aget next-props \":rum/args\")))\n\n(defn react-memo [f]\n  (if-some [memo (.-memo js/React)]\n    (memo f memo-compare-props)\n    f))\n\n(defn ^:no-doc build-defc [render-body mixins display-name]\n  (cond\n    (= mixins [static])\n    (let [class (fn [props]\n                  (apply render-body (aget props \":rum/args\")))\n          _     (aset class \"displayName\" display-name)\n          memo-class (react-memo class)\n          ctor  (fn [& args]\n                  (.createElement js/React memo-class #js {\":rum/args\" args}))]\n      (with-meta ctor {:rum/class memo-class}))\n\n    (empty? mixins)\n    (let [class (fn [props]\n                  (apply render-body (aget props \":rum/args\")))\n          _     (aset class \"displayName\" display-name)\n          ctor  (fn [& args]\n                  (.createElement js/React class #js {\":rum/args\" args}))]\n      (with-meta ctor {:rum/class class}))\n\n    :else\n    (let [render (fn [state] [(apply render-body (:rum/args state)) state])]\n      (build-ctor render mixins display-name))))\n\n(defn ^:no-doc build-defcs [render-body mixins display-name]\n  (let [render (fn [state] [(apply render-body state (:rum/args state)) state])]\n    (build-ctor render mixins display-name)))\n\n(defn ^:no-doc build-defcc [render-body mixins display-name]\n  (let [render (fn [state] [(apply render-body (:rum/react-component state) (:rum/args state)) state])]\n    (build-ctor render mixins display-name)))\n\n(defn request-render [comp]\n  (.forceUpdate comp))\n\n(defn mount\n  \"Add element to the DOM tree. Idempotent. Subsequent mounts will just update element.\"\n  [element node]\n  (js/ReactDOM.render element node)\n  nil)\n\n(defn unmount\n  \"Removes component from the DOM tree.\"\n  [node]\n  (js/ReactDOM.unmountComponentAtNode node))\n\n(defn hydrate\n  \"Same as [[mount]] but must be called on DOM tree already rendered by a server via [[render-html]].\"\n  [element node]\n  (js/ReactDOM.hydrate element node))\n\n(defn portal\n  \"Render `element` in a DOM `node` that is ouside of current DOM hierarchy.\"\n  [element node]\n  (js/ReactDOM.createPortal element node))\n\n(defn create-context [default-value]\n  (.createContext js/React default-value))\n\n\n;; initialization\n\n\n(defn with-key\n  \"Adds React key to element.\n   \n   ```\n   (rum/defc label [text] [:div text])\n\n   (-> (label)\n       (rum/with-key \\\"abc\\\")\n       (rum/mount js/document.body))\n   ```\"\n  [element key]\n  (js/React.cloneElement element #js {\"key\" key} nil))\n\n(defn with-ref\n  \"Adds React ref (string or callback) to element.\n   \n   ```\n   (rum/defc label [text] [:div text])\n\n   (-> (label)\n       (rum/with-ref \\\"abc\\\")\n       (rum/mount js/document.body))\n   ```\"\n  [element ref]\n  (js/React.cloneElement element #js {\"ref\" ref} nil))\n\n(defn dom-node\n  \"Usage of this function is discouraged. Use :ref callback instead.\n  Given state, returns top-level DOM node of component. Call it during lifecycle callbacks. Can’t be called during render.\"\n  [state]\n  (js/ReactDOM.findDOMNode (:rum/react-component state)))\n\n(defn ref\n  \"DEPRECATED: Use :ref (fn [dom-or-nil]) callback instead. See rum issue #124\n  Given state and ref handle, returns React component.\"\n  [state key]\n  (-> state :rum/react-component (aget \"refs\") (aget (name key))))\n\n(defn ref-node\n  \"DEPRECATED: Use :ref (fn [dom-or-nil]) callback instead. See rum issue #124\n  Given state and ref handle, returns DOM node associated with ref.\"\n  [state key]\n  (js/ReactDOM.findDOMNode (ref state (name key))))\n\n\n;; static mixin\n\n\n(def static\n  \"Mixin. Will avoid re-render if none of component’s arguments have changed. Does equality check (`=`) on all arguments.\n  \n   ```\n   (rum/defc label < rum/static\n     [text]\n     [:div text])\n     \n   (rum/mount (label \\\"abc\\\") js/document.body)\n\n   ;; def != abc, will re-render\n   (rum/mount (label \\\"def\\\") js/document.body)\n\n   ;; def == def, won’t re-render\n   (rum/mount (label \\\"def\\\") js/document.body)\n   ```\"\n  {:should-update\n   (fn [old-state new-state]\n     (not= (:rum/args old-state) (:rum/args new-state)))})\n\n\n;; local mixin\n\n\n(defn local\n  \"Mixin constructor. Adds an atom to component’s state that can be used to keep stuff during component’s lifecycle. Component will be re-rendered if atom’s value changes. Atom is stored under user-provided key or under `:rum/local` by default.\n  \n   ```\n   (rum/defcs counter < (rum/local 0 :cnt)\n     [state label]\n     (let [*cnt (:cnt state)]\n       [:div {:on-click (fn [_] (swap! *cnt inc))}\n         label @*cnt]))\n   \n   (rum/mount (counter \\\"Click count: \\\"))\n   ```\"\n  ([initial] (local initial :rum/local))\n  ([initial key]\n   {:will-mount\n    (fn [state]\n      (let [local-state (atom initial)\n            component   ^js (:rum/react-component state)]\n        (add-watch local-state key\n                   (fn [_ _ p n]\n                     (when (not= p n)\n                       (.forceUpdate component))))\n        (assoc state key local-state)))}))\n\n\n;; reactive mixin\n\n\n(def ^:private ^:dynamic *reactions*)\n\n(def reactive\n  \"Mixin. Works in conjunction with [[react]].\n  \n   ```\n   (rum/defc comp < rum/reactive\n     [*counter]\n     [:div (rum/react counter)])\n\n   (def *counter (atom 0))\n   (rum/mount (comp *counter) js/document.body)\n   (swap! *counter inc) ;; will force comp to re-render\n   ```\"\n  {:init\n   (fn [state props]\n     (assoc state :rum.reactive/key (random-uuid)))\n   :wrap-render\n   (fn [render-fn]\n     (fn [state]\n       (binding [*reactions* (volatile! #{})]\n         (let [comp             (:rum/react-component state)\n               old-reactions    (:rum.reactive/refs state #{})\n               [dom next-state] (render-fn state)\n               new-reactions    @*reactions*\n               key              (:rum.reactive/key state)]\n           (doseq [ref old-reactions]\n             (when-not (contains? new-reactions ref)\n               (remove-watch ref key)))\n           (doseq [ref new-reactions]\n             (when-not (contains? old-reactions ref)\n               (add-watch ref key\n                          (fn [_ _ p n]\n                            (when (not= p n)\n                              (.forceUpdate comp))))))\n           [dom (assoc next-state :rum.reactive/refs new-reactions)]))))\n   :will-unmount\n   (fn [state]\n     (let [key (:rum.reactive/key state)]\n       (doseq [ref (:rum.reactive/refs state)]\n         (remove-watch ref key)))\n     (dissoc state :rum.reactive/refs :rum.reactive/key))})\n\n(defn react\n  \"Works in conjunction with [[reactive]] mixin. Use this function instead of `deref` inside render, and your component will subscribe to changes happening to the derefed atom.\"\n  [ref]\n  (assert *reactions* \"rum.core/react is only supported in conjunction with rum.core/reactive\")\n  (vswap! *reactions* conj ref)\n  @ref)\n\n\n;; derived-atom\n\n\n(def ^{:style/indent 2\n       :arglists '([refs key f] [refs key f opts])\n       :doc \"Use this to create “chains” and acyclic graphs of dependent atoms.\n   \n             [[derived-atom]] will:\n          \n             - Take N “source” refs.\n             - Set up a watch on each of them.\n             - Create “sink” atom.\n             - When any of source refs changes:\n                - re-run function `f`, passing N dereferenced values of source refs.\n                - `reset!` result of `f` to the sink atom.\n             - Return sink atom.\n\n             Example:\n\n             ```\n             (def *a (atom 0))\n             (def *b (atom 1))\n             (def *x (derived-atom [*a *b] ::key\n                       (fn [a b]\n                         (str a \\\":\\\" b))))\n             \n             (type *x)  ;; => clojure.lang.Atom\n             (deref *x) ;; => \\\"0:1\\\"\n             \n             (swap! *a inc)\n             (deref *x) ;; => \\\"1:1\\\"\n             \n             (reset! *b 7)\n             (deref *x) ;; => \\\"1:7\\\"\n             ```\n\n             Arguments:\n          \n             - `refs` - sequence of source refs,\n             - `key`  - unique key to register watcher, same as in `clojure.core/add-watch`,\n             - `f`    - function that must accept N arguments (same as number of source refs) and return a value to be written to the sink ref. Note: `f` will be called with already dereferenced values,\n             - `opts` - optional. Map of:\n               - `:ref` - use this as sink ref. By default creates new atom,\n               - `:check-equals?` - Defaults to `true`. If equality check should be run on each source update: `(= @sink (f new-vals))`. When result of recalculating `f` equals to the old value, `reset!` won’t be called. Set to `false` if checking for equality can be expensive.\"}\n  derived-atom derived-atom/derived-atom)\n\n\n;; cursors\n\n\n(defn cursor-in\n  \"Given atom with deep nested value and path inside it, creates an atom-like structure\n   that can be used separately from main atom, but will sync changes both ways:\n  \n   ```\n   (def db (atom { :users { \\\"Ivan\\\" { :age 30 }}}))\n   \n   (def ivan (rum/cursor db [:users \\\"Ivan\\\"]))\n   (deref ivan) ;; => { :age 30 }\n   \n   (swap! ivan update :age inc) ;; => { :age 31 }\n   (deref db) ;; => { :users { \\\"Ivan\\\" { :age 31 }}}\n   \n   (swap! db update-in [:users \\\"Ivan\\\" :age] inc)\n   ;; => { :users { \\\"Ivan\\\" { :age 32 }}}\n   \n   (deref ivan) ;; => { :age 32 }\n   ```\n  \n   Returned value supports `deref`, `swap!`, `reset!`, watches and metadata.\n  \n   The only supported option is `:meta`\"\n  [ref path & {:as options}]\n  (if (instance? cursor/Cursor ref)\n    (cursor/Cursor. (.-ref ref) (into (.-path ref) path) (:meta options))\n    (cursor/Cursor. ref path (:meta options))))\n\n(defn cursor\n  \"Same as [[cursor-in]] but accepts single key instead of path vector.\"\n  [ref key & options]\n  (apply cursor-in ref [key] options))\n\n;; hooks\n\n(defn ^array use-state\n  \"Takes initial value or value returning fn and returns a tuple of [value set-value!],\n  where `value` is current state value and `set-value!` is a function that schedules re-render.\n\n  (let [[value set-state!] (rum/use-state 0)]\n    [:button {:on-click #(set-state! (inc value))}\n      value])\"\n  [value-or-fn]\n  (.useState js/React value-or-fn))\n\n(defn ^array use-reducer\n  \"Takes reducing function and initial state value.\n  Returns a tuple of [value dispatch!], where `value` is current state value and `dispatch` is a function that schedules re-render.\n\n  (defmulti value-reducer (fn [value event] event))\n\n  (defmethod value-reducer :inc [value _]\n    (inc value))\n\n  (let [[value dispatch!] (rum/use-reducer value-reducer 0)]\n    [:button {:on-click #(dispatch! :inc)}\n      value])\n\n  Read more at https://reactjs.org/docs/hooks-reference.html#usereducer\"\n  ([reducer-fn initial-value]\n   (.useReducer js/React #(reducer-fn %1 %2) initial-value identity)))\n\n(defn use-effect!\n  \"Takes setup-fn that executes either on the first render or after every update.\n  The function may return cleanup-fn to cleanup the effect, either before unmount or before every next update.\n  Calling behavior is controlled by deps argument.\n\n  (rum/use-effect!\n    (fn []\n      (.addEventListener js/window \\\"load\\\" handler)\n      #(.removeEventListener js/window \\\"load\\\" handler))\n    []) ;; empty deps collection instructs React to run setup-fn only once on initial render\n        ;; and cleanup-fn only once before unmounting\n\n  Read more at https://reactjs.org/docs/hooks-effect.html\"\n  ([setup-fn]\n   (.useEffect js/React #(or (setup-fn) js/undefined)))\n  ([setup-fn deps]\n   (->> (if (array? deps) deps (into-array deps))\n        (.useEffect js/React #(or (setup-fn) js/undefined)))))\n\n(defn use-layout-effect!\n  \"(rum/use-layout-effect!\n    (fn []\n      (.addEventListener js/window \\\"load\\\" handler)\n      #(.removeEventListener js/window \\\"load\\\" handler))\n    []) ;; empty deps collection instructs React to run setup-fn only once on initial render\n        ;; and cleanup-fn only once before unmounting\n\n  Read more at https://reactjs.org/docs/hooks-effect.html\"\n  ([setup-fn]\n   (.useLayoutEffect js/React #(or (setup-fn) js/undefined)))\n  ([setup-fn deps]\n   (->> (if (array? deps) deps (into-array deps))\n        (.useLayoutEffect js/React #(or (setup-fn) js/undefined)))))\n\n(defn use-callback\n  \"Takes callback function and returns memoized variant, memoization is done based on provided deps collection.\n\n  (rum/defc button < rum/static\n    [{:keys [on-click]} text]\n    [:button {:on-click on-click}\n      text])\n\n  (rum/defc app [v]\n    (let [on-click (rum/use-callback #(do-stuff v) [v])]\n      ;; because on-click callback is memoized here based on v argument\n      ;; the callback won't be re-created on every render, unless v changes\n      ;; which means that underlying `button` component won't re-render wastefully\n      [button {:on-click on-click}\n        \\\"press me\\\"]))\n\n  Read more at https://reactjs.org/docs/hooks-reference.html#usecallback\"\n  ([callback]\n   (.useCallback js/React callback))\n  ([callback deps]\n   (->> (if (array? deps) deps (into-array deps))\n        (.useCallback js/React callback))))\n\n(defn use-memo\n  \"Takes a function, memoizes it based on provided deps collection and executes immediately returning a result.\n  Read more at https://reactjs.org/docs/hooks-reference.html#usememo\"\n  ([f]\n   (.useMemo js/React f))\n  ([f deps]\n   (->> (if (array? deps) deps (into-array deps))\n        (.useMemo js/React f))))\n\n(defn use-ref\n  \"Takes a value and puts it into a mutable container which is persisted for the full lifetime of the component.\n  https://reactjs.org/docs/hooks-reference.html#useref\"\n  ([initial-value]\n   (.useRef js/React initial-value)))\n\n;; Refs\n\n(defn create-ref []\n  (.createRef js/React))\n\n(defn deref\n  \"Takes a ref returned from use-ref and returns its current value.\"\n  [^js ref]\n  (.-current ref))\n\n(defn set-ref! [^js ref value]\n  (set! (.-current ref) value))\n\n;;; Server-side rendering\n\n;; Roman. For Node.js runtime we require \"react-dom/server\" for you\n;; In the browser you have to add cljsjs/react-dom-server yourself\n\n(defn render-html\n  \"Main server-side rendering method. Given component, returns HTML string with static markup of that component.\n  Serve that string to the browser and [[hydrate]] same Rum component over it. React will be able to reuse already existing DOM and will initialize much faster.\n  No opts are supported at the moment.\"\n  ([element]\n   (render-html element nil))\n  ([element opts]\n   (if-not (identical? *target* \"nodejs\")\n     (.renderToString js/ReactDOMServer element)\n     (let [react-dom-server (js/require \"react-dom/server\")]\n       (.renderToString react-dom-server element)))))\n\n(defn render-static-markup\n  \"Same as [[render-html]] but returned string has nothing React-specific.\n  This allows Rum to be used as traditional server-side templating engine.\"\n  [src]\n  (if-not (identical? *target* \"nodejs\")\n    (.renderToStaticMarkup js/ReactDOMServer src)\n    (let [react-dom-server (js/require \"react-dom/server\")]\n      (.renderToStaticMarkup react-dom-server src))))\n\n;; JS components adapter\n(defn adapt-class-helper [type attrs children]\n  (let [args (.concat #js [type attrs] children)]\n    (.apply (.-createElement js/React) js/React args)))\n","~:reader-features",["^@",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["rum.core/state","comp","goog.object/get","rum.core/extend!","obj","props","seq__28884","cljs.core/seq","chunk__28886","count__28887","i__28888","vec__28896","cljs.core.nth","temp__5735__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__28899","cljs.core/first","cljs.core/next","k","v","goog.object/set","cljs.core/name","cljs.core/clj->js","rum.core/build-class","render","mixins","display-name","js/goog.DEBUG","cljs.core.mapcat","cljs.core/keys","cljs.core/set","js/Error","clojure.set/subset?","rum.specs/mixins","clojure.set.difference","cljs.core/select-keys","rum.specs/deprecated-mixins","cljs.core/vals","p1__28902#","cljs.core/run!","js/console","init","rum.util/collect","before-render","rum.util/collect*","wrap-render","wrapped-render","p1__28904#","p2__28903#","cljs.core.reduce","did-mount","will-remount","should-update","before-update","did-update","did-catch","will-unmount","child-context","class-props","cljs.core/merge","static-props","ctor","this","cljs.core.assoc","rum.util.call_all","cljs.core/volatile!","js/React.Component","_","goog/inherits","prototype","cljs.core/empty?","cljs.core/-vreset!","cljs.core/-deref","rum.util/call-all","next-props","cljs.core/deref","old-state","state","cljs.core.merge","next-state","p1__28906#","p2__28905#","new-state","or__4120__auto__","p1__28907#","cljs.core/some","vec__28927","dom","G__28930","cljs.core/vreset!","error","info","cljs.core.transduce","p1__28908#","cljs.core.map","rum.core/set-meta!","c","f","ctr","x28931","cljs.core/PROTOCOL_SENTINEL","cljs.core/meta","rum.core/lazy-build","bf","goog.functions/cacheReturnValue","rum.core/build-ctor","class","key-fn","args","cljs.core.apply","js/React.createElement","cljs.core/with-meta","rum.core/memo-compare-props","prev-props","cljs.core._EQ_","rum.core/react-memo","temp__5737__auto__","memo","js/React","rum.core/build-defc","render-body","rum.core/static","memo-class","rum.core/build-defcs","rum.core/build-defcc","rum.core/request-render","rum.core/mount","element","node","js/ReactDOM.render","rum.core/unmount","js/ReactDOM.unmountComponentAtNode","rum.core/hydrate","js/ReactDOM.hydrate","rum.core/portal","js/ReactDOM.createPortal","rum.core/create-context","default-value","rum.core/with-key","key","js/React.cloneElement","rum.core/with-ref","ref","rum.core/dom-node","js/ReactDOM.findDOMNode","rum.core/ref","rum.core/ref-node","cljs.core.not_EQ_","var_args","G__28946","rum.core/local","initial","rum.core.local","local-state","cljs.core.atom","component","cljs.core/add-watch","p","n","rum.core/reactive","cljs.core/random-uuid","render-fn","*reactions*-orig-val__28964","*reactions*-temp-val__28965","rum.core/*reactions*","vec__28968","old-reactions","new-reactions","seq__28971","chunk__28972","count__28973","i__28974","cljs.core/contains?","cljs.core/remove-watch","seq__28980","chunk__28981","count__28982","i__28983","seq__29015","chunk__29016","count__29017","i__29018","cljs.core.dissoc","rum.core/react","cljs.core.conj","rum.core/derived-atom","rum.derived-atom/derived-atom","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","rum.core/cursor-in","p__29026","map__29027","cljs.core/hash-map","seq29023","G__29024","G__29025","self__4717__auto__","path","options","rum.cursor/Cursor","cljs.core.into","rum.core/cursor","seq29029","G__29030","G__29031","rum.core/use-state","value-or-fn","rum.core/use-reducer","reducer-fn","initial-value","p1__29032#","p2__29033#","cljs.core/identity","G__29035","rum.core/use-effect!","setup-fn","js/undefined","deps","cljs.core/array?","cljs.core.into_array","G__29037","rum.core/use-layout-effect!","G__29041","rum.core/use-callback","callback","G__29046","rum.core/use-memo","rum.core/use-ref","rum.core/create-ref","rum.core/deref","rum.core/set-ref!","value","G__29052","rum.core/render-html","rum.core.render_html","opts","cljs.core/*target*","js/ReactDOMServer","react-dom-server","js/require","rum.core/render-static-markup","src","rum.core/adapt-class-helper","type","attrs","children"]],"~:used-vars",["^@",["~$cljs.core/array?","~$rum.core/extend!","~$cljs.core/PROTOCOL_SENTINEL","~$rum.core/portal","~$rum.core/react-memo","~$js/React","~$js/undefined","~$rum.core/memo-compare-props","~$rum.core/mount","~$rum.core/use-state","~$cljs.core/=","~$rum.core/create-ref","~$cljs.core/into-array","~$rum.core/use-ref","~$rum.core/adapt-class-helper","~$cljs.core/-deref","~$rum.core/create-context","~$rum.core/set-meta!","~$rum.core/local","~$cljs.core/count","~$cljs.core/deref","~$cljs.core/transduce","~$cljs.core/apply","~$cljs.core/identity","~$rum.core/set-ref!","~$rum.core/use-effect!","~$cljs.core/vreset!","~$cljs.core/not=","~$cljs.core/dissoc","~$rum.core/use-reducer","~$rum.core/ref","~$cljs.core/chunk-rest","~$js/React.cloneElement","~$rum.specs/mixins","~$js/console","~$js/ReactDOM.unmountComponentAtNode","~$rum.core/with-key","~$rum.core/render-static-markup","~$cljs.core/empty?","~$rum.core/build-defcs","~$rum.core/*reactions*","~$cljs.core/contains?","~$rum.core/use-layout-effect!","~$cljs.core/into","~$rum.core/unmount","~$cljs.core/conj","~$rum.core/request-render","~$cljs.core/run!","~$cljs.core/with-meta","~$js/ReactDOM.createPortal","~$cljs.core/map","~$rum.core/lazy-build","~$cljs.core/volatile!","~$cljs.core/vals","~$rum.core/static","~$goog.object/set","~$rum.specs/deprecated-mixins","~$cljs.core/clj->js","~$clojure.set/difference","~$js/ReactDOM.findDOMNode","~$cljs.core/-vreset!","~$rum.core/with-ref","~$rum.derived-atom/derived-atom","~$js/ReactDOM.render","~$cljs.core/meta","~$rum.core/cursor-in","~$rum.core/react","~$js/ReactDOMServer","~$js/goog.DEBUG","~$clojure.set/subset?","~$cljs.core/*target*","~$cljs.core/next","~$js/ReactDOM.hydrate","~$cljs.core/select-keys","~$rum.core/reactive","~$rum.core/use-memo","~$rum.util/call-all","~$cljs.core/not","~$rum.cursor/Cursor","~$rum.core/state","~$cljs.core/assoc","~$rum.core/build-defcc","~$rum.core/derived-atom","~$rum.core/ref-node","~$rum.core/dom-node","~$rum.core/cursor","~$rum.core/hydrate","~$rum.core/render-html","~$cljs.core/name","~$rum.core/build-defc","~$cljs.core/merge","~$js/Error","~$cljs.core/random-uuid","~$rum.core/build-class","~$cljs.core/add-watch","~$rum.core/build-ctor","~$rum.core/deref","~$cljs.core/remove-watch","~$rum.core/use-callback","~$goog.object/get","~$cljs.core/chunked-seq?"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1616266888000,1616266888000,499162500000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^@",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^28","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","~$goog.dom.HtmlElement"]]],["^28","rum/util.cljc"],["6a9f66ddae2e7dd5033f582ce14678234e1bf10e","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^1F"]]],["^28","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","~$goog.array","~$goog.asserts"]]],["^28","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I"]]],["^28","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^50","~$goog.labs.userAgent.util","^1H","~$goog.string.internal"]]],["^28","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^51","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^53"]]],["^28","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^51"]]],["^4S","node_modules/prop-types/checkPropTypes.js"],[1616266888000,1616266888000,1549836454000,"^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^4X","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^28","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I"]]],["^28","daiquiri/normalize.cljc"],["6a9f66ddae2e7dd5033f582ce14678234e1bf10e","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^1F","~$clojure.string","~$daiquiri.util"]]],["^28","rum/derived_atom.cljc"],["6a9f66ddae2e7dd5033f582ce14678234e1bf10e","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^1F"]]],["^28","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I"]]],["^28","daiquiri/interpreter.cljs"],["6a9f66ddae2e7dd5033f582ce14678234e1bf10e","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^1F","^5;","~$daiquiri.normalize","^5<","^1J","^1H"]]],["^4S","node_modules/scheduler/cjs/scheduler.development.js"],[1616266888000,1616266888000,499162500000,"^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^4X"]]],["^4S","node_modules/scheduler/cjs/scheduler.production.min.js"],[1616266888000,1616266888000,499162500000,"^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^4X"]]],["^28","daiquiri/util.cljc"],["6a9f66ddae2e7dd5033f582ce14678234e1bf10e","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^1F","^1B","^5;"]]],["^28","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I"]]],["^4S","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],[1616266888000,1616266888000,499162500000,"^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^4X"]]],["^4S","node_modules/react/index.js"],[1616266888000,1616266888000,499162500000,"^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^4X","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^28","shadow/js.js"],["b5965253ddc4f3d4c60b115d0e17f1186b6e0820","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I"]]],["^28","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I"]]],["^28","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^51"]]],["^4S","node_modules/react-dom/cjs/react-dom.production.min.js"],[1616266888000,1616266888000,499162500000,"^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^4X","~$module$node_modules$react$index","~$module$node_modules$object_assign$index","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1616266888000,1616266888000,1616266886000],["^4S","node_modules/react/cjs/react.development.js"],[1616266888000,1616266888000,499162500000,"^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^4X","^5A","~$module$node_modules$prop_types$checkPropTypes"]]],["^28","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^51","~$goog.reflect"]]],["^28","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^51","~$goog.html.trustedtypes","^56","^57","^58","^59"]]],["^28","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I"]]],["^4S","node_modules/scheduler/cjs/scheduler-tracing.development.js"],[1616266888000,1616266888000,499162500000,"^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^4X"]]],["^28","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I"]]],["^28","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^50","^51","~$goog.html.SafeUrl","^58","^59","^53"]]],["^28","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^51","~$goog.dom.asserts","^1C","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^5G","^55","~$goog.html.uncheckedconversions","^58","^53"]]],["^28","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^28","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^50","^51","~$goog.dom.TagName","~$goog.dom.tags","^5J","^5K","~$goog.html.SafeStyleSheet","^5G","^55","^5F","^56","^57","~$goog.labs.userAgent.browser","^1H","^58","^59","^53"]]],["^28","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^1H"]]],["^4S","node_modules/scheduler/index.js"],[1616266888000,1616266888000,499162500000,"^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^4X","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^28","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^28","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^50","^51","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^28","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I"]]],["^4S","node_modules/object-assign/index.js"],[1616266888000,1616266888000,1484580833000,"^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^4X"]]],["^28","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I"]]],["^28","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",[]]],["^28","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^50","^1H"]]],["^28","cljsjs/react.cljs"],["9ba9f8ed128a3c607c8b81217a06b6098d2484d1","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^1F","^5@"]]],["^28","clojure/string.cljs"],["0c4eab981c50277797c5c1d0925757fdebf90fa8","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^1F","^5W","~$goog.string.StringBuffer"]]],["^28","rum/specs.cljc"],["6a9f66ddae2e7dd5033f582ce14678234e1bf10e","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^1F"]]],["^4S","node_modules/react/cjs/react.production.min.js"],[1616266888000,1616266888000,499162500000,"^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^4X","^5A"]]],["^28","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","~$goog.dom.safe","^5L","^58","^53"]]],["^28","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I"]]],["^28","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^53"]]],["^28","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I"]]],["^28","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^50","^51","^1C","~$goog.math"]]],["^28","rum/cursor.cljs"],["6a9f66ddae2e7dd5033f582ce14678234e1bf10e","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^1F"]]],["^28","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^51","^5I","^5J","^5K","^5Q","^5G","^55","^58","^53"]]],["^4S","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1616266888000,1616266888000,1549571078000,"^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^4X"]]],["^28","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I"]]],["^28","cljs/core.cljs"],["0c4eab981c50277797c5c1d0925757fdebf90fa8","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","~$goog.math.Long","~$goog.math.Integer","^5W","^1H","^50","~$goog.Uri","^61"]]],["^28","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^51","^5F","^58","^59"]]],["^28","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^50","^51","^5K","^1H","^58","^59","^53"]]],["^28","cljsjs/react/dom.cljs"],["9ba9f8ed128a3c607c8b81217a06b6098d2484d1","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^1F","^5@","~$module$node_modules$react_dom$index"]]],["^28","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^5E"]]],["^4S","node_modules/scheduler/tracing.js"],[1616266888000,1616266888000,499162500000,"^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^4X","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^4S","node_modules/react-dom/cjs/react-dom.development.js"],[1616266888000,1616266888000,499162500000,"^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^4X","^5@","^5A","^5B","^5D","~$module$node_modules$scheduler$tracing"]]],["^28","clojure/set.cljs"],["0c4eab981c50277797c5c1d0925757fdebf90fa8","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^1F"]]],["^28","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^50","^51","^5W"]]],["^28","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^51","^59"]]],["^28","rum/core.cljs"],["6a9f66ddae2e7dd5033f582ce14678234e1bf10e","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^1F","^1J","^1L","^1H","^1C","^1B","^1Q","^1P","^1D","^1N","^1K"]]],["^28","daiquiri/core.cljs"],["6a9f66ddae2e7dd5033f582ce14678234e1bf10e","^4T",["^ ","^4U",null,"^4V",["^@",[]],"^4W",["^1I","^1F","~$daiquiri.interpreter","^1J"]]]]],"~:clj-info",["^ ","jar:file:/home/jari/.m2/repository/org/clojure/clojurescript/1.10.741/clojurescript-1.10.741.jar!/cljs/util.cljc",1616266886000,"jar:file:/home/jari/.m2/repository/rum/rum/0.12.4/rum-0.12.4.jar!/rum/cursor.clj",1616834157000,"jar:file:/home/jari/.m2/repository/org/clojure/clojurescript/1.10.741/clojurescript-1.10.741.jar!/cljs/core.cljc",1616266886000,"jar:file:/home/jari/.m2/repository/org/clojure/clojurescript/1.10.741/clojurescript-1.10.741.jar!/cljs/source_map/base64_vlq.clj",1616266886000,"jar:file:/home/jari/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1616266884000,"jar:file:/home/jari/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1616266884000,"jar:file:/home/jari/.m2/repository/rum/rum/0.12.4/rum-0.12.4.jar!/daiquiri/util.cljc",1616834157000,"jar:file:/home/jari/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1616266884000,"jar:file:/home/jari/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1616266883000,"jar:file:/home/jari/.m2/repository/rum/rum/0.12.4/rum-0.12.4.jar!/daiquiri/compiler.clj",1616834157000,"jar:file:/home/jari/.m2/repository/org/clojure/clojurescript/1.10.741/clojurescript-1.10.741.jar!/cljs/analyzer.cljc",1616266886000,"jar:file:/home/jari/.m2/repository/rum/rum/0.12.4/rum-0.12.4.jar!/rum/core.clj",1616834157000,"jar:file:/home/jari/.m2/repository/org/clojure/clojurescript/1.10.741/clojurescript-1.10.741.jar!/cljs/compiler.cljc",1616266886000,"jar:file:/home/jari/.m2/repository/rum/rum/0.12.4/rum-0.12.4.jar!/rum/server_render.clj",1616834157000,"jar:file:/home/jari/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1616266883000,"jar:file:/home/jari/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1616266884000,"jar:file:/home/jari/.m2/repository/rum/rum/0.12.4/rum-0.12.4.jar!/rum/derived_atom.cljc",1616834157000,"jar:file:/home/jari/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1616266883000,"jar:file:/home/jari/.m2/repository/org/clojure/clojurescript/1.10.741/clojurescript-1.10.741.jar!/cljs/js_deps.cljc",1616266886000,"jar:file:/home/jari/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1616266884000,"jar:file:/home/jari/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1616266884000,"jar:file:/home/jari/.m2/repository/rum/rum/0.12.4/rum-0.12.4.jar!/daiquiri/normalize.cljc",1616834157000,"jar:file:/home/jari/.m2/repository/org/clojure/clojurescript/1.10.741/clojurescript-1.10.741.jar!/cljs/externs.clj",1616266886000,"jar:file:/home/jari/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1616266883000,"jar:file:/home/jari/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1616266883000,"jar:file:/home/jari/.m2/repository/org/clojure/clojurescript/1.10.741/clojurescript-1.10.741.jar!/cljs/tagged_literals.cljc",1616266886000,"jar:file:/home/jari/.m2/repository/org/clojure/clojurescript/1.10.741/clojurescript-1.10.741.jar!/cljs/env.cljc",1616266886000,"jar:file:/home/jari/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1616266883000,"jar:file:/home/jari/.m2/repository/org/clojure/clojurescript/1.10.741/clojurescript-1.10.741.jar!/cljs/source_map.clj",1616266886000,"jar:file:/home/jari/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1616266884000,"jar:file:/home/jari/.m2/repository/org/clojure/clojurescript/1.10.741/clojurescript-1.10.741.jar!/cljs/source_map/base64.clj",1616266886000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","rum/core.cljs","^7",1,"^8",5,"^9",1,"^:",13],"^;",["^ ","^<","^="],"^>",null,"^?",["^@",["^A","^B"]],"^C",["^ ","^D",["^ ","^E",["^F",[["^G"],["^G","^H"]]],"^I","cljs: Creates React context with initial value set to `value`.\n  clj: Create dynamic var bound to `value`.","^7",336,"^8",1,"^6","rum/core.clj","^J","^K","^L","^M","^N",true],"^O",["^ ","^E",["^F",[["~$&","^P"]]],"^I","~```\n   (defc name doc-string? (< mixins+)? [ params* ] render-body+)\n   ```\n  \n   Defc does couple of things:\n   \n     1. Wraps body into daiquiri/compile-html\n     2. Generates render function from that\n     3. Takes render function and mixins, builds React class from them\n     4. Using that class, generates constructor fn [args]->ReactElement\n     5. Defines top-level var with provided name and assigns ctor to it\n  \n   Usage:\n   \n   ```\n   (rum/defc label < rum/static [t]\n     [:div t])\n  \n   ;; creates React class\n   ;; adds mixin rum/static\n   ;; defines ctor fn (defn label [t] ...) => element\n  \n   (label \"text\") ;; => returns React element built with label class\n   ```","^7",71,"^8",1,"^6","rum/core.clj","^J","^Q","^L","^M","^N",true],"^R",["^ ","^E",["^F",[["^S","~$&","^T"]]],"^I","(rum/fragment [button] [input] ...)","^7",432,"^8",1,"^6","rum/core.clj","^J","^U","^L","^M","^N",true],"^V",["^ ","^E",["^F",[["~$&","^P"]]],"^I","~```\n   (defcs name doc-string? (< mixins+)? [ state-arg params* ] render-body+)\n   ```\n   \n   Same as [[defc]], but render will take additional first argument: component state.","^7",99,"^8",1,"^6","rum/core.clj","^J","^W","^L","^M","^N",true],"^X",["^ ","^E",["^F",[["^Y","^S","~$&","^T"]]],"^I","Adapts JavaScript React component for usage in Rum components.\n\n  [:div\n    (rum/adapt-class js/Button {:on-click f} \"press me\")]\n\n  When using in Clojure JVM calls *render-js-component* to render a fallback.\n  See example in rum.examples.js-components ns","^7",451,"^8",1,"^6","rum/core.clj","^J","^Z","^L","^M","^N",true],"^[",["^ ","^E",["^F",[[["^ ","^10",["^11"]],"^12"]]],"^I","(rum/require-lazy '[app.components :refer [alert]])\n\n  (rum/defc root []\n    (suspense {:fallback \"Hello!\"}\n      (alert \"ARGUMENT\")))\n\n  See a complete example here https://github.com/roman01la/rum-code-splitting","^7",414,"^8",1,"^6","rum/core.clj","^J","^13","^L","^M","^N",true],"^14",["^ ","^E",["^F",[["~$v"]]],"^7",15,"^8",1,"^6","rum/core.clj","^J","^15","^L","^M","^N",true],"^16",["^ ","^E",["^F",[[["^17","^18"],"~$&","^P"]]],"^I","(with-context [value ctx]\n     [:div value])","^7",352,"^8",1,"^6","rum/core.clj","^J","^19","^L","^M","^N",true],"^1:",["^ ","^E",["^F",[[["^18","^H"],"~$&","^P"]]],"^I","(bind-context [context value]\n    ...)","^7",361,"^8",1,"^6","rum/core.clj","^J","^1;","^L","^M","^N",true],"^1<",["^ ","^E",["^F",[["~$&","^P"]]],"^I","~```\n   (defcc name doc-string? (< mixins+)? [ comp-arg params* ] render-body+)\n   ```\n\n   Same as [[defc]], but render will take additional first argument: react component.","^7",108,"^8",1,"^6","rum/core.clj","^J","^1=","^L","^M","^N",true]],"~:shadow/js-access-properties",["^@",["createElement","hydrate","createPortal","renderToStaticMarkup","cloneElement","findDOMNode","render","unmountComponentAtNode","Component","renderToString"]],"^J","^M","~:shadow/js-requires",["^@",["react-dom/server"]],"^1?",null,"^1@",["^ ","^1A","^1B","^1C","^1C","^1D","^1D","^1E","^1C","^1F","^1F","^1G","^1H","^1I","^1I","^1H","^1H","^1J","^1J","^1K","^1K","^1B","^1B","^1L","^1L","^1M","^1N","^1N","^1N","^1O","^1D","^1P","^1P","^1Q","^1Q","^1R","^1K"],"^1S",["^@",["^1T","^1U"]],"~:shadow/js-access-global",["^@",["require","ReactDOMServer","React","ReactDOM","undefined","Error"]],"^1V",["^ ","^1W","^1N","^1X","^1N","^1Y","^1N"],"~:defs",["^ ","~$adapt-class-helper",["^ ","~:protocol-inline",null,"^5",["^ ","^6","rum/core.cljs","^7",624,"^8",7,"^9",624,"^:",25,"^E",["^F",["~$quote",["^F",[["^Y","^S","^T"]]]]]],"^J","^2R","^6","rum/core.cljs","^:",25,"~:method-params",["^F",[["^Y","^S","^T"]]],"~:protocol-impl",null,"~:arglists-meta",["^F",[null,null]],"^8",1,"~:variadic?",false,"^7",624,"~:ret-tag","~$js","^9",624,"~:max-fixed-arity",3,"~:fn-var",true,"^E",["^F",["^77",["^F",[["^Y","^S","^T"]]]]]],"~$use-ref",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",578,"^8",7,"^9",578,"^:",14,"^E",["^F",["^77",["^F",[["~$initial-value"]]]]],"^I","Takes a value and puts it into a mutable container which is persisted for the full lifetime of the component.\n  https://reactjs.org/docs/hooks-reference.html#useref"],"^J","^2Q","^6","rum/core.cljs","^:",14,"^78",["^F",[["^7A"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",578,"^7<","^7=","^9",578,"^7>",1,"^7?",true,"^E",["^F",["^77",["^F",[["^7A"]]]]],"^I","Takes a value and puts it into a mutable container which is persisted for the full lifetime of the component.\n  https://reactjs.org/docs/hooks-reference.html#useref"],"~$mount",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",222,"^8",7,"^9",222,"^:",12,"^E",["^F",["^77",["^F",[["~$element","~$node"]]]]],"^I","Add element to the DOM tree. Idempotent. Subsequent mounts will just update element."],"^J","^2L","^6","rum/core.cljs","^:",12,"^78",["^F",[["^7C","^7D"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",222,"^7<","~$clj-nil","^9",222,"^7>",2,"^7?",true,"^E",["^F",["^77",["^F",[["^7C","^7D"]]]]],"^I","Add element to the DOM tree. Idempotent. Subsequent mounts will just update element."],"~$react-memo",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",183,"^8",7,"^9",183,"^:",17,"^E",["^F",["^77",["^F",[["~$f"]]]]]],"^J","^2H","^6","rum/core.cljs","^:",17,"^78",["^F",[["~$f"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",183,"^7<",["^@",[null,"~$any"]],"^9",183,"^7>",1,"^7?",true,"^E",["^F",["^77",["^F",[["~$f"]]]]]],"~$unmount",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",228,"^8",7,"^9",228,"^:",14,"^E",["^F",["^77",["^F",[["^7D"]]]]],"^I","Removes component from the DOM tree."],"^J","^3D","^6","rum/core.cljs","^:",14,"^78",["^F",[["^7D"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",228,"^7<","^7=","^9",228,"^7>",1,"^7?",true,"^E",["^F",["^77",["^F",[["^7D"]]]]],"^I","Removes component from the DOM tree."],"~$local",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",322,"^8",7,"^9",322,"^:",12,"^E",["^F",["^77",["^F",[["~$initial"],["^7J","~$key"]]]]],"^I","Mixin constructor. Adds an atom to component’s state that can be used to keep stuff during component’s lifecycle. Component will be re-rendered if atom’s value changes. Atom is stored under user-provided key or under `:rum/local` by default.\n  \n   ```\n   (rum/defcs counter < (rum/local 0 :cnt)\n     [state label]\n     (let [*cnt (:cnt state)]\n       [:div {:on-click (fn [_] (swap! *cnt inc))}\n         label @*cnt]))\n   \n   (rum/mount (counter \"Click count: \"))\n   ```","~:top-fn",["^ ","^7;",false,"~:fixed-arity",2,"^7>",2,"^78",[["^7J"],["^7J","^7K"]],"^E",["^F",[["^7J"],["^7J","^7K"]]],"^7:",["^F",[null,null]]]],"^J","^2V","^6","rum/core.cljs","^:",12,"^7L",["^ ","^7;",false,"^7M",2,"^7>",2,"^78",[["^7J"],["^7J","^7K"]],"^E",["^F",[["^7J"],["^7J","^7K"]]],"^7:",["^F",[null,null]]],"^78",[["^7J"],["^7J","^7K"]],"^79",null,"^7M",2,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"~:methods",[["^ ","^7M",1,"^7;",false,"~:tag","^7G"],["^ ","^7M",2,"^7;",false,"^7O","~$cljs.core/IMap"]],"^7",322,"^9",322,"^7>",2,"^7?",true,"^E",["^F",[["^7J"],["^7J","^7K"]]],"^I","Mixin constructor. Adds an atom to component’s state that can be used to keep stuff during component’s lifecycle. Component will be re-rendered if atom’s value changes. Atom is stored under user-provided key or under `:rum/local` by default.\n  \n   ```\n   (rum/defcs counter < (rum/local 0 :cnt)\n     [state label]\n     (let [*cnt (:cnt state)]\n       [:div {:on-click (fn [_] (swap! *cnt inc))}\n         label @*cnt]))\n   \n   (rum/mount (counter \"Click count: \"))\n   ```"],"~$create-context",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",243,"^8",7,"^9",243,"^:",21,"^E",["^F",["^77",["^F",[["~$default-value"]]]]]],"^J","^2T","^6","rum/core.cljs","^:",21,"^78",["^F",[["^7R"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",243,"^7<","^7=","^9",243,"^7>",1,"^7?",true,"^E",["^F",["^77",["^F",[["^7R"]]]]]],"~$use-reducer",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",495,"^8",14,"^9",495,"^:",25,"^7O","~$array","^E",["^F",["^77",["^F",[["~$reducer-fn","^7A"]]]]],"^I","Takes reducing function and initial state value.\n  Returns a tuple of [value dispatch!], where `value` is current state value and `dispatch` is a function that schedules re-render.\n\n  (defmulti value-reducer (fn [value event] event))\n\n  (defmethod value-reducer :inc [value _]\n    (inc value))\n\n  (let [[value dispatch!] (rum/use-reducer value-reducer 0)]\n    [:button {:on-click #(dispatch! :inc)}\n      value])\n\n  Read more at https://reactjs.org/docs/hooks-reference.html#usereducer"],"^J","^35","^6","rum/core.cljs","^:",25,"^78",["^F",[["^7U","^7A"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",495,"^7<","^7T","^9",495,"^7>",2,"^7O","^7T","^7?",true,"^E",["^F",["^77",["^F",[["^7U","^7A"]]]]],"^I","Takes reducing function and initial state value.\n  Returns a tuple of [value dispatch!], where `value` is current state value and `dispatch` is a function that schedules re-render.\n\n  (defmulti value-reducer (fn [value event] event))\n\n  (defmethod value-reducer :inc [value _]\n    (inc value))\n\n  (let [[value dispatch!] (rum/use-reducer value-reducer 0)]\n    [:button {:on-click #(dispatch! :inc)}\n      value])\n\n  Read more at https://reactjs.org/docs/hooks-reference.html#usereducer"],"~$memo-compare-props",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",179,"^8",8,"^9",179,"^:",26,"~:private",true,"^E",["^F",["^77",["^F",[["~$prev-props","~$next-props"]]]]]],"^7W",true,"^J","^2K","^6","rum/core.cljs","^:",26,"^78",["^F",[["^7X","^7Y"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",179,"^7<","~$boolean","^9",179,"^7>",2,"^7?",true,"^E",["^F",["^77",["^F",[["^7X","^7Y"]]]]]],"~$use-memo",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",569,"^8",7,"^9",569,"^:",15,"^E",["^F",["^77",["^F",[["~$f"],["~$f","~$deps"]]]]],"^I","Takes a function, memoizes it based on provided deps collection and executes immediately returning a result.\n  Read more at https://reactjs.org/docs/hooks-reference.html#usememo","^7L",["^ ","^7;",false,"^7M",2,"^7>",2,"^78",[["~$f"],["~$f","^80"]],"^E",["^F",[["~$f"],["~$f","^80"]]],"^7:",["^F",[null,null]]]],"^J","^47","^6","rum/core.cljs","^:",15,"^7L",["^ ","^7;",false,"^7M",2,"^7>",2,"^78",[["~$f"],["~$f","^80"]],"^E",["^F",[["~$f"],["~$f","^80"]]],"^7:",["^F",[null,null]]],"^78",[["~$f"],["~$f","^80"]],"^79",null,"^7M",2,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7N",[["^ ","^7M",1,"^7;",false,"^7O","^7="],["^ ","^7M",2,"^7;",false,"^7O","^7="]],"^7",569,"^9",569,"^7>",2,"^7?",true,"^E",["^F",[["~$f"],["~$f","^80"]]],"^I","Takes a function, memoizes it based on provided deps collection and executes immediately returning a result.\n  Read more at https://reactjs.org/docs/hooks-reference.html#usememo"],"~$reactive",["^ ","^5",["^ ","^6","rum/core.cljs","^7",352,"^8",6,"^9",352,"^:",14],"^J","^46","^6","rum/core.cljs","^:",14,"^8",1,"^7",352,"^9",352,"^7O","^7P","^I","Mixin. Works in conjunction with [[react]].\n  \n   ```\n   (rum/defc comp < rum/reactive\n     [*counter]\n     [:div (rum/react counter)])\n\n   (def *counter (atom 0))\n   (rum/mount (comp *counter) js/document.body)\n   (swap! *counter inc) ;; will force comp to re-render\n   ```"],"~$set-meta!",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",148,"^8",8,"^9",148,"^:",17,"^7W",true,"^E",["^F",["^77",["^F",[["~$c"]]]]]],"^7W",true,"^J","^2U","^6","rum/core.cljs","^:",17,"^78",["^F",[["~$c"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",148,"^7<","~$function","^9",148,"^7>",1,"^7?",true,"^E",["^F",["^77",["^F",[["~$c"]]]]]],"~$ref-node",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",288,"^8",7,"^9",288,"^:",15,"^E",["^F",["^77",["^F",[["~$state","^7K"]]]]],"^I","DEPRECATED: Use :ref (fn [dom-or-nil]) callback instead. See rum issue #124\n  Given state and ref handle, returns DOM node associated with ref."],"^J","^4?","^6","rum/core.cljs","^:",15,"^78",["^F",[["^85","^7K"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",288,"^7<","^7=","^9",288,"^7>",2,"^7?",true,"^E",["^F",["^77",["^F",[["^85","^7K"]]]]],"^I","DEPRECATED: Use :ref (fn [dom-or-nil]) callback instead. See rum issue #124\n  Given state and ref handle, returns DOM node associated with ref."],"~$create-ref",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",586,"^8",7,"^9",586,"^:",17,"^E",["^F",["^77",["^F",[[]]]]]],"^J","^2O","^6","rum/core.cljs","^:",17,"^78",["^F",[[]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",586,"^7<","^7=","^9",586,"^7>",0,"^7?",true,"^E",["^F",["^77",["^F",[[]]]]]],"~$use-layout-effect!",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",531,"^8",7,"^9",531,"^:",25,"^E",["^F",["^77",["^F",[["~$setup-fn"],["^88","^80"]]]]],"^I","(rum/use-layout-effect!\n    (fn []\n      (.addEventListener js/window \"load\" handler)\n      #(.removeEventListener js/window \"load\" handler))\n    []) ;; empty deps collection instructs React to run setup-fn only once on initial render\n        ;; and cleanup-fn only once before unmounting\n\n  Read more at https://reactjs.org/docs/hooks-effect.html","^7L",["^ ","^7;",false,"^7M",2,"^7>",2,"^78",[["^88"],["^88","^80"]],"^E",["^F",[["^88"],["^88","^80"]]],"^7:",["^F",[null,null]]]],"^J","^3B","^6","rum/core.cljs","^:",25,"^7L",["^ ","^7;",false,"^7M",2,"^7>",2,"^78",[["^88"],["^88","^80"]],"^E",["^F",[["^88"],["^88","^80"]]],"^7:",["^F",[null,null]]],"^78",[["^88"],["^88","^80"]],"^79",null,"^7M",2,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7N",[["^ ","^7M",1,"^7;",false,"^7O","^7="],["^ ","^7M",2,"^7;",false,"^7O","^7="]],"^7",531,"^9",531,"^7>",2,"^7?",true,"^E",["^F",[["^88"],["^88","^80"]]],"^I","(rum/use-layout-effect!\n    (fn []\n      (.addEventListener js/window \"load\" handler)\n      #(.removeEventListener js/window \"load\" handler))\n    []) ;; empty deps collection instructs React to run setup-fn only once on initial render\n        ;; and cleanup-fn only once before unmounting\n\n  Read more at https://reactjs.org/docs/hooks-effect.html"],"~$react",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",393,"^8",7,"^9",393,"^:",12,"^E",["^F",["^77",["^F",[["^A"]]]]],"^I","Works in conjunction with [[reactive]] mixin. Use this function instead of `deref` inside render, and your component will subscribe to changes happening to the derefed atom."],"^J","^3Z","^6","rum/core.cljs","^:",12,"^78",["^F",[["^A"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",393,"^7<","^7G","^9",393,"^7>",1,"^7?",true,"^E",["^F",["^77",["^F",[["^A"]]]]],"^I","Works in conjunction with [[reactive]] mixin. Use this function instead of `deref` inside render, and your component will subscribe to changes happening to the derefed atom."],"~$render-static-markup",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",614,"^8",7,"^9",614,"^:",27,"^E",["^F",["^77",["^F",[["~$src"]]]]],"^I","Same as [[render-html]] but returned string has nothing React-specific.\n  This allows Rum to be used as traditional server-side templating engine."],"^J","^3=","^6","rum/core.cljs","^:",27,"^78",["^F",[["^8;"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",614,"^7<","^7=","^9",614,"^7>",1,"^7?",true,"^E",["^F",["^77",["^F",[["^8;"]]]]],"^I","Same as [[render-html]] but returned string has nothing React-specific.\n  This allows Rum to be used as traditional server-side templating engine."],"~$lazy-build",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",154,"^8",7,"^9",154,"^:",17,"^E",["^F",["^77",["^F",[["~$ctor","~$render","~$mixins","~$display-name"]]]]],"^I","Wraps component construction in a way so that Google Closure Compiler\n   can properly recognize and elide unused components. The extra `set-meta`\n   fn is needed so that the compiler can properly detect that all functions\n   are side effect free."],"^J","^3K","^6","rum/core.cljs","^:",17,"^78",["^F",[["^8=","^8>","^8?","^8@"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",154,"^7<","^83","^9",154,"^7>",4,"^7?",true,"^E",["^F",["^77",["^F",[["^8=","^8>","^8?","^8@"]]]]],"^I","Wraps component construction in a way so that Google Closure Compiler\n   can properly recognize and elide unused components. The extra `set-meta`\n   fn is needed so that the compiler can properly detect that all functions\n   are side effect free."],"~$request-render",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",219,"^8",7,"^9",219,"^:",21,"^E",["^F",["^77",["^F",[["~$comp"]]]]]],"^J","^3F","^6","rum/core.cljs","^:",21,"^78",["^F",[["^8B"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",219,"^7<","^7G","^9",219,"^7>",1,"^7?",true,"^E",["^F",["^77",["^F",[["^8B"]]]]]],"~$portal",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",238,"^8",7,"^9",238,"^:",13,"^E",["^F",["^77",["^F",[["^7C","^7D"]]]]],"^I","Render `element` in a DOM `node` that is ouside of current DOM hierarchy."],"^J","^2G","^6","rum/core.cljs","^:",13,"^78",["^F",[["^7C","^7D"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",238,"^7<","^7=","^9",238,"^7>",2,"^7?",true,"^E",["^F",["^77",["^F",[["^7C","^7D"]]]]],"^I","Render `element` in a DOM `node` that is ouside of current DOM hierarchy."],"~$with-key",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",250,"^8",7,"^9",250,"^:",15,"^E",["^F",["^77",["^F",[["^7C","^7K"]]]]],"^I","Adds React key to element.\n   \n   ```\n   (rum/defc label [text] [:div text])\n\n   (-> (label)\n       (rum/with-key \"abc\")\n       (rum/mount js/document.body))\n   ```"],"^J","^3<","^6","rum/core.cljs","^:",15,"^78",["^F",[["^7C","^7K"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",250,"^7<","^7=","^9",250,"^7>",2,"^7?",true,"^E",["^F",["^77",["^F",[["^7C","^7K"]]]]],"^I","Adds React key to element.\n   \n   ```\n   (rum/defc label [text] [:div text])\n\n   (-> (label)\n       (rum/with-key \"abc\")\n       (rum/mount js/document.body))\n   ```"],"~$extend!",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",21,"^8",8,"^9",21,"^:",15,"^7W",true,"^E",["^F",["^77",["^F",[["~$obj","~$props"]]]]]],"^7W",true,"^J","^2E","^6","rum/core.cljs","^:",15,"^78",["^F",[["^8F","^8G"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",21,"^7<","^7E","^9",21,"^7>",2,"^7?",true,"^E",["^F",["^77",["^F",[["^8F","^8G"]]]]]],"~$build-defcs",["^ ","~:no-doc",true,"^76",null,"^5",["^ ","^6","rum/core.cljs","^7",211,"^8",16,"^9",211,"^:",27,"^8I",true,"^E",["^F",["^77",["^F",[["~$render-body","^8?","^8@"]]]]]],"^J","^3?","^6","rum/core.cljs","^:",27,"^78",["^F",[["^8J","^8?","^8@"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",211,"^7<",["^@",["~$clj","~$cljs.core/MetaFn","^7E"]],"^9",211,"^7>",3,"^7?",true,"^E",["^F",["^77",["^F",[["^8J","^8?","^8@"]]]]]],"~$*reactions*",["^ ","^5",["^ ","^6","rum/core.cljs","^7",350,"^8",26,"^9",350,"^:",37,"~:dynamic",true,"^7W",true],"^7W",true,"^J","^3@","^6","rum/core.cljs","^:",37,"^8",1,"^8N",true,"^7",350,"^9",350,"^7O","^7G"],"^A",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",282,"^8",7,"^9",282,"^:",10,"^E",["^F",["^77",["^F",[["^85","^7K"]]]]],"^I","DEPRECATED: Use :ref (fn [dom-or-nil]) callback instead. See rum issue #124\n  Given state and ref handle, returns React component."],"^J","^36","^6","rum/core.cljs","^:",10,"^78",["^F",[["^85","^7K"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",282,"^7<","^7G","^9",282,"^7>",2,"^7?",true,"^E",["^F",["^77",["^F",[["^85","^7K"]]]]],"^I","DEPRECATED: Use :ref (fn [dom-or-nil]) callback instead. See rum issue #124\n  Given state and ref handle, returns React component."],"~$set-ref!",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",594,"^8",7,"^9",594,"^:",15,"^E",["^F",["^77",["^F",[["^A","^H"]]]]]],"^J","^30","^6","rum/core.cljs","^:",15,"^78",["^F",[["^A","^H"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",594,"^9",594,"^7>",2,"^7?",true,"^E",["^F",["^77",["^F",[["^A","^H"]]]]]],"~$static",["^ ","^5",["^ ","^6","rum/core.cljs","^7",298,"^8",6,"^9",298,"^:",12],"^J","^3N","^6","rum/core.cljs","^:",12,"^8",1,"^7",298,"^9",298,"^7O","^7P","^I","Mixin. Will avoid re-render if none of component’s arguments have changed. Does equality check (`=`) on all arguments.\n  \n   ```\n   (rum/defc label < rum/static\n     [text]\n     [:div text])\n     \n   (rum/mount (label \"abc\") js/document.body)\n\n   ;; def != abc, will re-render\n   (rum/mount (label \"def\") js/document.body)\n\n   ;; def == def, won’t re-render\n   (rum/mount (label \"def\") js/document.body)\n   ```"],"^1O",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",478,"^8",7,"^9",478,"^:",13,"^E",["^F",["^77",["^F",[["^A","^7K","~$&","~$options"]]]]],"^I","Same as [[cursor-in]] but accepts single key instead of path vector.","^7L",["^ ","^7;",true,"^7M",2,"^7>",2,"^78",[["^F",["^A","^7K","^8Q"]]],"^E",["^F",[["^A","^7K","~$&","^8Q"]]],"^7:",["^F",[null]]]],"^J","^4A","^6","rum/core.cljs","^:",13,"^7L",["^ ","^7;",true,"^7M",2,"^7>",2,"^78",[["^F",["^A","^7K","^8Q"]]],"^E",["^F",[["^A","^7K","~$&","^8Q"]]],"^7:",["^F",[null]]],"^78",[["^F",["^A","^7K","^8Q"]]],"^79",null,"^7M",2,"^7:",["^F",[null]],"^8",1,"^7;",true,"^7N",[["^ ","^7M",2,"^7;",true,"^7O","^7G"]],"^7",478,"^7<","^7G","^9",478,"^7>",2,"^7?",true,"^E",["^F",[["^A","^7K","~$&","^8Q"]]],"^I","Same as [[cursor-in]] but accepts single key instead of path vector."],"^85",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",16,"^8",7,"^9",16,"^:",12,"^E",["^F",["^77",["^F",[["^8B"]]]]],"^I","Given React component, returns Rum state associated with it."],"^J","^4;","^6","rum/core.cljs","^:",12,"^78",["^F",[["^8B"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",16,"^7<","^7G","^9",16,"^7>",1,"^7?",true,"^E",["^F",["^77",["^F",[["^8B"]]]]],"^I","Given React component, returns Rum state associated with it."],"~$cursor-in",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",451,"^8",7,"^9",451,"^:",16,"^E",["^F",["^77",["^F",[["^A","~$path","~$&",["^ ","^22","^8Q"]]]]]],"^I","Given atom with deep nested value and path inside it, creates an atom-like structure\n   that can be used separately from main atom, but will sync changes both ways:\n  \n   ```\n   (def db (atom { :users { \"Ivan\" { :age 30 }}}))\n   \n   (def ivan (rum/cursor db [:users \"Ivan\"]))\n   (deref ivan) ;; => { :age 30 }\n   \n   (swap! ivan update :age inc) ;; => { :age 31 }\n   (deref db) ;; => { :users { \"Ivan\" { :age 31 }}}\n   \n   (swap! db update-in [:users \"Ivan\" :age] inc)\n   ;; => { :users { \"Ivan\" { :age 32 }}}\n   \n   (deref ivan) ;; => { :age 32 }\n   ```\n  \n   Returned value supports `deref`, `swap!`, `reset!`, watches and metadata.\n  \n   The only supported option is `:meta`","^7L",["^ ","^7;",true,"^7M",2,"^7>",2,"^78",[["^F",["^A","^8S",["^ ","^22","^8Q"]]]],"^E",["^F",[["^A","^8S","~$&",["^ ","^22","^8Q"]]]],"^7:",["^F",[null]]]],"^J","^3Y","^6","rum/core.cljs","^:",16,"^7L",["^ ","^7;",true,"^7M",2,"^7>",2,"^78",[["^F",["^A","^8S",["^ ","^22","^8Q"]]]],"^E",["^F",[["^A","^8S","~$&",["^ ","^22","^8Q"]]]],"^7:",["^F",[null]]],"^78",[["^F",["^A","^8S",["^ ","^22","^8Q"]]]],"^79",null,"^7M",2,"^7:",["^F",[null]],"^8",1,"^7;",true,"^7N",[["^ ","^7M",2,"^7;",true,"^7O","^4:"]],"^7",451,"^7<","^7G","^9",451,"^7>",2,"^7?",true,"^E",["^F",[["^A","^8S","~$&",["^ ","^22","^8Q"]]]],"^I","Given atom with deep nested value and path inside it, creates an atom-like structure\n   that can be used separately from main atom, but will sync changes both ways:\n  \n   ```\n   (def db (atom { :users { \"Ivan\" { :age 30 }}}))\n   \n   (def ivan (rum/cursor db [:users \"Ivan\"]))\n   (deref ivan) ;; => { :age 30 }\n   \n   (swap! ivan update :age inc) ;; => { :age 31 }\n   (deref db) ;; => { :users { \"Ivan\" { :age 31 }}}\n   \n   (swap! db update-in [:users \"Ivan\" :age] inc)\n   ;; => { :users { \"Ivan\" { :age 32 }}}\n   \n   (deref ivan) ;; => { :age 32 }\n   ```\n  \n   Returned value supports `deref`, `swap!`, `reset!`, watches and metadata.\n  \n   The only supported option is `:meta`"],"~$use-effect!",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",512,"^8",7,"^9",512,"^:",18,"^E",["^F",["^77",["^F",[["^88"],["^88","^80"]]]]],"^I","Takes setup-fn that executes either on the first render or after every update.\n  The function may return cleanup-fn to cleanup the effect, either before unmount or before every next update.\n  Calling behavior is controlled by deps argument.\n\n  (rum/use-effect!\n    (fn []\n      (.addEventListener js/window \"load\" handler)\n      #(.removeEventListener js/window \"load\" handler))\n    []) ;; empty deps collection instructs React to run setup-fn only once on initial render\n        ;; and cleanup-fn only once before unmounting\n\n  Read more at https://reactjs.org/docs/hooks-effect.html","^7L",["^ ","^7;",false,"^7M",2,"^7>",2,"^78",[["^88"],["^88","^80"]],"^E",["^F",[["^88"],["^88","^80"]]],"^7:",["^F",[null,null]]]],"^J","^31","^6","rum/core.cljs","^:",18,"^7L",["^ ","^7;",false,"^7M",2,"^7>",2,"^78",[["^88"],["^88","^80"]],"^E",["^F",[["^88"],["^88","^80"]]],"^7:",["^F",[null,null]]],"^78",[["^88"],["^88","^80"]],"^79",null,"^7M",2,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7N",[["^ ","^7M",1,"^7;",false,"^7O","^7="],["^ ","^7M",2,"^7;",false,"^7O","^7="]],"^7",512,"^9",512,"^7>",2,"^7?",true,"^E",["^F",[["^88"],["^88","^80"]]],"^I","Takes setup-fn that executes either on the first render or after every update.\n  The function may return cleanup-fn to cleanup the effect, either before unmount or before every next update.\n  Calling behavior is controlled by deps argument.\n\n  (rum/use-effect!\n    (fn []\n      (.addEventListener js/window \"load\" handler)\n      #(.removeEventListener js/window \"load\" handler))\n    []) ;; empty deps collection instructs React to run setup-fn only once on initial render\n        ;; and cleanup-fn only once before unmounting\n\n  Read more at https://reactjs.org/docs/hooks-effect.html"],"~$dom-node",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",276,"^8",7,"^9",276,"^:",15,"^E",["^F",["^77",["^F",[["^85"]]]]],"^I","Usage of this function is discouraged. Use :ref callback instead.\n  Given state, returns top-level DOM node of component. Call it during lifecycle callbacks. Can’t be called during render."],"^J","^4@","^6","rum/core.cljs","^:",15,"^78",["^F",[["^85"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",276,"^7<","^7=","^9",276,"^7>",1,"^7?",true,"^E",["^F",["^77",["^F",[["^85"]]]]],"^I","Usage of this function is discouraged. Use :ref callback instead.\n  Given state, returns top-level DOM node of component. Call it during lifecycle callbacks. Can’t be called during render."],"~$with-ref",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",263,"^8",7,"^9",263,"^:",15,"^E",["^F",["^77",["^F",[["^7C","^A"]]]]],"^I","Adds React ref (string or callback) to element.\n   \n   ```\n   (rum/defc label [text] [:div text])\n\n   (-> (label)\n       (rum/with-ref \"abc\")\n       (rum/mount js/document.body))\n   ```"],"^J","^3U","^6","rum/core.cljs","^:",15,"^78",["^F",[["^7C","^A"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",263,"^7<","^7=","^9",263,"^7>",2,"^7?",true,"^E",["^F",["^77",["^F",[["^7C","^A"]]]]],"^I","Adds React ref (string or callback) to element.\n   \n   ```\n   (rum/defc label [text] [:div text])\n\n   (-> (label)\n       (rum/with-ref \"abc\")\n       (rum/mount js/document.body))\n   ```"],"~$build-defc",["^ ","^8I",true,"^76",null,"^5",["^ ","^6","rum/core.cljs","^7",188,"^8",16,"^9",188,"^:",26,"^8I",true,"^E",["^F",["^77",["^F",[["^8J","^8?","^8@"]]]]]],"^J","^4E","^6","rum/core.cljs","^:",26,"^78",["^F",[["^8J","^8?","^8@"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",188,"^7<",["^@",["^8K","^8L","^7E"]],"^9",188,"^7>",3,"^7?",true,"^E",["^F",["^77",["^F",[["^8J","^8?","^8@"]]]]]],"~$render-html",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",602,"^8",7,"^9",602,"^:",18,"^E",["^F",["^77",["^F",[["^7C"],["^7C","~$opts"]]]]],"^I","Main server-side rendering method. Given component, returns HTML string with static markup of that component.\n  Serve that string to the browser and [[hydrate]] same Rum component over it. React will be able to reuse already existing DOM and will initialize much faster.\n  No opts are supported at the moment.","^7L",["^ ","^7;",false,"^7M",2,"^7>",2,"^78",[["^7C"],["^7C","^8Y"]],"^E",["^F",[["^7C"],["^7C","^8Y"]]],"^7:",["^F",[null,null]]]],"^J","^4C","^6","rum/core.cljs","^:",18,"^7L",["^ ","^7;",false,"^7M",2,"^7>",2,"^78",[["^7C"],["^7C","^8Y"]],"^E",["^F",[["^7C"],["^7C","^8Y"]]],"^7:",["^F",[null,null]]],"^78",[["^7C"],["^7C","^8Y"]],"^79",null,"^7M",2,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7N",[["^ ","^7M",1,"^7;",false,"^7O","^7G"],["^ ","^7M",2,"^7;",false,"^7O","^7="]],"^7",602,"^9",602,"^7>",2,"^7?",true,"^E",["^F",[["^7C"],["^7C","^8Y"]]],"^I","Main server-side rendering method. Given component, returns HTML string with static markup of that component.\n  Serve that string to the browser and [[hydrate]] same Rum component over it. React will be able to reuse already existing DOM and will initialize much faster.\n  No opts are supported at the moment."],"~$hydrate",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",233,"^8",7,"^9",233,"^:",14,"^E",["^F",["^77",["^F",[["^7C","^7D"]]]]],"^I","Same as [[mount]] but must be called on DOM tree already rendered by a server via [[render-html]]."],"^J","^4B","^6","rum/core.cljs","^:",14,"^78",["^F",[["^7C","^7D"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",233,"^7<","^7=","^9",233,"^7>",2,"^7?",true,"^E",["^F",["^77",["^F",[["^7C","^7D"]]]]],"^I","Same as [[mount]] but must be called on DOM tree already rendered by a server via [[render-html]]."],"~$build-defcc",["^ ","^8I",true,"^76",null,"^5",["^ ","^6","rum/core.cljs","^7",215,"^8",16,"^9",215,"^:",27,"^8I",true,"^E",["^F",["^77",["^F",[["^8J","^8?","^8@"]]]]]],"^J","^4=","^6","rum/core.cljs","^:",27,"^78",["^F",[["^8J","^8?","^8@"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",215,"^7<",["^@",["^8K","^8L","^7E"]],"^9",215,"^7>",3,"^7?",true,"^E",["^F",["^77",["^F",[["^8J","^8?","^8@"]]]]]],"^1R",["^ ","^5",["^ ","^6","rum/core.cljs","^7",445,"^8",3,"^9",445,"^:",15,"~:style/indent",2,"^E",["^F",["^77",["^F",[["~$refs","^7K","~$f"],["^91","^7K","~$f","^8Y"]]]]],"^I","Use this to create “chains” and acyclic graphs of dependent atoms.\n   \n             [[derived-atom]] will:\n          \n             - Take N “source” refs.\n             - Set up a watch on each of them.\n             - Create “sink” atom.\n             - When any of source refs changes:\n                - re-run function `f`, passing N dereferenced values of source refs.\n                - `reset!` result of `f` to the sink atom.\n             - Return sink atom.\n\n             Example:\n\n             ```\n             (def *a (atom 0))\n             (def *b (atom 1))\n             (def *x (derived-atom [*a *b] ::key\n                       (fn [a b]\n                         (str a \":\" b))))\n             \n             (type *x)  ;; => clojure.lang.Atom\n             (deref *x) ;; => \"0:1\"\n             \n             (swap! *a inc)\n             (deref *x) ;; => \"1:1\"\n             \n             (reset! *b 7)\n             (deref *x) ;; => \"1:7\"\n             ```\n\n             Arguments:\n          \n             - `refs` - sequence of source refs,\n             - `key`  - unique key to register watcher, same as in `clojure.core/add-watch`,\n             - `f`    - function that must accept N arguments (same as number of source refs) and return a value to be written to the sink ref. Note: `f` will be called with already dereferenced values,\n             - `opts` - optional. Map of:\n               - `:ref` - use this as sink ref. By default creates new atom,\n               - `:check-equals?` - Defaults to `true`. If equality check should be run on each source update: `(= @sink (f new-vals))`. When result of recalculating `f` equals to the old value, `reset!` won’t be called. Set to `false` if checking for equality can be expensive."],"^J","^4>","^6","rum/core.cljs","^:",15,"^8",1,"^7",404,"^90",2,"^9",445,"^E",["^F",["^77",["^F",[["^91","^7K","~$f"],["^91","^7K","~$f","^8Y"]]]]],"^I","Use this to create “chains” and acyclic graphs of dependent atoms.\n   \n             [[derived-atom]] will:\n          \n             - Take N “source” refs.\n             - Set up a watch on each of them.\n             - Create “sink” atom.\n             - When any of source refs changes:\n                - re-run function `f`, passing N dereferenced values of source refs.\n                - `reset!` result of `f` to the sink atom.\n             - Return sink atom.\n\n             Example:\n\n             ```\n             (def *a (atom 0))\n             (def *b (atom 1))\n             (def *x (derived-atom [*a *b] ::key\n                       (fn [a b]\n                         (str a \":\" b))))\n             \n             (type *x)  ;; => clojure.lang.Atom\n             (deref *x) ;; => \"0:1\"\n             \n             (swap! *a inc)\n             (deref *x) ;; => \"1:1\"\n             \n             (reset! *b 7)\n             (deref *x) ;; => \"1:7\"\n             ```\n\n             Arguments:\n          \n             - `refs` - sequence of source refs,\n             - `key`  - unique key to register watcher, same as in `clojure.core/add-watch`,\n             - `f`    - function that must accept N arguments (same as number of source refs) and return a value to be written to the sink ref. Note: `f` will be called with already dereferenced values,\n             - `opts` - optional. Map of:\n               - `:ref` - use this as sink ref. By default creates new atom,\n               - `:check-equals?` - Defaults to `true`. If equality check should be run on each source update: `(= @sink (f new-vals))`. When result of recalculating `f` equals to the old value, `reset!` won’t be called. Set to `false` if checking for equality can be expensive."],"~$use-state",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",485,"^8",14,"^9",485,"^:",23,"^7O","^7T","^E",["^F",["^77",["^F",[["~$value-or-fn"]]]]],"^I","Takes initial value or value returning fn and returns a tuple of [value set-value!],\n  where `value` is current state value and `set-value!` is a function that schedules re-render.\n\n  (let [[value set-state!] (rum/use-state 0)]\n    [:button {:on-click #(set-state! (inc value))}\n      value])"],"^J","^2M","^6","rum/core.cljs","^:",23,"^78",["^F",[["^93"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",485,"^7<","^7T","^9",485,"^7>",1,"^7O","^7T","^7?",true,"^E",["^F",["^77",["^F",[["^93"]]]]],"^I","Takes initial value or value returning fn and returns a tuple of [value set-value!],\n  where `value` is current state value and `set-value!` is a function that schedules re-render.\n\n  (let [[value set-state!] (rum/use-state 0)]\n    [:button {:on-click #(set-state! (inc value))}\n      value])"],"~$build-class",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",26,"^8",8,"^9",26,"^:",19,"^7W",true,"^E",["^F",["^77",["^F",[["^8>","^8?","^8@"]]]]]],"^7W",true,"^J","^4I","^6","rum/core.cljs","^:",19,"^78",["^F",[["^8>","^8?","^8@"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",26,"^7<","^83","^9",26,"^7>",3,"^7?",true,"^E",["^F",["^77",["^F",[["^8>","^8?","^8@"]]]]]],"~$use-callback",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",546,"^8",7,"^9",546,"^:",19,"^E",["^F",["^77",["^F",[["~$callback"],["^96","^80"]]]]],"^I","Takes callback function and returns memoized variant, memoization is done based on provided deps collection.\n\n  (rum/defc button < rum/static\n    [{:keys [on-click]} text]\n    [:button {:on-click on-click}\n      text])\n\n  (rum/defc app [v]\n    (let [on-click (rum/use-callback #(do-stuff v) [v])]\n      ;; because on-click callback is memoized here based on v argument\n      ;; the callback won't be re-created on every render, unless v changes\n      ;; which means that underlying `button` component won't re-render wastefully\n      [button {:on-click on-click}\n        \"press me\"]))\n\n  Read more at https://reactjs.org/docs/hooks-reference.html#usecallback","^7L",["^ ","^7;",false,"^7M",2,"^7>",2,"^78",[["^96"],["^96","^80"]],"^E",["^F",[["^96"],["^96","^80"]]],"^7:",["^F",[null,null]]]],"^J","^4N","^6","rum/core.cljs","^:",19,"^7L",["^ ","^7;",false,"^7M",2,"^7>",2,"^78",[["^96"],["^96","^80"]],"^E",["^F",[["^96"],["^96","^80"]]],"^7:",["^F",[null,null]]],"^78",[["^96"],["^96","^80"]],"^79",null,"^7M",2,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7N",[["^ ","^7M",1,"^7;",false,"^7O","^7="],["^ ","^7M",2,"^7;",false,"^7O","^7="]],"^7",546,"^9",546,"^7>",2,"^7?",true,"^E",["^F",[["^96"],["^96","^80"]]],"^I","Takes callback function and returns memoized variant, memoization is done based on provided deps collection.\n\n  (rum/defc button < rum/static\n    [{:keys [on-click]} text]\n    [:button {:on-click on-click}\n      text])\n\n  (rum/defc app [v]\n    (let [on-click (rum/use-callback #(do-stuff v) [v])]\n      ;; because on-click callback is memoized here based on v argument\n      ;; the callback won't be re-created on every render, unless v changes\n      ;; which means that underlying `button` component won't re-render wastefully\n      [button {:on-click on-click}\n        \"press me\"]))\n\n  Read more at https://reactjs.org/docs/hooks-reference.html#usecallback"],"^B",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",589,"^8",7,"^9",589,"^:",12,"^E",["^F",["^77",["^F",[["^A"]]]]],"^I","Takes a ref returned from use-ref and returns its current value."],"^J","^4L","^6","rum/core.cljs","^:",12,"^78",["^F",[["^A"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",589,"^7<","^7=","^9",589,"^7>",1,"^7?",true,"^E",["^F",["^77",["^F",[["^A"]]]]],"^I","Takes a ref returned from use-ref and returns its current value."],"~$build-ctor",["^ ","^76",null,"^5",["^ ","^6","rum/core.cljs","^7",164,"^8",8,"^9",164,"^:",18,"^7W",true,"^E",["^F",["^77",["^F",[["^8>","^8?","^8@"]]]]]],"^7W",true,"^J","^4K","^6","rum/core.cljs","^:",18,"^78",["^F",[["^8>","^8?","^8@"]]],"^79",null,"^7:",["^F",[null,null]],"^8",1,"^7;",false,"^7",164,"^7<",["^@",["^8K","^8L","^7E"]],"^9",164,"^7>",3,"^7?",true,"^E",["^F",["^77",["^F",[["^8>","^8?","^8@"]]]]]]],"^1U",["^ ","^M","^M","^1F","^1F"],"~:cljs.analyzer/constants",["^ ","^1S",["^@",["~:rum/react-component","~:did-mount","~:will-unmount","^5","~:did-remount","~:rum/class","~:init","~:else","~:did-catch","~:child-context","~:rum.reactive/key","~:rum/args","~:before-render","~:unsafe/will-update","~:did-update","~:key-fn","~:will-mount","~:rum/component-stack","~:class-properties","~:rum/local","~:after-render","~:static-properties","~:wrap-render","~:unsafe/will-mount","~:will-remount","~:rum.reactive/refs","~:should-update"]],"~:order",["^9>","^9H","^9O","^9D","^9N","^9:","^9L","^9<","^9P","^9R","^9E","^9F","^9@","^9;","^9A","^9J","^9M","^99","^9I","^9G","^9C","^9=","^9?","^9K","^9B","^9Q","^5"]],"^24",["^ ","^1U",["^@",[]],"^1T",["^@",[]]],"^25",["^ "],"^26",["^1I","^1F","^1J","^1L","^1H","^1C","^1B","^1Q","^1P","^1D","^1N","^1K"]],"^L","^M","~:ns-specs",["^ "],"~:ns-spec-vars",["^@",[]],"~:compiler-options",["^4R",[["^9V","~:static-fns"],true,["^9V","~:shadow-tweaks"],null,["^9V","~:source-map-inline"],null,["^9V","~:elide-asserts"],false,["^9V","~:optimize-constants"],null,["^9V","^2;"],null,["^9V","~:external-config"],null,["^9V","~:tooling-config"],null,["^9V","~:emit-constants"],null,["^9V","~:load-tests"],null,["^9V","~:form-size-threshold"],null,["^9V","~:infer-externs"],true,["^9V","^2="],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^9V","~:fn-invoke-direct"],null,["^9V","~:source-map"],"/dev/null"]]]