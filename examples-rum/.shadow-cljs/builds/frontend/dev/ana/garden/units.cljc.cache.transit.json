["^ ","~:output",["^ ","~:js","goog.provide('garden.units');\ngoog.require('cljs.core');\ngoog.require('cljs.reader');\ngoog.require('garden.types');\ngoog.require('garden.util');\ngarden.units.length_units = cljs.core.PersistentHashSet.createAsIfByAssoc([new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),new cljs.core.Keyword(null,\"px\",\"px\",281329899),new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(\"%\"),new cljs.core.Keyword(null,\"cm\",\"cm\",540591536),new cljs.core.Keyword(null,\"in\",\"in\",-1531184865)]);\ngarden.units.angular_units = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081),null,new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),null,new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),null,new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229),null], null), null);\ngarden.units.time_units = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"s\",\"s\",1705939918),null,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733),null], null), null);\ngarden.units.frequency_units = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466),null,new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916),null], null), null);\ngarden.units.resolution_units = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843),null,new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236),null,new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832),null], null), null);\n/**\n * True if x is of type CSSUnit.\n */\ngarden.units.unit_QMARK_ = (function garden$units$unit_QMARK_(x){\nreturn (x instanceof garden.types.CSSUnit);\n});\ngarden.units.length_QMARK_ = (function garden$units$length_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.length_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\ngarden.units.angle_QMARK_ = (function garden$units$angle_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.angular_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\ngarden.units.time_QMARK_ = (function garden$units$time_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.time_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\ngarden.units.frequency_QMARK_ = (function garden$units$frequency_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.frequency_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\ngarden.units.resolution_QMARK_ = (function garden$units$resolution_QMARK_(x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core.contains_QMARK_(garden.units.resolution_units,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x))));\n});\n/**\n * Map associating CSS unit types to their conversion values.\n */\ngarden.units.conversions = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),new cljs.core.Keyword(null,\"px\",\"px\",281329899),new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757),new cljs.core.Keyword(null,\"em\",\"em\",707813035),new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916),new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(\"%\"),new cljs.core.Keyword(null,\"s\",\"s\",1705939918),new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081),new cljs.core.Keyword(null,\"cm\",\"cm\",540591536),new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733),new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229),new cljs.core.Keyword(null,\"in\",\"in\",-1531184865)],[new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),(1),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),2.83464567,new cljs.core.Keyword(null,\"px\",\"px\",281329899),3.7795275591], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466),(1)], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),(1),new cljs.core.Keyword(null,\"px\",\"px\",281329899),1.3333333333], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"px\",\"px\",281329899),(1)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757),(1)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"em\",\"em\",707813035),(1)], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916),(1),new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466),0.001], null),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),4.23333333,new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),(1),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),(12),new cljs.core.Keyword(null,\"px\",\"px\",281329899),(16)], null),cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(\"%\"),(1)]),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733),(1000),new cljs.core.Keyword(null,\"s\",\"s\",1705939918),(1)], null),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081),(1),new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229),1.111111111,new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),0.0174532925,new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),0.002777778], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"cm\",\"cm\",540591536),(1),new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),(10),new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),2.36220473,new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),28.3464567,new cljs.core.Keyword(null,\"px\",\"px\",281329899),37.795275591], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),(1)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733),(1)], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),(1),new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),0.159154943], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229),(1),new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012),63.661977237,new cljs.core.Keyword(null,\"turn\",\"turn\",75759344),0.0025], null),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"cm\",\"cm\",540591536),2.54,new cljs.core.Keyword(null,\"in\",\"in\",-1531184865),(1),new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560),25.4,new cljs.core.Keyword(null,\"pc\",\"pc\",512913453),(6),new cljs.core.Keyword(null,\"pt\",\"pt\",556460867),(72),new cljs.core.Keyword(null,\"px\",\"px\",281329899),(96)], null)]);\n/**\n * True if unit is a key of convertable-units, false otherwise.\n */\ngarden.units.convertable_QMARK_ = (function garden$units$convertable_QMARK_(unit){\nreturn cljs.core.contains_QMARK_(garden.units.conversions,unit);\n});\n/**\n * Convert a Unit with :unit left to a Unit with :unit right if possible.\n */\ngarden.units.convert = (function garden$units$convert(p__33620,right){\nvar map__33621 = p__33620;\nvar map__33621__$1 = (((((!((map__33621 == null))))?(((((map__33621.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__33621.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__33621):map__33621);\nvar m = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33621__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar left = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33621__$1,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175));\nif(cljs.core.every_QMARK_(garden.units.convertable_QMARK_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [left,right], null))){\nvar v1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(garden.units.conversions,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [left,right], null));\nvar v2 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(garden.units.conversions,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [right,left], null));\nif(cljs.core.truth_(v1)){\nreturn (new garden.types.CSSUnit(right,(v1 * m),null,null,null));\n} else {\nif(cljs.core.truth_(v2)){\nreturn (new garden.types.CSSUnit(right,(m / v2),null,null,null));\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(garden.util.format.cljs$core$IFn$_invoke$arity$variadic(\"Can't convert %s to %s\",cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.name(left),cljs.core.name(right)], 0)),cljs.core.PersistentArrayMap.EMPTY);\n\n}\n}\n} else {\nvar x = cljs.core.first(cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(garden.units.convertable_QMARK_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [left,right], null)));\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Inconvertible unit \",cljs.core.name(x)].join(''),cljs.core.PersistentArrayMap.EMPTY);\n}\n});\n/**\n * Regular expression for matching a CSS unit. The magnitude\n *           and unit are captured.\n */\ngarden.units.unit_re = /([+-]?\\d+(?:\\.?\\d+)?)(p[xtc]|in|[cm]m|%|r?em|ex|ch|v(?:[wh]|m(?:in|ax))|deg|g?rad|turn|m?s|k?Hz|dp(?:i|cm|px))/;\n/**\n * Read a `CSSUnit` object from the string `s`.\n */\ngarden.units.read_unit = (function garden$units$read_unit(s){\nvar temp__5735__auto__ = cljs.core.re_matches(garden.units.unit_re,s);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar vec__33623 = temp__5735__auto__;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33623,(0),null);\nvar magnitude = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33623,(1),null);\nvar unit = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33623,(2),null);\nvar unit__$1 = cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(unit);\nvar magnitude__$1 = (cljs.core.truth_(magnitude)?cljs.reader.read_string.cljs$core$IFn$_invoke$arity$1(magnitude):(0));\nreturn (new garden.types.CSSUnit(unit__$1,magnitude__$1,null,null,null));\n} else {\nreturn null;\n}\n});\n/**\n * Creates a function for verifying the given unit type.\n */\ngarden.units.make_unit_predicate = (function garden$units$make_unit_predicate(unit){\nreturn (function (x){\nreturn ((garden.units.unit_QMARK_(x)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"unit\",\"unit\",375175175).cljs$core$IFn$_invoke$arity$1(x),unit)));\n});\n});\n/**\n * Creates a function for creating and converting `CSSUnit`s for the\n *   given unit. If a number n is passed the function it will produce a\n *   new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n *   is passed the function will attempt to convert it.\n */\ngarden.units.make_unit_fn = (function garden$units$make_unit_fn(unit){\nreturn (function (x){\nif(typeof x === 'number'){\nreturn (new garden.types.CSSUnit(unit,x,null,null,null));\n} else {\nif(garden.units.unit_QMARK_(x)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((unit.cljs$core$IFn$_invoke$arity$1 ? unit.cljs$core$IFn$_invoke$arity$1(x) : unit.call(null,x)),unit)){\nreturn x;\n} else {\nreturn garden.units.convert(x,unit);\n}\n} else {\nvar ex_message = garden.util.format.cljs$core$IFn$_invoke$arity$variadic(\"Unable to convert from %s to %s\",cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.type.getName(),cljs.core.name(unit)], 0));\nvar ex_data = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"given\",\"given\",716253602),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),cljs.core.type,new cljs.core.Keyword(null,\"unit\",\"unit\",375175175),unit], null)], null);\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(ex_message,ex_data);\n\n}\n}\n});\n});\n/**\n * Create a addition function for adding Units.\n */\ngarden.units.make_unit_adder = (function garden$units$make_unit_adder(unit){\nvar u = garden.units.make_unit_fn(unit);\nreturn (function() {\nvar garden$units$make_unit_adder_$_u_PLUS_ = null;\nvar garden$units$make_unit_adder_$_u_PLUS___0 = (function (){\nreturn u((0));\n});\nvar garden$units$make_unit_adder_$_u_PLUS___1 = (function (x){\nreturn u(x);\n});\nvar garden$units$make_unit_adder_$_u_PLUS___2 = (function (x,y){\nvar map__33640 = u(x);\nvar map__33640__$1 = (((((!((map__33640 == null))))?(((((map__33640.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__33640.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__33640):map__33640);\nvar m1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33640__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar map__33641 = u(y);\nvar map__33641__$1 = (((((!((map__33641 == null))))?(((((map__33641.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__33641.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__33641):map__33641);\nvar m2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33641__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nreturn u((m1 + m2));\n});\nvar garden$units$make_unit_adder_$_u_PLUS___3 = (function() { \nvar G__33878__delegate = function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(garden$units$make_unit_adder_$_u_PLUS_,garden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$2(x,y),more);\n};\nvar G__33878 = function (x,y,var_args){\nvar more = null;\nif (arguments.length > 2) {\nvar G__33880__i = 0, G__33880__a = new Array(arguments.length -  2);\nwhile (G__33880__i < G__33880__a.length) {G__33880__a[G__33880__i] = arguments[G__33880__i + 2]; ++G__33880__i;}\n  more = new cljs.core.IndexedSeq(G__33880__a,0,null);\n} \nreturn G__33878__delegate.call(this,x,y,more);};\nG__33878.cljs$lang$maxFixedArity = 2;\nG__33878.cljs$lang$applyTo = (function (arglist__33881){\nvar x = cljs.core.first(arglist__33881);\narglist__33881 = cljs.core.next(arglist__33881);\nvar y = cljs.core.first(arglist__33881);\nvar more = cljs.core.rest(arglist__33881);\nreturn G__33878__delegate(x,y,more);\n});\nG__33878.cljs$core$IFn$_invoke$arity$variadic = G__33878__delegate;\nreturn G__33878;\n})()\n;\ngarden$units$make_unit_adder_$_u_PLUS_ = function(x,y,var_args){\nvar more = var_args;\nswitch(arguments.length){\ncase 0:\nreturn garden$units$make_unit_adder_$_u_PLUS___0.call(this);\ncase 1:\nreturn garden$units$make_unit_adder_$_u_PLUS___1.call(this,x);\ncase 2:\nreturn garden$units$make_unit_adder_$_u_PLUS___2.call(this,x,y);\ndefault:\nvar G__33882 = null;\nif (arguments.length > 2) {\nvar G__33883__i = 0, G__33883__a = new Array(arguments.length -  2);\nwhile (G__33883__i < G__33883__a.length) {G__33883__a[G__33883__i] = arguments[G__33883__i + 2]; ++G__33883__i;}\nG__33882 = new cljs.core.IndexedSeq(G__33883__a,0,null);\n}\nreturn garden$units$make_unit_adder_$_u_PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33882);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$lang$maxFixedArity = 2;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$lang$applyTo = garden$units$make_unit_adder_$_u_PLUS___3.cljs$lang$applyTo;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$0 = garden$units$make_unit_adder_$_u_PLUS___0;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$1 = garden$units$make_unit_adder_$_u_PLUS___1;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$2 = garden$units$make_unit_adder_$_u_PLUS___2;\ngarden$units$make_unit_adder_$_u_PLUS_.cljs$core$IFn$_invoke$arity$variadic = garden$units$make_unit_adder_$_u_PLUS___3.cljs$core$IFn$_invoke$arity$variadic;\nreturn garden$units$make_unit_adder_$_u_PLUS_;\n})()\n});\n/**\n * Create a subtraction function for subtracting Units.\n */\ngarden.units.make_unit_subtractor = (function garden$units$make_unit_subtractor(unit){\nvar u = garden.units.make_unit_fn(unit);\nreturn (function() {\nvar garden$units$make_unit_subtractor_$_u_ = null;\nvar garden$units$make_unit_subtractor_$_u___1 = (function (x){\nreturn u((- x));\n});\nvar garden$units$make_unit_subtractor_$_u___2 = (function (x,y){\nvar map__33652 = u(x);\nvar map__33652__$1 = (((((!((map__33652 == null))))?(((((map__33652.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__33652.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__33652):map__33652);\nvar m1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33652__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar map__33654 = u(y);\nvar map__33654__$1 = (((((!((map__33654 == null))))?(((((map__33654.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__33654.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__33654):map__33654);\nvar m2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33654__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nreturn u((m1 - m2));\n});\nvar garden$units$make_unit_subtractor_$_u___3 = (function() { \nvar G__33885__delegate = function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(garden$units$make_unit_subtractor_$_u_,garden$units$make_unit_subtractor_$_u_.cljs$core$IFn$_invoke$arity$2(x,y),more);\n};\nvar G__33885 = function (x,y,var_args){\nvar more = null;\nif (arguments.length > 2) {\nvar G__33888__i = 0, G__33888__a = new Array(arguments.length -  2);\nwhile (G__33888__i < G__33888__a.length) {G__33888__a[G__33888__i] = arguments[G__33888__i + 2]; ++G__33888__i;}\n  more = new cljs.core.IndexedSeq(G__33888__a,0,null);\n} \nreturn G__33885__delegate.call(this,x,y,more);};\nG__33885.cljs$lang$maxFixedArity = 2;\nG__33885.cljs$lang$applyTo = (function (arglist__33889){\nvar x = cljs.core.first(arglist__33889);\narglist__33889 = cljs.core.next(arglist__33889);\nvar y = cljs.core.first(arglist__33889);\nvar more = cljs.core.rest(arglist__33889);\nreturn G__33885__delegate(x,y,more);\n});\nG__33885.cljs$core$IFn$_invoke$arity$variadic = G__33885__delegate;\nreturn G__33885;\n})()\n;\ngarden$units$make_unit_subtractor_$_u_ = function(x,y,var_args){\nvar more = var_args;\nswitch(arguments.length){\ncase 1:\nreturn garden$units$make_unit_subtractor_$_u___1.call(this,x);\ncase 2:\nreturn garden$units$make_unit_subtractor_$_u___2.call(this,x,y);\ndefault:\nvar G__33892 = null;\nif (arguments.length > 2) {\nvar G__33893__i = 0, G__33893__a = new Array(arguments.length -  2);\nwhile (G__33893__i < G__33893__a.length) {G__33893__a[G__33893__i] = arguments[G__33893__i + 2]; ++G__33893__i;}\nG__33892 = new cljs.core.IndexedSeq(G__33893__a,0,null);\n}\nreturn garden$units$make_unit_subtractor_$_u___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33892);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ngarden$units$make_unit_subtractor_$_u_.cljs$lang$maxFixedArity = 2;\ngarden$units$make_unit_subtractor_$_u_.cljs$lang$applyTo = garden$units$make_unit_subtractor_$_u___3.cljs$lang$applyTo;\ngarden$units$make_unit_subtractor_$_u_.cljs$core$IFn$_invoke$arity$1 = garden$units$make_unit_subtractor_$_u___1;\ngarden$units$make_unit_subtractor_$_u_.cljs$core$IFn$_invoke$arity$2 = garden$units$make_unit_subtractor_$_u___2;\ngarden$units$make_unit_subtractor_$_u_.cljs$core$IFn$_invoke$arity$variadic = garden$units$make_unit_subtractor_$_u___3.cljs$core$IFn$_invoke$arity$variadic;\nreturn garden$units$make_unit_subtractor_$_u_;\n})()\n});\n/**\n * Create a multiplication function for multiplying Units.\n */\ngarden.units.make_unit_multiplier = (function garden$units$make_unit_multiplier(unit){\nvar u = garden.units.make_unit_fn(unit);\nvar op = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(unit,new cljs.core.Keyword(null,\"%\",\"%\",1704198600)))?(function garden$units$make_unit_multiplier_$_percent_STAR_(x,y){\nreturn ((x * y) / (100));\n}):cljs.core._STAR_);\nreturn (function() {\nvar garden$units$make_unit_multiplier_$_u_STAR_ = null;\nvar garden$units$make_unit_multiplier_$_u_STAR___0 = (function (){\nreturn u((1));\n});\nvar garden$units$make_unit_multiplier_$_u_STAR___1 = (function (x){\nreturn u(x);\n});\nvar garden$units$make_unit_multiplier_$_u_STAR___2 = (function (x,y){\nvar map__33692 = u(x);\nvar map__33692__$1 = (((((!((map__33692 == null))))?(((((map__33692.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__33692.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__33692):map__33692);\nvar m1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33692__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar map__33693 = u(y);\nvar map__33693__$1 = (((((!((map__33693 == null))))?(((((map__33693.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__33693.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__33693):map__33693);\nvar m2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33693__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nreturn u((op.cljs$core$IFn$_invoke$arity$2 ? op.cljs$core$IFn$_invoke$arity$2(m1,m2) : op.call(null,m1,m2)));\n});\nvar garden$units$make_unit_multiplier_$_u_STAR___3 = (function() { \nvar G__33896__delegate = function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(garden$units$make_unit_multiplier_$_u_STAR_,garden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$2(x,y),more);\n};\nvar G__33896 = function (x,y,var_args){\nvar more = null;\nif (arguments.length > 2) {\nvar G__33898__i = 0, G__33898__a = new Array(arguments.length -  2);\nwhile (G__33898__i < G__33898__a.length) {G__33898__a[G__33898__i] = arguments[G__33898__i + 2]; ++G__33898__i;}\n  more = new cljs.core.IndexedSeq(G__33898__a,0,null);\n} \nreturn G__33896__delegate.call(this,x,y,more);};\nG__33896.cljs$lang$maxFixedArity = 2;\nG__33896.cljs$lang$applyTo = (function (arglist__33899){\nvar x = cljs.core.first(arglist__33899);\narglist__33899 = cljs.core.next(arglist__33899);\nvar y = cljs.core.first(arglist__33899);\nvar more = cljs.core.rest(arglist__33899);\nreturn G__33896__delegate(x,y,more);\n});\nG__33896.cljs$core$IFn$_invoke$arity$variadic = G__33896__delegate;\nreturn G__33896;\n})()\n;\ngarden$units$make_unit_multiplier_$_u_STAR_ = function(x,y,var_args){\nvar more = var_args;\nswitch(arguments.length){\ncase 0:\nreturn garden$units$make_unit_multiplier_$_u_STAR___0.call(this);\ncase 1:\nreturn garden$units$make_unit_multiplier_$_u_STAR___1.call(this,x);\ncase 2:\nreturn garden$units$make_unit_multiplier_$_u_STAR___2.call(this,x,y);\ndefault:\nvar G__33900 = null;\nif (arguments.length > 2) {\nvar G__33901__i = 0, G__33901__a = new Array(arguments.length -  2);\nwhile (G__33901__i < G__33901__a.length) {G__33901__a[G__33901__i] = arguments[G__33901__i + 2]; ++G__33901__i;}\nG__33900 = new cljs.core.IndexedSeq(G__33901__a,0,null);\n}\nreturn garden$units$make_unit_multiplier_$_u_STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33900);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$lang$maxFixedArity = 2;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$lang$applyTo = garden$units$make_unit_multiplier_$_u_STAR___3.cljs$lang$applyTo;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$0 = garden$units$make_unit_multiplier_$_u_STAR___0;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$1 = garden$units$make_unit_multiplier_$_u_STAR___1;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$2 = garden$units$make_unit_multiplier_$_u_STAR___2;\ngarden$units$make_unit_multiplier_$_u_STAR_.cljs$core$IFn$_invoke$arity$variadic = garden$units$make_unit_multiplier_$_u_STAR___3.cljs$core$IFn$_invoke$arity$variadic;\nreturn garden$units$make_unit_multiplier_$_u_STAR_;\n})()\n});\n/**\n * Create a division function for dividing Units.\n */\ngarden.units.make_unit_divider = (function garden$units$make_unit_divider(unit){\nvar u = garden.units.make_unit_fn(unit);\nvar op = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(unit,new cljs.core.Keyword(null,\"%\",\"%\",1704198600)))?(function garden$units$make_unit_divider_$_percent_div(x,y){\nreturn ((100) * (x / y));\n}):cljs.core._SLASH_);\nreturn (function() {\nvar garden$units$make_unit_divider_$_ud = null;\nvar garden$units$make_unit_divider_$_ud__1 = (function (x){\nreturn u(((1) / x));\n});\nvar garden$units$make_unit_divider_$_ud__2 = (function (x,y){\nvar map__33710 = u(x);\nvar map__33710__$1 = (((((!((map__33710 == null))))?(((((map__33710.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__33710.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__33710):map__33710);\nvar m1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33710__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nvar map__33711 = u(y);\nvar map__33711__$1 = (((((!((map__33711 == null))))?(((((map__33711.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__33711.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__33711):map__33711);\nvar m2 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33711__$1,new cljs.core.Keyword(null,\"magnitude\",\"magnitude\",1924274222));\nreturn u((op.cljs$core$IFn$_invoke$arity$2 ? op.cljs$core$IFn$_invoke$arity$2(m1,m2) : op.call(null,m1,m2)));\n});\nvar garden$units$make_unit_divider_$_ud__3 = (function() { \nvar G__33912__delegate = function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(garden$units$make_unit_divider_$_ud,garden$units$make_unit_divider_$_ud.cljs$core$IFn$_invoke$arity$2(x,y),more);\n};\nvar G__33912 = function (x,y,var_args){\nvar more = null;\nif (arguments.length > 2) {\nvar G__33913__i = 0, G__33913__a = new Array(arguments.length -  2);\nwhile (G__33913__i < G__33913__a.length) {G__33913__a[G__33913__i] = arguments[G__33913__i + 2]; ++G__33913__i;}\n  more = new cljs.core.IndexedSeq(G__33913__a,0,null);\n} \nreturn G__33912__delegate.call(this,x,y,more);};\nG__33912.cljs$lang$maxFixedArity = 2;\nG__33912.cljs$lang$applyTo = (function (arglist__33915){\nvar x = cljs.core.first(arglist__33915);\narglist__33915 = cljs.core.next(arglist__33915);\nvar y = cljs.core.first(arglist__33915);\nvar more = cljs.core.rest(arglist__33915);\nreturn G__33912__delegate(x,y,more);\n});\nG__33912.cljs$core$IFn$_invoke$arity$variadic = G__33912__delegate;\nreturn G__33912;\n})()\n;\ngarden$units$make_unit_divider_$_ud = function(x,y,var_args){\nvar more = var_args;\nswitch(arguments.length){\ncase 1:\nreturn garden$units$make_unit_divider_$_ud__1.call(this,x);\ncase 2:\nreturn garden$units$make_unit_divider_$_ud__2.call(this,x,y);\ndefault:\nvar G__33916 = null;\nif (arguments.length > 2) {\nvar G__33917__i = 0, G__33917__a = new Array(arguments.length -  2);\nwhile (G__33917__i < G__33917__a.length) {G__33917__a[G__33917__i] = arguments[G__33917__i + 2]; ++G__33917__i;}\nG__33916 = new cljs.core.IndexedSeq(G__33917__a,0,null);\n}\nreturn garden$units$make_unit_divider_$_ud__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33916);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\ngarden$units$make_unit_divider_$_ud.cljs$lang$maxFixedArity = 2;\ngarden$units$make_unit_divider_$_ud.cljs$lang$applyTo = garden$units$make_unit_divider_$_ud__3.cljs$lang$applyTo;\ngarden$units$make_unit_divider_$_ud.cljs$core$IFn$_invoke$arity$1 = garden$units$make_unit_divider_$_ud__1;\ngarden$units$make_unit_divider_$_ud.cljs$core$IFn$_invoke$arity$2 = garden$units$make_unit_divider_$_ud__2;\ngarden$units$make_unit_divider_$_ud.cljs$core$IFn$_invoke$arity$variadic = garden$units$make_unit_divider_$_ud__3.cljs$core$IFn$_invoke$arity$variadic;\nreturn garden$units$make_unit_divider_$_ud;\n})()\n});\ngarden.units.cm = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\n\ngarden.units.cm_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"cm\",\"cm\",540591536));\ngarden.units.mm = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\n\ngarden.units.mm_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"mm\",\"mm\",-1652850560));\ngarden.units.in$ = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\n\ngarden.units.in_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"in\",\"in\",-1531184865));\ngarden.units.px = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\n\ngarden.units.px_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"px\",\"px\",281329899));\ngarden.units.pt = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\n\ngarden.units.pt_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"pt\",\"pt\",556460867));\ngarden.units.pc = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\n\ngarden.units.pc_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"pc\",\"pc\",512913453));\ngarden.units.percent = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\n\ngarden.units.percent_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"%\",\"%\",1704198600));\ngarden.units.em = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\n\ngarden.units.em_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"em\",\"em\",707813035));\ngarden.units.ex = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\n\ngarden.units.ex_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"ex\",\"ex\",-1413771341));\ngarden.units.ch = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\n\ngarden.units.ch_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"ch\",\"ch\",-554717905));\ngarden.units.rem = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\n\ngarden.units.rem_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"rem\",\"rem\",-976484757));\ngarden.units.vw = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\n\ngarden.units.vw_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"vw\",\"vw\",1941049135));\ngarden.units.vh = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\n\ngarden.units.vh_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"vh\",\"vh\",79552846));\ngarden.units.vmin = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\n\ngarden.units.vmin_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"vmin\",\"vmin\",446546816));\ngarden.units.vmax = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\n\ngarden.units.vmax_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"vmax\",\"vmax\",-1435213544));\ngarden.units.deg = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\n\ngarden.units.deg_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"deg\",\"deg\",-681556081));\ngarden.units.grad = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\n\ngarden.units.grad_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"grad\",\"grad\",1125187229));\ngarden.units.rad = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\n\ngarden.units.rad_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"rad\",\"rad\",-833983012));\ngarden.units.turn = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\n\ngarden.units.turn_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"turn\",\"turn\",75759344));\ngarden.units.s = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\n\ngarden.units.s_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"s\",\"s\",1705939918));\ngarden.units.ms = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\n\ngarden.units.ms_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\ngarden.units.Hz = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\n\ngarden.units.Hz_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"Hz\",\"Hz\",-1958732916));\ngarden.units.kHz = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\n\ngarden.units.kHz_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"kHz\",\"kHz\",240398466));\ngarden.units.dpi = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\n\ngarden.units.dpi_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"dpi\",\"dpi\",-986162832));\ngarden.units.dpcm = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\n\ngarden.units.dpcm_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"dpcm\",\"dpcm\",-1187601236));\ngarden.units.dppx = garden.units.make_unit_fn(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_QMARK_ = garden.units.make_unit_predicate(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_PLUS_ = garden.units.make_unit_adder(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_ = garden.units.make_unit_subtractor(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_STAR_ = garden.units.make_unit_multiplier(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n\ngarden.units.dppx_div = garden.units.make_unit_divider(new cljs.core.Keyword(null,\"dppx\",\"dppx\",1920508843));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:doc","Functions and macros for working with CSS units.","~:file","garden/units.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",17],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$defunit","~$garden.units"],"~:excludes",["~#set",["~$rem"]],"~:macros",["^ ","^D",["^ ","~:arglists",["~#list",[["~$name"],["^L","~$unit"]]],"^6","Create a suite of functions for unit creation, conversion,\n  validation, and arithmetic.","^8",263,"^9",4,"^7","garden/units.cljc","~:name","~$garden.units/defunit","~:ns","^E","~:macro",true]],"^N","^E","~:op","^P","~:imports",null,"~:requires",["^ ","~$cljs.reader","^U","~$garden.types","^V","~$types","^V","~$garden.util","^X","~$util","^X","~$cljs.core","^Z","~$goog","^["],"~:seen",["^G",["~:require","~:require-macros"]],"~:uses",["^ ","~$read-string","^U","~$CSSUnit","^V"],"^12",["^ ","^E","^E","^Z","^Z","^U","^U"],"~:form",["^K",["~$ns","^E","Functions and macros for working with CSS units.",["^K",["~:refer-clojure","~:exclude",["^H"]]],["^K",["^11",["^U","~:refer",["^14"]],["^V","~:as","^W","^1:",["^15"]],["^X","^1;","^Y"]]],["^K",["^12",["^E","^1:",["^D"]]]]]],"~:flags",["^ ","^11",["^G",[]],"^12",["^G",[]]],"~:js-deps",["^ "],"~:deps",["^[","^Z","^U","^V","^X"]],"^P","^E","~:resource-id",["~:shadow.build.classpath/resource","garden/units.cljc"],"~:compiled-at",1616323592135,"~:resource-name","garden/units.cljc","~:warnings",[],"~:source","(ns garden.units\n  \"Functions and macros for working with CSS units.\"\n  (:refer-clojure :exclude [rem])\n  #?@(:clj\n     [(:require\n       [garden.types :as types]\n       [garden.util :as util])\n      (:import\n       [garden.types CSSUnit])])\n  #?@(:cljs\n      [(:require\n        [cljs.reader :refer [read-string]]\n        [garden.types :as types :refer [CSSUnit]]\n        [garden.util :as util])\n       (:require-macros\n        [garden.units :refer [defunit]])]))\n\n;;;; ## Unit families\n\n(def length-units\n  #{:in :cm :pc :mm :pt :px (keyword \"%\")})\n\n(def angular-units\n  #{:deg :grad :rad :turn})\n\n(def time-units\n  #{:s :ms})\n\n(def frequency-units\n  #{:Hz :kHz})\n\n(def resolution-units\n  #{:dpi :dpcm :dppx})\n\n;;;; ## Unit predicates\n\n(defn unit?\n  \"True if x is of type CSSUnit.\"\n  [x]\n  (instance? CSSUnit x))\n\n(defn length?\n  [x]\n  (and (unit? x)\n       (contains? length-units (:unit x))))\n\n(defn angle?\n  [x]\n  (and (unit? x)\n       (contains? angular-units (:unit x))))\n\n(defn time?\n  [x]\n  (and (unit? x)\n       (contains? time-units (:unit x))))\n\n(defn frequency?\n  [x]\n  (and (unit? x)\n       (contains? frequency-units (:unit x))))\n\n(defn resolution?\n  [x]\n  (and (unit? x)\n       (contains? resolution-units (:unit x))))\n\n;;;; ## Unit conversion\n\n(def ^{:private true\n       :doc \"Map associating CSS unit types to their conversion values.\"}\n  conversions\n  {;; Absolute units\n   :cm {:cm 1\n        :mm 10\n        :pc 2.36220473\n        :pt 28.3464567\n        :px 37.795275591}\n   :in {:cm 2.54\n        :in 1\n        :mm 25.4\n        :pc 6\n        :pt 72\n        :px 96}\n   :mm {:mm 1\n        :pt 2.83464567\n        :px 3.7795275591}\n   :pc {:mm 4.23333333\n        :pc 1\n        :pt 12\n        :px 16}\n   :pt {:pt 1\n        :px 1.3333333333}\n   :px {:px 1}\n   (keyword \"%\") {(keyword \"%\") 1}\n\n   ;; Relative untis\n   :em {:em 1}\n   :rem {:rem 1}\n\n   ;; Angular units\n   :deg {:deg 1\n         :grad 1.111111111\n         :rad 0.0174532925\n         :turn 0.002777778}\n   :grad {:grad 1\n          :rad 63.661977237\n          :turn 0.0025}\n   :rad {:rad 1\n         :turn 0.159154943}\n   :turn {:turn 1}\n\n   ;; Time units\n   :s {:ms 1000\n       :s 1}\n   :ms {:ms 1}\n\n   ;; Frequency units\n   :Hz {:Hz 1\n        :kHz 0.001}\n   :kHz {:kHz 1}})\n\n(defn- convertable?\n  \"True if unit is a key of convertable-units, false otherwise.\"\n  [unit]\n  (contains? conversions unit))\n\n(defn- convert\n  \"Convert a Unit with :unit left to a Unit with :unit right if possible.\"\n  [{m :magnitude left :unit} right]\n  (if (every? convertable? [left right])\n    (let [v1 (get-in conversions [left right])\n          v2 (get-in conversions [right left])]\n      (cond\n        v1\n        (CSSUnit. right (* v1 m))\n\n        v2\n        (CSSUnit. right (/ m v2))\n\n       ;; Both units are convertible but no conversion between them exists.\n       :else\n       (throw\n        (ex-info\n         (util/format \"Can't convert %s to %s\" (name left) (name right)) {}))))\n    ;; Display the inconvertible unit.\n    (let [x (first (drop-while convertable? [left right]))]\n      (throw (ex-info (str \"Inconvertible unit \" (name x)) {})))))\n\n;;;; ## Unit helpers\n\n(def ^{:doc \"Regular expression for matching a CSS unit. The magnitude\n             and unit are captured.\"\n       :private true}\n  unit-re\n  #\"([+-]?\\d+(?:\\.?\\d+)?)(p[xtc]|in|[cm]m|%|r?em|ex|ch|v(?:[wh]|m(?:in|ax))|deg|g?rad|turn|m?s|k?Hz|dp(?:i|cm|px))\")\n\n(defn read-unit\n  \"Read a `CSSUnit` object from the string `s`.\"\n  [s]\n  (when-let [[_ magnitude unit] (re-matches unit-re s)]\n    (let [unit (keyword unit)\n          magnitude (if magnitude (read-string magnitude) 0)]\n      (CSSUnit. unit magnitude))))\n\n(defn make-unit-predicate\n  \"Creates a function for verifying the given unit type.\"\n  [unit]\n  (fn [x] (and (unit? x) (= (:unit x) unit))))\n\n(defn make-unit-fn\n  \"Creates a function for creating and converting `CSSUnit`s for the\n  given unit. If a number n is passed the function it will produce a\n  new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n  is passed the function will attempt to convert it.\"\n  [unit]\n  (fn [x]\n    (cond\n      (number? x)\n      (CSSUnit. unit x)\n\n      (unit? x)\n      (if (and (= (unit x) unit))\n        x\n        (convert x unit))\n\n      :else\n      (let [;; Does `.getName` even work in CLJS? -- @noprompt\n            ex-message (util/format \"Unable to convert from %s to %s\"\n                                    (.getName type)\n                                    (name unit))\n            ;; TODO: This needs to be populated with more helpful\n            ;; data.\n            ex-data {:given {:type type\n                             :unit unit}}]\n        (throw\n         (ex-info ex-message ex-data))))))\n\n(defn make-unit-adder\n  \"Create a addition function for adding Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)]\n    (fn u+\n      ([] (u 0))\n      ([x] (u x))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (+ m1 m2))))\n      ([x y & more]\n         (reduce u+ (u+ x y) more)))))\n\n(defn make-unit-subtractor\n  \"Create a subtraction function for subtracting Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)]\n    (fn u-\n      ([x] (u (- x)))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (- m1 m2))))\n      ([x y & more]\n         (reduce u- (u- x y) more)))))\n\n(defn make-unit-multiplier\n  \"Create a multiplication function for multiplying Units.\"\n  [unit]\n  (let [u  (make-unit-fn unit)\n        op (if (= unit :%)\n            (fn percent*\n              [x y]\n              (/ (* x y) 100))\n            *)]\n    (fn u*\n      ([] (u 1))\n      ([x] (u x))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (op m1 m2))))\n      ([x y & more]\n         (reduce u* (u* x y) more)))))\n\n(defn make-unit-divider\n  \"Create a division function for dividing Units.\"\n  [unit]\n  (let [u (make-unit-fn unit)\n        op (if (= unit :%)\n            (fn percent-div\n              [x y]\n              (* 100 (/ x y)))\n             /)]\n    (fn ud\n      ([x] (u (/ 1 x)))\n      ([x y]\n         (let [{m1 :magnitude} (u x)\n               {m2 :magnitude} (u y)]\n           (u (op m1 m2))))\n      ([x y & more]\n         (reduce ud (ud x y) more)))))\n\n#?(:clj\n   (defmacro defunit\n     \"Create a suite of functions for unit creation, conversion,\n  validation, and arithmetic.\"\n     ([name]\n      `(defunit ~name ~name))\n     ([name unit]\n      (let [k (keyword unit)\n            append #(symbol (str name %))]\n        `(do\n           (def ~name (make-unit-fn ~k))\n           (def ~(append \\?) (make-unit-predicate ~k))\n           (def ~(append \\+) (make-unit-adder ~k))\n           (def ~(append \\-) (make-unit-subtractor ~k))\n           (def ~(append \\*) (make-unit-multiplier ~k))\n           (def ~(append \"-div\") (make-unit-divider ~k)))))))\n\n(comment\n  ;; This:\n  (defunit px)\n  ;; Is equivalent to:\n  (def px  (make-unit-fn :px))\n  (def px? (make-unit-predicate :px))\n  (def px+ (make-unit-adder :px))\n  (def px- (make-unit-subtractor :px))\n  (def px* (make-unit-multiplier :px))\n  (def px-div (make-unit-divider :px)))\n\n;; # Predefined units\n\n;; Absolute units\n\n(defunit cm)\n(defunit mm)\n(defunit in)\n(defunit px)\n(defunit pt)\n(defunit pc)\n(defunit percent \"%\")\n\n;; Font-relative units\n\n(defunit em)\n(defunit ex)\n(defunit ch)\n(defunit rem)\n\n;; Viewport-percentage lengths\n\n(defunit vw)\n(defunit vh)\n(defunit vmin)\n(defunit vmax)\n\n;; Angles\n\n(defunit deg)\n(defunit grad)\n(defunit rad)\n(defunit turn)\n\n;; Times\n\n(defunit s)\n(defunit ms)\n\n;; Frequencies\n\n(defunit Hz)\n(defunit kHz)\n\n;; Resolutions\n\n(defunit dpi)\n(defunit dpcm)\n(defunit dppx)\n","~:reader-features",["^G",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["garden.units/length-units","cljs.core.keyword","garden.units/angular-units","garden.units/time-units","garden.units/frequency-units","garden.units/resolution-units","garden.units/unit?","x","garden.types/CSSUnit","garden.units/length?","cljs.core/contains?","garden.units/angle?","garden.units/time?","garden.units/frequency?","garden.units/resolution?","garden.units/conversions","garden.units/convertable?","unit","p__33620","map__33621","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","garden.units/convert","m","left","right","cljs.core/every?","v1","cljs.core.get_in","v2","cljs.core.ex_info","garden.util.format","cljs.core/name","cljs.core/first","cljs.core.drop_while","garden.units/unit-re","garden.units/read-unit","s","temp__5735__auto__","vec__33623","cljs.core.nth","_","magnitude","cljs.core/re-matches","cljs.reader.read_string","garden.units/make-unit-predicate","cljs.core._EQ_","garden.units/make-unit-fn","ex-message","cljs.core/type","ex-data","garden.units/make-unit-adder","u","y","map__33640","map__33641","m1","m2","more","cljs.core.reduce","u+","garden$units$make_unit_adder_$_u_PLUS_","garden.units/make-unit-subtractor","map__33652","map__33654","u-","garden$units$make_unit_subtractor_$_u_","garden.units/make-unit-multiplier","op","cljs.core/*","map__33692","map__33693","u*","garden$units$make_unit_multiplier_$_u_STAR_","garden.units/make-unit-divider","cljs.core//","map__33710","map__33711","ud","garden$units$make_unit_divider_$_ud","garden.units/cm?","garden.units/cm+","garden.units/cm-","garden.units/cm*","garden.units/cm-div","garden.units/cm","garden.units/mm?","garden.units/mm+","garden.units/mm-","garden.units/mm*","garden.units/mm-div","garden.units/mm","garden.units/in?","garden.units/in+","garden.units/in-","garden.units/in*","garden.units/in-div","garden.units/in","garden.units/px?","garden.units/px+","garden.units/px-","garden.units/px*","garden.units/px-div","garden.units/px","garden.units/pt?","garden.units/pt+","garden.units/pt-","garden.units/pt*","garden.units/pt-div","garden.units/pt","garden.units/pc?","garden.units/pc+","garden.units/pc-","garden.units/pc*","garden.units/pc-div","garden.units/pc","garden.units/percent?","garden.units/percent+","garden.units/percent-","garden.units/percent*","garden.units/percent-div","garden.units/percent","garden.units/em?","garden.units/em+","garden.units/em-","garden.units/em*","garden.units/em-div","garden.units/em","garden.units/ex?","garden.units/ex+","garden.units/ex-","garden.units/ex*","garden.units/ex-div","garden.units/ex","garden.units/ch?","garden.units/ch+","garden.units/ch-","garden.units/ch*","garden.units/ch-div","garden.units/ch","garden.units/rem?","garden.units/rem+","garden.units/rem-","garden.units/rem*","garden.units/rem-div","garden.units/rem","garden.units/vw?","garden.units/vw+","garden.units/vw-","garden.units/vw*","garden.units/vw-div","garden.units/vw","garden.units/vh?","garden.units/vh+","garden.units/vh-","garden.units/vh*","garden.units/vh-div","garden.units/vh","garden.units/vmin?","garden.units/vmin+","garden.units/vmin-","garden.units/vmin*","garden.units/vmin-div","garden.units/vmin","garden.units/vmax?","garden.units/vmax+","garden.units/vmax-","garden.units/vmax*","garden.units/vmax-div","garden.units/vmax","garden.units/deg?","garden.units/deg+","garden.units/deg-","garden.units/deg*","garden.units/deg-div","garden.units/deg","garden.units/grad?","garden.units/grad+","garden.units/grad-","garden.units/grad*","garden.units/grad-div","garden.units/grad","garden.units/rad?","garden.units/rad+","garden.units/rad-","garden.units/rad*","garden.units/rad-div","garden.units/rad","garden.units/turn?","garden.units/turn+","garden.units/turn-","garden.units/turn*","garden.units/turn-div","garden.units/turn","garden.units/s?","garden.units/s+","garden.units/s-","garden.units/s*","garden.units/s-div","garden.units/s","garden.units/ms?","garden.units/ms+","garden.units/ms-","garden.units/ms*","garden.units/ms-div","garden.units/ms","garden.units/Hz?","garden.units/Hz+","garden.units/Hz-","garden.units/Hz*","garden.units/Hz-div","garden.units/Hz","garden.units/kHz?","garden.units/kHz+","garden.units/kHz-","garden.units/kHz*","garden.units/kHz-div","garden.units/kHz","garden.units/dpi?","garden.units/dpi+","garden.units/dpi-","garden.units/dpi*","garden.units/dpi-div","garden.units/dpi","garden.units/dpcm?","garden.units/dpcm+","garden.units/dpcm-","garden.units/dpcm*","garden.units/dpcm-div","garden.units/dpcm","garden.units/dppx?","garden.units/dppx+","garden.units/dppx-","garden.units/dppx*","garden.units/dppx-div","garden.units/dppx"]],"~:used-vars",["^G",["~$garden.units/ex","~$garden.units/vmin*","~$garden.units/resolution-units","~$garden.units/ms-div","~$garden.units/vmax-","~$garden.units/frequency?","~$garden.units/deg+","~$garden.units/dpi","~$cljs.core/keyword","~$garden.units/turn-","~$garden.units/Hz-div","~$garden.units/grad*","~$garden.units/dpi?","~$garden.units/px-div","~$garden.units/pc?","~$garden.units/vmin-","~$garden.units/ex?","~$garden.units/ms?","~$garden.units/vh*","~$garden.units/vh","~$garden.units/ex+","~$garden.units/turn-div","~$garden.units/in-","~$garden.units/in-div","~$garden.units/px+","~$garden.units/px","~$cljs.core/=","~$garden.units/grad+","~$garden.units/pt-","~$garden.units/px?","~$garden.units/vmax","~$garden.units/rem?","~$garden.units/Hz*","~$garden.units/px*","~$garden.units/s+","~$garden.units/rad?","~$garden.types/CSSUnit","~$garden.units/pt-div","~$garden.units/dppx?","~$garden.units/vw+","~$garden.units/Hz+","~$garden.units/turn*","~$cljs.core/reduce","~$garden.units/time-units","~$garden.units/in?","~$garden.units/pt+","~$garden.units/kHz-","~$garden.units/dppx*","~$garden.units/s-div","~$garden.units/ms+","~$garden.units/pc+","~$garden.units/ms","~$garden.units/vw","~$garden.units/px-","~$garden.units/in+","~$garden.units/length?","~$garden.units/cm","~$garden.units/pc","~$garden.units/grad-","~$garden.units/mm?","~$garden.units/dpi-","~$garden.units/pt?","~$garden.units/dppx-div","~$garden.units/percent","~$garden.units/ex*","~$garden.units/pt*","~$garden.units/dpcm?","~$garden.units/s*","~$garden.units/mm+","~$garden.units/ms*","~$garden.units/pc*","~$garden.units/ch","~$garden.units/deg","~$cljs.core/contains?","~$garden.units/dpcm-","~$garden.units/turn","~$garden.units/kHz*","~$garden.units/vh+","~$garden.units/angle?","~$garden.units/make-unit-divider","~$garden.units/mm*","~$garden.units/cm*","~$garden.units/dpi-div","~$garden.units/rad*","~$garden.units/rem-","~$garden.units/vmax?","~$garden.units/ex-div","~$garden.units/make-unit-predicate","~$garden.units/mm-","~$garden.units/vh?","~$garden.units/rem*","~$garden.units/turn?","~$garden.units/cm+","~$garden.units/resolution?","~$garden.units/deg?","~$garden.units/s-","~$garden.units/ch-div","~$garden.units/cm-","~$garden.units/frequency-units","~$garden.units/em?","~$garden.units/mm","~$garden.units/rem-div","~$garden.units/rad+","~$garden.units/kHz?","~$garden.units/ex-","~$garden.units/ch?","~$garden.units/make-unit-subtractor","~$garden.units/dpcm*","~$garden.units/vh-div","~$garden.units/read-unit","~$garden.units/pc-","~$garden.units/mm-div","~$garden.units/conversions","~$garden.units/grad-div","~$garden.units/deg-","~$garden.units/percent-","~$garden.units/make-unit-multiplier","~$garden.units/kHz","~$garden.units/deg-div","~$garden.units/unit?","~$garden.units/convertable?","~$garden.units/unit-re","~$garden.units/dpcm+","~$garden.units/em+","~$garden.units/make-unit-adder","~$garden.util/format","~$garden.units/percent?","~$garden.units/turn+","~$garden.units/em-","~$garden.units/cm-div","~$cljs.core/ex-info","~$garden.units/Hz-","~$garden.units/rem+","~$garden.units/percent-div","~$garden.units/cm?","~$garden.units/time?","~$garden.units/vh-","~$garden.units/convert","~$garden.units/ch-","~$garden.units/percent*","~$garden.units/vw-div","~$garden.units/dppx","~$garden.units/vmax+","~$garden.units/ch*","~$garden.units/in","~$garden.units/em-div","~$garden.units/make-unit-fn","~$garden.units/vmin+","~$garden.units/em","~$garden.units/in*","~$garden.units/rad","~$garden.units/Hz","~$garden.units/vmin","~$garden.units/dpi*","~$garden.units/vmin?","~$garden.units/rad-div","~$garden.units/vmax*","~$garden.units/ch+","~$garden.units/grad","~$garden.units/em*","~$garden.units/length-units","~$garden.units/s?","~$garden.units/dpcm-div","~$garden.units/Hz?","~$garden.units/grad?","~$garden.units/vw*","~$garden.units/angular-units","~$garden.units/pt","~$garden.units/kHz-div","~$garden.units/rem","~$garden.units/kHz+","~$garden.units/dppx+","~$garden.units/dpcm","~$garden.units/rad-","~$garden.units/vmax-div","~$garden.units/vmin-div","~$cljs.core/name","~$cljs.core/every?","~$garden.units/dpi+","~$garden.units/deg*","~$garden.units/dppx-","~$garden.units/percent+","~$garden.units/ms-","~$garden.units/s","~$garden.units/vw-","~$garden.units/pc-div","~$garden.units/vw?"]]],"~:cache-keys",["~#cmap",[["^1@","goog/dom/tagname.js"],["6025affb7181cd40418600864f58eed1ea80055d","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^G",[]],"~:deps-syms",["^[","~$goog.dom.HtmlElement"]]],["^1@","cljs/tools/reader/impl/utils.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^Z","~$clojure.string","~$goog.string"]]],["^1@","goog/math/math.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","~$goog.array","~$goog.asserts"]]],["^1@","goog/html/trustedtypes.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^["]]],["^1@","goog/string/stringformat.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^63"]]],["^1@","goog/labs/useragent/browser.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^64","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1@","goog/html/safeurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^65","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^68"]]],["^1@","goog/array/array.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^65"]]],["^1@","goog/debug/error.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^["]]],["^1@","garden/units.cljc"],["4d8dd6d6301553b0219b4e0162d2115fec71cdfe","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^Z","^U","^V","^X"]]],["^1@","cljs/tools/reader/edn.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^Z","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^63","~$goog.string.StringBuffer"]]],["^1@","goog/dom/nodetype.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^["]]],["^1@","cljs/tools/reader/impl/inspect.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^Z"]]],["^1@","cljs/tools/reader.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^Z","^6@","^6A","^6B","^6?","^64","^63","^6D"]]],["^1@","goog/string/typedstring.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^["]]],["^1@","goog/object/object.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^["]]],["^1@","goog/dom/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^65"]]],"~:SHADOW-TIMESTAMP",[1616266888000,1616266888000,1616266886000],["^1@","goog/math/long.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^65","~$goog.reflect"]]],["^1@","goog/html/trustedresourceurl.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^65","~$goog.html.trustedtypes","^6;","^6<","^6=","^6>"]]],["^1@","goog/string/internal.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^["]]],["^1@","goog/functions/functions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^["]]],["^1@","goog/html/safestyle.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^64","^65","~$goog.html.SafeUrl","^6=","^6>","^68"]]],["^1@","goog/dom/safe.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^65","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^6H","^6:","~$goog.html.uncheckedconversions","^6=","^68"]]],["^1@","goog/structs/map.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1@","goog/html/safehtml.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^64","^65","~$goog.dom.TagName","~$goog.dom.tags","^6L","^6M","~$goog.html.SafeStyleSheet","^6H","^6:","^6G","^6;","^6<","~$goog.labs.userAgent.browser","^67","^6=","^6>","^68"]]],["^1@","goog/dom/tags.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^67"]]],["^1@","cljs/reader.cljs"],["0c4eab981c50277797c5c1d0925757fdebf90fa8","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^Z","^67","^6C","~$cljs.tools.reader.edn","^6D"]]],["^1@","goog/asserts/asserts.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1@","garden/types.cljc"],["4d8dd6d6301553b0219b4e0162d2115fec71cdfe","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^Z"]]],["^1@","goog/uri/uri.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^64","^65","^63","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1@","goog/i18n/bidi.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^["]]],["^1@","goog/fs/url.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^["]]],["^1@","goog/base.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",[]]],["^1@","garden/util.cljc"],["4d8dd6d6301553b0219b4e0162d2115fec71cdfe","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^Z","^62","^V","^63","~$goog.string.format"]]],["^1@","goog/structs/structs.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^64","^67"]]],["^1@","cljs/tools/reader/impl/errors.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^Z","^6@","^62","~$cljs.tools.reader.impl.inspect"]]],["^1@","clojure/string.cljs"],["0c4eab981c50277797c5c1d0925757fdebf90fa8","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^Z","^63","^6D"]]],["^1@","goog/string/string.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","~$goog.dom.safe","^6N","^6=","^68"]]],["^1@","goog/reflect/reflect.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^["]]],["^1@","goog/labs/useragent/util.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^68"]]],["^1@","goog/string/stringbuffer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^["]]],["^1@","cljs/tools/reader/reader_types.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^Z","^6A","^63","^6D"]]],["^1@","goog/iter/iter.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^64","^65","^6J","~$goog.math"]]],["^1@","goog/html/uncheckedconversions.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^65","^6K","^6L","^6M","^6S","^6H","^6:","^6=","^68"]]],["^1@","cljs/tools/reader/impl/commons.cljs"],["b4dce2f71625d60fe1fd6a95816017811dd73522","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^Z","^6?","^6@","^6A"]]],["^1@","goog/dom/htmlelement.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^["]]],["^1@","cljs/core.cljs"],["0c4eab981c50277797c5c1d0925757fdebf90fa8","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","~$goog.math.Long","~$goog.math.Integer","^63","^67","^64","~$goog.Uri","^6D"]]],["^1@","goog/html/safescript.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^65","^6G","^6=","^6>"]]],["^1@","goog/html/safestylesheet.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^64","^65","^6M","^67","^6=","^6>","^68"]]],["^1@","goog/math/integer.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^6F"]]],["^1@","goog/uri/utils.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^64","^65","^63"]]],["^1@","goog/string/const.js"],["6025affb7181cd40418600864f58eed1ea80055d","^5Y",["^ ","^5Z",null,"^5[",["^G",[]],"^60",["^[","^65","^6>"]]]]],"~:clj-info",["^ ","jar:file:/home/jari/.m2/repository/org/clojure/clojurescript/1.10.741/clojurescript-1.10.741.jar!/cljs/util.cljc",1616266886000,"jar:file:/home/jari/.m2/repository/org/clojure/clojurescript/1.10.741/clojurescript-1.10.741.jar!/cljs/core.cljc",1616266886000,"jar:file:/home/jari/.m2/repository/org/clojure/clojurescript/1.10.741/clojurescript-1.10.741.jar!/cljs/source_map/base64_vlq.clj",1616266886000,"jar:file:/home/jari/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1616266884000,"jar:file:/home/jari/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1616266884000,"jar:file:/home/jari/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1616266884000,"jar:file:/home/jari/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1616266883000,"jar:file:/home/jari/.m2/repository/garden/garden/1.3.6/garden-1.3.6.jar!/garden/util.cljc",1616323557000,"jar:file:/home/jari/.m2/repository/org/clojure/clojurescript/1.10.741/clojurescript-1.10.741.jar!/cljs/analyzer.cljc",1616266886000,"jar:file:/home/jari/.m2/repository/org/clojure/clojurescript/1.10.741/clojurescript-1.10.741.jar!/cljs/compiler.cljc",1616266886000,"jar:file:/home/jari/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1616266883000,"jar:file:/home/jari/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1616266884000,"jar:file:/home/jari/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1616266883000,"jar:file:/home/jari/.m2/repository/org/clojure/clojurescript/1.10.741/clojurescript-1.10.741.jar!/cljs/js_deps.cljc",1616266886000,"jar:file:/home/jari/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1616266884000,"jar:file:/home/jari/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1616266884000,"jar:file:/home/jari/.m2/repository/org/clojure/clojurescript/1.10.741/clojurescript-1.10.741.jar!/cljs/reader.clj",1616266886000,"jar:file:/home/jari/.m2/repository/org/clojure/clojurescript/1.10.741/clojurescript-1.10.741.jar!/cljs/externs.clj",1616266886000,"jar:file:/home/jari/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1616266883000,"jar:file:/home/jari/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1616266883000,"jar:file:/home/jari/.m2/repository/org/clojure/clojurescript/1.10.741/clojurescript-1.10.741.jar!/cljs/tagged_literals.cljc",1616266886000,"jar:file:/home/jari/.m2/repository/garden/garden/1.3.6/garden-1.3.6.jar!/garden/types.cljc",1616323557000,"jar:file:/home/jari/.m2/repository/org/clojure/clojurescript/1.10.741/clojurescript-1.10.741.jar!/cljs/env.cljc",1616266886000,"jar:file:/home/jari/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1616266883000,"jar:file:/home/jari/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/cljs/tools/reader/reader_types.clj",1616266883000,"jar:file:/home/jari/.m2/repository/org/clojure/clojurescript/1.10.741/clojurescript-1.10.741.jar!/cljs/source_map.clj",1616266886000,"jar:file:/home/jari/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1616266884000,"jar:file:/home/jari/.m2/repository/org/clojure/clojurescript/1.10.741/clojurescript-1.10.741.jar!/cljs/source_map/base64.clj",1616266886000,"jar:file:/home/jari/.m2/repository/garden/garden/1.3.6/garden-1.3.6.jar!/garden/units.cljc",1616323557000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","Functions and macros for working with CSS units.","^7","garden/units.cljc","^8",1,"^9",5,"^:",1,"^;",17],"^<",["^ ","^=","^>","^?","^@","^A","^B"],"^C",["^ ","^D","^E"],"^F",["^G",["^H"]],"^I",["^ ","^D",["^ ","^J",["^K",[["^L"],["^L","^M"]]],"^6","Create a suite of functions for unit creation, conversion,\n  validation, and arithmetic.","^8",263,"^9",4,"^7","garden/units.cljc","^N","^O","^P","^E","^Q",true]],"^N","^E","^S",null,"^T",["^ ","^U","^U","^V","^V","^W","^V","^X","^X","^Y","^X","^Z","^Z","^[","^["],"^10",["^G",["^11","^12"]],"^13",["^ ","^14","^U","^15","^V"],"~:defs",["^ ","~$percent",["^ ","^N","^33","^7","garden/units.cljc","^8",300,"^9",1,"^:",300,"^;",17,"^5",["^ ","^7","garden/units.cljc","^8",300,"^9",10,"^:",300,"^;",17],"~:tag","~$function"],"~$make-unit-divider",["^ ","~:protocol-inline",null,"^5",["^ ","^7","garden/units.cljc","^8",244,"^9",7,"^:",244,"^;",24,"^J",["^K",["~$quote",["^K",[["^M"]]]]],"^6","Create a division function for dividing Units."],"^N","^3C","^7","garden/units.cljc","^;",24,"~:method-params",["^K",[["^M"]]],"~:protocol-impl",null,"~:arglists-meta",["^K",[null,null]],"^9",1,"~:variadic?",false,"^8",244,"~:ret-tag","^7Z","^:",244,"~:max-fixed-arity",1,"~:fn-var",true,"^J",["^K",["^81",["^K",[["^M"]]]]],"^6","Create a division function for dividing Units."],"~$mm?",["^ ","^N","^2[","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^7Y","^7Z"],"~$rad-div",["^ ","^N","^57","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",320,"^9",1,"^7Y","^7Z"],"~$ch+",["^ ","^N","^59","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",306,"^9",1,"^7Y","^7Z"],"~$vmax?",["^ ","^N","^3I","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",314,"^9",1,"^7Y","^7Z"],"~$percent*",["^ ","^N","^4S","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",300,"^9",1,"^7Y","^7Z"],"~$dpi-div",["^ ","^N","^3F","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",335,"^9",1,"^7Y","^7Z"],"~$s*",["^ ","^N","^37","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",325,"^9",1,"^7Y","^7Z"],"~$ms",["^ ","^N","^2S","^7","garden/units.cljc","^8",326,"^9",1,"^:",326,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",326,"^9",10,"^:",326,"^;",12],"^7Y","^7Z"],"~$ms*",["^ ","^N","^39","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",326,"^9",1,"^7Y","^7Z"],"~$convertable?",["^ ","^80",null,"^5",["^ ","^7","garden/units.cljc","^8",122,"^9",8,"^:",122,"^;",20,"~:private",true,"^J",["^K",["^81",["^K",[["^M"]]]]],"^6","True if unit is a key of convertable-units, false otherwise."],"^8C",true,"^N","^4@","^7","garden/units.cljc","^;",20,"^82",["^K",[["^M"]]],"^83",null,"^84",["^K",[null,null]],"^9",1,"^85",false,"^8",122,"^86","~$boolean","^:",122,"^87",1,"^88",true,"^J",["^K",["^81",["^K",[["^M"]]]]],"^6","True if unit is a key of convertable-units, false otherwise."],"~$dpcm+",["^ ","^N","^4B","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",336,"^9",1,"^7Y","^7Z"],"~$dppx*",["^ ","^N","^2O","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",337,"^9",1,"^7Y","^7Z"],"~$ch*",["^ ","^N","^4W","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",306,"^9",1,"^7Y","^7Z"],"~$mm+",["^ ","^N","^38","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^7Y","^7Z"],"~$rad",["^ ","^N","^52","^7","garden/units.cljc","^8",320,"^9",1,"^:",320,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",320,"^9",10,"^:",320,"^;",13],"^7Y","^7Z"],"~$px-",["^ ","^N","^2U","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^7Y","^7Z"],"~$cm-div",["^ ","^N","^4I","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^7Y","^7Z"],"~$turn+",["^ ","^N","^4G","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",321,"^9",1,"^7Y","^7Z"],"~$length?",["^ ","^80",null,"^5",["^ ","^7","garden/units.cljc","^8",42,"^9",7,"^:",42,"^;",14,"^J",["^K",["^81",["^K",[["~$x"]]]]]],"^N","^2W","^7","garden/units.cljc","^;",14,"^82",["^K",[["~$x"]]],"^83",null,"^84",["^K",[null,null]],"^9",1,"^85",false,"^8",42,"^86","^8D","^:",42,"^87",1,"^88",true,"^J",["^K",["^81",["^K",[["~$x"]]]]]],"~$grad",["^ ","^N","^5:","^7","garden/units.cljc","^8",319,"^9",1,"^:",319,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",319,"^9",10,"^:",319,"^;",14],"^7Y","^7Z"],"~$dppx-",["^ ","^N","^5P","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",337,"^9",1,"^7Y","^7Z"],"~$percent+",["^ ","^N","^5Q","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",300,"^9",1,"^7Y","^7Z"],"~$em*",["^ ","^N","^5;","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^7Y","^7Z"],"~$ms-",["^ ","^N","^5R","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",326,"^9",1,"^7Y","^7Z"],"~$dpi+",["^ ","^N","^5N","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",335,"^9",1,"^7Y","^7Z"],"~$vh+",["^ ","^N","^3A","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",312,"^9",1,"^7Y","^7Z"],"~$rad*",["^ ","^N","^3G","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",320,"^9",1,"^7Y","^7Z"],"~$kHz-div",["^ ","^N","^5D","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",331,"^9",1,"^7Y","^7Z"],"~$vmax+",["^ ","^N","^4V","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",314,"^9",1,"^7Y","^7Z"],"~$vw-div",["^ ","^N","^4T","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^7Y","^7Z"],"~$mm-",["^ ","^N","^3L","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^7Y","^7Z"],"~$in",["^ ","^N","^4X","^7","garden/units.cljc","^8",296,"^9",1,"^:",296,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",296,"^9",10,"^:",296,"^;",12],"^7Y","^7Z"],"~$pt*",["^ ","^N","^35","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",298,"^9",1,"^7Y","^7Z"],"~$make-unit-subtractor",["^ ","^80",null,"^5",["^ ","^7","garden/units.cljc","^8",212,"^9",7,"^:",212,"^;",27,"^J",["^K",["^81",["^K",[["^M"]]]]],"^6","Create a subtraction function for subtracting Units."],"^N","^42","^7","garden/units.cljc","^;",27,"^82",["^K",[["^M"]]],"^83",null,"^84",["^K",[null,null]],"^9",1,"^85",false,"^8",212,"^86","^7Z","^:",212,"^87",1,"^88",true,"^J",["^K",["^81",["^K",[["^M"]]]]],"^6","Create a subtraction function for subtracting Units."],"~$mm-div",["^ ","^N","^47","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^7Y","^7Z"],"~$vmin",["^ ","^N","^54","^7","garden/units.cljc","^8",313,"^9",1,"^:",313,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",313,"^9",10,"^:",313,"^;",14],"^7Y","^7Z"],"~$mm",["^ ","^N","^3X","^7","garden/units.cljc","^8",295,"^9",1,"^:",295,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",295,"^9",10,"^:",295,"^;",12],"^7Y","^7Z"],"~$em?",["^ ","^N","^3W","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^7Y","^7Z"],"~$cm?",["^ ","^N","^4N","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^7Y","^7Z"],"~$time?",["^ ","^80",null,"^5",["^ ","^7","garden/units.cljc","^8",52,"^9",7,"^:",52,"^;",12,"^J",["^K",["^81",["^K",[["~$x"]]]]]],"^N","^4O","^7","garden/units.cljc","^;",12,"^82",["^K",[["~$x"]]],"^83",null,"^84",["^K",[null,null]],"^9",1,"^85",false,"^8",52,"^86","^8D","^:",52,"^87",1,"^88",true,"^J",["^K",["^81",["^K",[["~$x"]]]]]],"~$dpi?",["^ ","^N","^1X","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",335,"^9",1,"^7Y","^7Z"],"~$make-unit-multiplier",["^ ","^80",null,"^5",["^ ","^7","garden/units.cljc","^8",225,"^9",7,"^:",225,"^;",27,"^J",["^K",["^81",["^K",[["^M"]]]]],"^6","Create a multiplication function for multiplying Units."],"^N","^4<","^7","garden/units.cljc","^;",27,"^82",["^K",[["^M"]]],"^83",null,"^84",["^K",[null,null]],"^9",1,"^85",false,"^8",225,"^86","^7Z","^:",225,"^87",1,"^88",true,"^J",["^K",["^81",["^K",[["^M"]]]]],"^6","Create a multiplication function for multiplying Units."],"~$vmin-",["^ ","^N","^1[","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",313,"^9",1,"^7Y","^7Z"],"~$unit?",["^ ","^80",null,"^5",["^ ","^7","garden/units.cljc","^8",37,"^9",7,"^:",37,"^;",12,"^J",["^K",["^81",["^K",[["~$x"]]]]],"^6","True if x is of type CSSUnit."],"^N","^4?","^7","garden/units.cljc","^;",12,"^82",["^K",[["~$x"]]],"^83",null,"^84",["^K",[null,null]],"^9",1,"^85",false,"^8",37,"^86","^8D","^:",37,"^87",1,"^88",true,"^J",["^K",["^81",["^K",[["~$x"]]]]],"^6","True if x is of type CSSUnit."],"~$deg-div",["^ ","^N","^4>","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",318,"^9",1,"^7Y","^7Z"],"~$vw-",["^ ","^N","^5T","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^7Y","^7Z"],"~$ch-",["^ ","^N","^4R","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",306,"^9",1,"^7Y","^7Z"],"~$kHz",["^ ","^N","^4=","^7","garden/units.cljc","^8",331,"^9",1,"^:",331,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",331,"^9",10,"^:",331,"^;",13],"^7Y","^7Z"],"~$convert",["^ ","^80",null,"^5",["^ ","^7","garden/units.cljc","^8",127,"^9",8,"^:",127,"^;",15,"^8C",true,"^J",["^K",["^81",["^K",[[["^ ","~$m","~:magnitude","~$left","~:unit"],"~$right"]]]]],"^6","Convert a Unit with :unit left to a Unit with :unit right if possible."],"^8C",true,"^N","^4Q","^7","garden/units.cljc","^;",15,"^82",["^K",[["~$p__33620","^9C"]]],"^83",null,"^84",["^K",[null,null]],"^9",1,"^85",false,"^8",127,"^86","^2D","^:",127,"^87",2,"^88",true,"^J",["^K",["^81",["^K",[[["^ ","~$m","^9@","^9A","^9B"],"^9C"]]]]],"^6","Convert a Unit with :unit left to a Unit with :unit right if possible."],"~$resolution?",["^ ","^80",null,"^5",["^ ","^7","garden/units.cljc","^8",62,"^9",7,"^:",62,"^;",18,"^J",["^K",["^81",["^K",[["~$x"]]]]]],"^N","^3Q","^7","garden/units.cljc","^;",18,"^82",["^K",[["~$x"]]],"^83",null,"^84",["^K",[null,null]],"^9",1,"^85",false,"^8",62,"^86","^8D","^:",62,"^87",1,"^88",true,"^J",["^K",["^81",["^K",[["~$x"]]]]]],"~$ch-div",["^ ","^N","^3T","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",306,"^9",1,"^7Y","^7Z"],"~$cm-",["^ ","^N","^3U","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^7Y","^7Z"],"~$pt",["^ ","^N","^5C","^7","garden/units.cljc","^8",298,"^9",1,"^:",298,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",298,"^9",10,"^:",298,"^;",12],"^7Y","^7Z"],"~$frequency-units",["^ ","^N","^3V","^7","garden/units.cljc","^8",29,"^9",1,"^:",29,"^;",21,"^5",["^ ","^7","garden/units.cljc","^8",29,"^9",6,"^:",29,"^;",21],"^7Y","~$cljs.core/ISet"],"~$grad?",["^ ","^N","^5@","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",319,"^9",1,"^7Y","^7Z"],"~$vh?",["^ ","^N","^3M","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",312,"^9",1,"^7Y","^7Z"],"~$make-unit-adder",["^ ","^80",null,"^5",["^ ","^7","garden/units.cljc","^8",198,"^9",7,"^:",198,"^;",22,"^J",["^K",["^81",["^K",[["^M"]]]]],"^6","Create a addition function for adding Units."],"^N","^4D","^7","garden/units.cljc","^;",22,"^82",["^K",[["^M"]]],"^83",null,"^84",["^K",[null,null]],"^9",1,"^85",false,"^8",198,"^86","^7Z","^:",198,"^87",1,"^88",true,"^J",["^K",["^81",["^K",[["^M"]]]]],"^6","Create a addition function for adding Units."],"~$vmin*",["^ ","^N","^1M","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",313,"^9",1,"^7Y","^7Z"],"~$dpcm*",["^ ","^N","^43","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",336,"^9",1,"^7Y","^7Z"],"~$read-unit",["^ ","^80",null,"^5",["^ ","^7","garden/units.cljc","^8",157,"^9",7,"^:",157,"^;",16,"^J",["^K",["^81",["^K",[["~$s"]]]]],"^6","Read a `CSSUnit` object from the string `s`."],"^N","^45","^7","garden/units.cljc","^;",16,"^82",["^K",[["~$s"]]],"^83",null,"^84",["^K",[null,null]],"^9",1,"^85",false,"^8",157,"^86",["^G",["^2D","~$clj-nil"]],"^:",157,"^87",1,"^88",true,"^J",["^K",["^81",["^K",[["~$s"]]]]],"^6","Read a `CSSUnit` object from the string `s`."],"~$pc-",["^ ","^N","^46","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",299,"^9",1,"^7Y","^7Z"],"~$rad-",["^ ","^N","^5I","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",320,"^9",1,"^7Y","^7Z"],"~$px*",["^ ","^N","^2A","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^7Y","^7Z"],"~$rem+",["^ ","^N","^4L","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",307,"^9",1,"^7Y","^7Z"],"~$Hz-",["^ ","^N","^4K","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",330,"^9",1,"^7Y","^7Z"],"~$length-units",["^ ","^N","^5<","^7","garden/units.cljc","^8",20,"^9",1,"^:",20,"^;",18,"^5",["^ ","^7","garden/units.cljc","^8",20,"^9",6,"^:",20,"^;",18],"^7Y","^9J"],"~$Hz+",["^ ","^N","^2H","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",330,"^9",1,"^7Y","^7Z"],"~$pc?",["^ ","^N","^1Z","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",299,"^9",1,"^7Y","^7Z"],"~$pt-div",["^ ","^N","^2E","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",298,"^9",1,"^7Y","^7Z"],"~$grad*",["^ ","^N","^1W","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",319,"^9",1,"^7Y","^7Z"],"~$s+",["^ ","^N","^2B","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",325,"^9",1,"^7Y","^7Z"],"~$vh*",["^ ","^N","^22","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",312,"^9",1,"^7Y","^7Z"],"~$s?",["^ ","^N","^5=","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",325,"^9",1,"^7Y","^7Z"],"~$turn-div",["^ ","^N","^25","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",321,"^9",1,"^7Y","^7Z"],"~$vh-",["^ ","^N","^4P","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",312,"^9",1,"^7Y","^7Z"],"~$ex+",["^ ","^N","^24","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",305,"^9",1,"^7Y","^7Z"],"~$em+",["^ ","^N","^4C","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^7Y","^7Z"],"~$vmax-",["^ ","^N","^1P","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",314,"^9",1,"^7Y","^7Z"],"~$frequency?",["^ ","^80",null,"^5",["^ ","^7","garden/units.cljc","^8",57,"^9",7,"^:",57,"^;",17,"^J",["^K",["^81",["^K",[["~$x"]]]]]],"^N","^1Q","^7","garden/units.cljc","^;",17,"^82",["^K",[["~$x"]]],"^83",null,"^84",["^K",[null,null]],"^9",1,"^85",false,"^8",57,"^86","^8D","^:",57,"^87",1,"^88",true,"^J",["^K",["^81",["^K",[["~$x"]]]]]],"~$vmin+",["^ ","^N","^4[","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",313,"^9",1,"^7Y","^7Z"],"~$deg+",["^ ","^N","^1R","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",318,"^9",1,"^7Y","^7Z"],"~$grad+",["^ ","^N","^2;","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",319,"^9",1,"^7Y","^7Z"],"~$dpi*",["^ ","^N","^55","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",335,"^9",1,"^7Y","^7Z"],"~$pt-",["^ ","^N","^2<","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",298,"^9",1,"^7Y","^7Z"],"~$deg*",["^ ","^N","^5O","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",318,"^9",1,"^7Y","^7Z"],"~$vmax*",["^ ","^N","^58","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",314,"^9",1,"^7Y","^7Z"],"~$grad-",["^ ","^N","^2Z","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",319,"^9",1,"^7Y","^7Z"],"~$vmin?",["^ ","^N","^56","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",313,"^9",1,"^7Y","^7Z"],"~$Hz*",["^ ","^N","^2@","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",330,"^9",1,"^7Y","^7Z"],"~$vw+",["^ ","^N","^2G","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^7Y","^7Z"],"~$vw?",["^ ","^N","^5V","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^7Y","^7Z"],"~$pt+",["^ ","^N","^2M","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",298,"^9",1,"^7Y","^7Z"],"~$in?",["^ ","^N","^2L","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^7Y","^7Z"],"~$dpcm-div",["^ ","^N","^5>","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",336,"^9",1,"^7Y","^7Z"],"~$ex*",["^ ","^N","^34","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",305,"^9",1,"^7Y","^7Z"],"~$Hz?",["^ ","^N","^5?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",330,"^9",1,"^7Y","^7Z"],"~$px+",["^ ","^N","^28","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^7Y","^7Z"],"~$s-div",["^ ","^N","^2P","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",325,"^9",1,"^7Y","^7Z"],"^H",["^ ","^N","^5E","^7","garden/units.cljc","^8",307,"^9",1,"^:",307,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",307,"^9",10,"^:",307,"^;",13],"^7Y","^7Z"],"~$em",["^ ","^N","^50","^7","garden/units.cljc","^8",304,"^9",1,"^:",304,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",304,"^9",10,"^:",304,"^;",12],"^7Y","^7Z"],"~$em-div",["^ ","^N","^4Y","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^7Y","^7Z"],"~$make-unit-fn",["^ ","^80",null,"^5",["^ ","^7","garden/units.cljc","^8",170,"^9",7,"^:",170,"^;",19,"^J",["^K",["^81",["^K",[["^M"]]]]],"^6","Creates a function for creating and converting `CSSUnit`s for the\n  given unit. If a number n is passed the function it will produce a\n  new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n  is passed the function will attempt to convert it."],"^N","^4Z","^7","garden/units.cljc","^;",19,"^82",["^K",[["^M"]]],"^83",null,"^84",["^K",[null,null]],"^9",1,"^85",false,"^8",170,"^86","^7Z","^:",170,"^87",1,"^88",true,"^J",["^K",["^81",["^K",[["^M"]]]]],"^6","Creates a function for creating and converting `CSSUnit`s for the\n  given unit. If a number n is passed the function it will produce a\n  new `CSSUnit` record with a the magnitude set to n. If a `CSSUnit`\n  is passed the function will attempt to convert it."],"~$dppx",["^ ","^N","^4U","^7","garden/units.cljc","^8",337,"^9",1,"^:",337,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",337,"^9",10,"^:",337,"^;",14],"^7Y","^7Z"],"~$px",["^ ","^N","^29","^7","garden/units.cljc","^8",297,"^9",1,"^:",297,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",297,"^9",10,"^:",297,"^;",12],"^7Y","^7Z"],"~$px?",["^ ","^N","^2=","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^7Y","^7Z"],"~$vmax-div",["^ ","^N","^5J","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",314,"^9",1,"^7Y","^7Z"],"~$rem?",["^ ","^N","^2?","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",307,"^9",1,"^7Y","^7Z"],"~$vmin-div",["^ ","^N","^5K","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",313,"^9",1,"^7Y","^7Z"],"~$Hz",["^ ","^N","^53","^7","garden/units.cljc","^8",330,"^9",1,"^:",330,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",330,"^9",10,"^:",330,"^;",12],"^7Y","^7Z"],"~$in*",["^ ","^N","^51","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^7Y","^7Z"],"~$dpcm",["^ ","^N","^5H","^7","garden/units.cljc","^8",336,"^9",1,"^:",336,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",336,"^9",10,"^:",336,"^;",14],"^7Y","^7Z"],"~$dppx+",["^ ","^N","^5G","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",337,"^9",1,"^7Y","^7Z"],"~$ms?",["^ ","^N","^21","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",326,"^9",1,"^7Y","^7Z"],"~$pc",["^ ","^N","^2Y","^7","garden/units.cljc","^8",299,"^9",1,"^:",299,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",299,"^9",10,"^:",299,"^;",12],"^7Y","^7Z"],"~$pt?",["^ ","^N","^31","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",298,"^9",1,"^7Y","^7Z"],"~$dppx-div",["^ ","^N","^32","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",337,"^9",1,"^7Y","^7Z"],"~$kHz*",["^ ","^N","^3@","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",331,"^9",1,"^7Y","^7Z"],"~$dpi-",["^ ","^N","^30","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",335,"^9",1,"^7Y","^7Z"],"~$px-div",["^ ","^N","^1Y","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",297,"^9",1,"^7Y","^7Z"],"~$mm*",["^ ","^N","^3D","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",295,"^9",1,"^7Y","^7Z"],"~$in-",["^ ","^N","^26","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^7Y","^7Z"],"~$pc-div",["^ ","^N","^5U","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",299,"^9",1,"^7Y","^7Z"],"~$s",["^ ","^N","^5S","^7","garden/units.cljc","^8",325,"^9",1,"^:",325,"^;",11,"^5",["^ ","^7","garden/units.cljc","^8",325,"^9",10,"^:",325,"^;",11],"^7Y","^7Z"],"~$vh",["^ ","^N","^23","^7","garden/units.cljc","^8",312,"^9",1,"^:",312,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",312,"^9",10,"^:",312,"^;",12],"^7Y","^7Z"],"~$pc*",["^ ","^N","^3:","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",299,"^9",1,"^7Y","^7Z"],"~$pc+",["^ ","^N","^2R","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",299,"^9",1,"^7Y","^7Z"],"~$ms+",["^ ","^N","^2Q","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",326,"^9",1,"^7Y","^7Z"],"~$kHz+",["^ ","^N","^5F","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",331,"^9",1,"^7Y","^7Z"],"~$vw",["^ ","^N","^2T","^7","garden/units.cljc","^8",311,"^9",1,"^:",311,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",311,"^9",10,"^:",311,"^;",12],"^7Y","^7Z"],"~$deg",["^ ","^N","^3<","^7","garden/units.cljc","^8",318,"^9",1,"^:",318,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",318,"^9",10,"^:",318,"^;",13],"^7Y","^7Z"],"~$vw*",["^ ","^N","^5A","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",311,"^9",1,"^7Y","^7Z"],"~$kHz-",["^ ","^N","^2N","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",331,"^9",1,"^7Y","^7Z"],"~$ch",["^ ","^N","^3;","^7","garden/units.cljc","^8",306,"^9",1,"^:",306,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",306,"^9",10,"^:",306,"^;",12],"^7Y","^7Z"],"~$angular-units",["^ ","^N","^5B","^7","garden/units.cljc","^8",23,"^9",1,"^:",23,"^;",19,"^5",["^ ","^7","garden/units.cljc","^8",23,"^9",6,"^:",23,"^;",19],"^7Y","^9J"],"~$dpcm-",["^ ","^N","^3>","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",336,"^9",1,"^7Y","^7Z"],"~$turn",["^ ","^N","^3?","^7","garden/units.cljc","^8",321,"^9",1,"^:",321,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",321,"^9",10,"^:",321,"^;",14],"^7Y","^7Z"],"~$turn-",["^ ","^N","^1U","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",321,"^9",1,"^7Y","^7Z"],"~$Hz-div",["^ ","^N","^1V","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",330,"^9",1,"^7Y","^7Z"],"~$in+",["^ ","^N","^2V","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^7Y","^7Z"],"~$dpi",["^ ","^N","^1S","^7","garden/units.cljc","^8",335,"^9",1,"^:",335,"^;",13,"^5",["^ ","^7","garden/units.cljc","^8",335,"^9",10,"^:",335,"^;",13],"^7Y","^7Z"],"~$cm",["^ ","^N","^2X","^7","garden/units.cljc","^8",294,"^9",1,"^:",294,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",294,"^9",10,"^:",294,"^;",12],"^7Y","^7Z"],"~$cm*",["^ ","^N","^3E","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^7Y","^7Z"],"~$angle?",["^ ","^80",null,"^5",["^ ","^7","garden/units.cljc","^8",47,"^9",7,"^:",47,"^;",13,"^J",["^K",["^81",["^K",[["~$x"]]]]]],"^N","^3B","^7","garden/units.cljc","^;",13,"^82",["^K",[["~$x"]]],"^83",null,"^84",["^K",[null,null]],"^9",1,"^85",false,"^8",47,"^86","^8D","^:",47,"^87",1,"^88",true,"^J",["^K",["^81",["^K",[["~$x"]]]]]],"~$ex?",["^ ","^N","^20","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",305,"^9",1,"^7Y","^7Z"],"~$grad-div",["^ ","^N","^49","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",319,"^9",1,"^7Y","^7Z"],"~$rem-",["^ ","^N","^3H","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",307,"^9",1,"^7Y","^7Z"],"~$deg?",["^ ","^N","^3R","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",318,"^9",1,"^7Y","^7Z"],"~$ms-div",["^ ","^N","^1O","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",326,"^9",1,"^7Y","^7Z"],"~$s-",["^ ","^N","^3S","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",325,"^9",1,"^7Y","^7Z"],"~$resolution-units",["^ ","^N","^1N","^7","garden/units.cljc","^8",32,"^9",1,"^:",32,"^;",22,"^5",["^ ","^7","garden/units.cljc","^8",32,"^9",6,"^:",32,"^;",22],"^7Y","^9J"],"~$cm+",["^ ","^N","^3P","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",294,"^9",1,"^7Y","^7Z"],"~$ex",["^ ","^N","^1L","^7","garden/units.cljc","^8",305,"^9",1,"^:",305,"^;",12,"^5",["^ ","^7","garden/units.cljc","^8",305,"^9",10,"^:",305,"^;",12],"^7Y","^7Z"],"~$dpcm?",["^ ","^N","^36","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",336,"^9",1,"^7Y","^7Z"],"~$rem*",["^ ","^N","^3N","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",307,"^9",1,"^7Y","^7Z"],"~$ch?",["^ ","^N","^41","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",306,"^9",1,"^7Y","^7Z"],"~$kHz?",["^ ","^N","^3[","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",331,"^9",1,"^7Y","^7Z"],"~$rem-div",["^ ","^N","^3Y","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",307,"^9",1,"^7Y","^7Z"],"~$conversions",["^ ","^5",["^ ","^7","garden/units.cljc","^8",71,"^9",3,"^:",71,"^;",14,"^8C",true,"^6","Map associating CSS unit types to their conversion values."],"^8C",true,"^N","^48","^7","garden/units.cljc","^;",14,"^9",1,"^8",69,"^:",71,"^7Y","~$cljs.core/IMap","^6","Map associating CSS unit types to their conversion values."],"~$dppx?",["^ ","^N","^2F","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",337,"^9",1,"^7Y","^7Z"],"~$percent-div",["^ ","^N","^4M","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",300,"^9",1,"^7Y","^7Z"],"~$deg-",["^ ","^N","^4:","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",318,"^9",1,"^7Y","^7Z"],"~$rad?",["^ ","^N","^2C","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",320,"^9",1,"^7Y","^7Z"],"~$percent-",["^ ","^N","^4;","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",300,"^9",1,"^7Y","^7Z"],"~$turn*",["^ ","^N","^2I","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",321,"^9",1,"^7Y","^7Z"],"~$time-units",["^ ","^N","^2K","^7","garden/units.cljc","^8",26,"^9",1,"^:",26,"^;",16,"^5",["^ ","^7","garden/units.cljc","^8",26,"^9",6,"^:",26,"^;",16],"^7Y","^9J"],"~$make-unit-predicate",["^ ","^80",null,"^5",["^ ","^7","garden/units.cljc","^8",165,"^9",7,"^:",165,"^;",26,"^J",["^K",["^81",["^K",[["^M"]]]]],"^6","Creates a function for verifying the given unit type."],"^N","^3K","^7","garden/units.cljc","^;",26,"^82",["^K",[["^M"]]],"^83",null,"^84",["^K",[null,null]],"^9",1,"^85",false,"^8",165,"^86","^7Z","^:",165,"^87",1,"^88",true,"^J",["^K",["^81",["^K",[["^M"]]]]],"^6","Creates a function for verifying the given unit type."],"~$in-div",["^ ","^N","^27","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",296,"^9",1,"^7Y","^7Z"],"~$ex-div",["^ ","^N","^3J","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",305,"^9",1,"^7Y","^7Z"],"~$turn?",["^ ","^N","^3O","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",321,"^9",1,"^7Y","^7Z"],"~$unit-re",["^ ","^5",["^ ","^7","garden/units.cljc","^8",154,"^9",3,"^:",154,"^;",10,"^6","Regular expression for matching a CSS unit. The magnitude\n             and unit are captured.","^8C",true],"^8C",true,"^N","^4A","^7","garden/units.cljc","^;",10,"^9",1,"^8",151,"^:",154,"^7Y","~$any","^6","Regular expression for matching a CSS unit. The magnitude\n             and unit are captured."],"~$vh-div",["^ ","^N","^44","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",312,"^9",1,"^7Y","^7Z"],"~$percent?",["^ ","^N","^4F","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",300,"^9",1,"^7Y","^7Z"],"~$rad+",["^ ","^N","^3Z","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",320,"^9",1,"^7Y","^7Z"],"~$vmax",["^ ","^N","^2>","^7","garden/units.cljc","^8",314,"^9",1,"^:",314,"^;",14,"^5",["^ ","^7","garden/units.cljc","^8",314,"^9",10,"^:",314,"^;",14],"^7Y","^7Z"],"~$em-",["^ ","^N","^4H","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",304,"^9",1,"^7Y","^7Z"],"~$ex-",["^ ","^N","^40","^5",["^ ","^7",null],"^7","garden/units.cljc","^8",305,"^9",1,"^7Y","^7Z"]],"^12",["^ ","^E","^E","^Z","^Z","^U","^U"],"~:cljs.analyzer/constants",["^ ","^10",["^G",["~:mm","~:vmin","~:kHz","~:given","~:pt","~:else","^9B","~:%","~:px","~:rem","~:em","~:dppx","~:dpcm","~:type","~:Hz","~:pc","^9@","~:vh","~:s","~:ch","~:vw","~:deg","~:dpi","~:cm","~:turn","~:ex","~:vmax","~:ms","~:rad","~:grad","~:in"]],"~:order",["^<C","^<G","^<I","^<P","^<V","^=1","^<T","^<W","^<[","^=0","~:s","^<Z","^<E","^<O","^<L","^<M","^<U","^9B","^<J","^<K","^9@","^<H","^<F","^<N","~:%","^<X","^<R","^<S","^<Q","^<D","^<Y"]],"^1<",["^ ","^11",["^G",[]],"^12",["^G",[]]],"^1=",["^ "],"^1>",["^[","^Z","^U","^V","^X"]],"^P","^E","~:ns-specs",["^ "],"~:ns-spec-vars",["^G",[]],"~:compiler-options",["^5X",[["^=5","~:static-fns"],true,["^=5","~:shadow-tweaks"],null,["^=5","~:source-map-inline"],null,["^=5","~:elide-asserts"],false,["^=5","~:optimize-constants"],null,["^=5","^1C"],null,["^=5","~:external-config"],null,["^=5","~:tooling-config"],null,["^=5","~:emit-constants"],null,["^=5","~:load-tests"],null,["^=5","~:form-size-threshold"],null,["^=5","~:infer-externs"],true,["^=5","^1E"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^=5","~:fn-invoke-direct"],null,["^=5","~:source-map"],"/dev/null"]]]